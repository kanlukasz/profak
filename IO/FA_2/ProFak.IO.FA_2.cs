//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 3.0.1185.0 using the following command:
// XmlSchemaClassGenerator.Console --nullable --namespace=ProFak.IO.FA_2 --namingScheme=Direct http://crd.gov.pl/wzor/2023/06/29/12648/schemat.xsd
namespace ProFak.IO.FA_2
{
    
    
    /// <summary>
    /// <para>Słownik kodów krajów</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Słownik kodów krajów")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TKodKraju", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    public enum TKodKraju
    {
        
        /// <summary>
        /// <para>AFGANISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AFGANISTAN")]
        AF,
        
        /// <summary>
        /// <para>ALAND ISLANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALAND ISLANDS")]
        AX,
        
        /// <summary>
        /// <para>ALBANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALBANIA")]
        AL,
        
        /// <summary>
        /// <para>ALGIERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALGIERIA")]
        DZ,
        
        /// <summary>
        /// <para>ANDORA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANDORA")]
        AD,
        
        /// <summary>
        /// <para>ANGOLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANGOLA")]
        AO,
        
        /// <summary>
        /// <para>ANGUILLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANGUILLA")]
        AI,
        
        /// <summary>
        /// <para>ANTARKTYDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTARKTYDA")]
        AQ,
        
        /// <summary>
        /// <para>ANTIGUA I BARBUDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTIGUA I BARBUDA")]
        AG,
        
        /// <summary>
        /// <para>ANTYLE HOLENDERSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTYLE HOLENDERSKIE")]
        AN,
        
        /// <summary>
        /// <para>ARABIA SAUDYJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARABIA SAUDYJSKA")]
        SA,
        
        /// <summary>
        /// <para>ARGENTYNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARGENTYNA")]
        AR,
        
        /// <summary>
        /// <para>ARMENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARMENIA")]
        AM,
        
        /// <summary>
        /// <para>ARUBA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARUBA")]
        AW,
        
        /// <summary>
        /// <para>AUSTRALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUSTRALIA")]
        AU,
        
        /// <summary>
        /// <para>AUSTRIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUSTRIA")]
        AT,
        
        /// <summary>
        /// <para>AZERBEJDŻAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AZERBEJDŻAN")]
        AZ,
        
        /// <summary>
        /// <para>BAHAMY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAHAMY")]
        BS,
        
        /// <summary>
        /// <para>BAHRAJN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAHRAJN")]
        BH,
        
        /// <summary>
        /// <para>BANGLADESZ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BANGLADESZ")]
        BD,
        
        /// <summary>
        /// <para>BARBADOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BARBADOS")]
        BB,
        
        /// <summary>
        /// <para>BELGIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BELGIA")]
        BE,
        
        /// <summary>
        /// <para>BELIZE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BELIZE")]
        BZ,
        
        /// <summary>
        /// <para>BENIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BENIN")]
        BJ,
        
        /// <summary>
        /// <para>BERMUDY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BERMUDY")]
        BM,
        
        /// <summary>
        /// <para>BHUTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BHUTAN")]
        BT,
        
        /// <summary>
        /// <para>BIAŁORUŚ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BIAŁORUŚ")]
        BY,
        
        /// <summary>
        /// <para>BOLIWIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOLIWIA")]
        BO,
        
        /// <summary>
        /// <para>BONAIRE, SINT EUSTATIUS I SABA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BONAIRE, SINT EUSTATIUS I SABA")]
        BQ,
        
        /// <summary>
        /// <para>BOŚNIA I HERCEGOWINA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOŚNIA I HERCEGOWINA")]
        BA,
        
        /// <summary>
        /// <para>BOTSWANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOTSWANA")]
        BW,
        
        /// <summary>
        /// <para>BRAZYLIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRAZYLIA")]
        BR,
        
        /// <summary>
        /// <para>BRUNEI DARUSSALAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRUNEI DARUSSALAM")]
        BN,
        
        /// <summary>
        /// <para>BRYTYJSKIE TERYTORIUM OCEANU INDYJSKIEGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRYTYJSKIE TERYTORIUM OCEANU INDYJSKIEGO")]
        IO,
        
        /// <summary>
        /// <para>BUŁGARIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUŁGARIA")]
        BG,
        
        /// <summary>
        /// <para>BURKINA FASO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BURKINA FASO")]
        BF,
        
        /// <summary>
        /// <para>BURUNDI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BURUNDI")]
        BI,
        
        /// <summary>
        /// <para>CEUTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CEUTA")]
        XC,
        
        /// <summary>
        /// <para>CHILE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHILE")]
        CL,
        
        /// <summary>
        /// <para>CHINY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHINY")]
        CN,
        
        /// <summary>
        /// <para>CHORWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHORWACJA")]
        HR,
        
        /// <summary>
        /// <para>CURAÇAO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CURAÇAO")]
        CW,
        
        /// <summary>
        /// <para>CYPR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CYPR")]
        CY,
        
        /// <summary>
        /// <para>CZAD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CZAD")]
        TD,
        
        /// <summary>
        /// <para>CZARNOGÓRA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CZARNOGÓRA")]
        ME,
        
        /// <summary>
        /// <para>DANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DANIA")]
        DK,
        
        /// <summary>
        /// <para>DOMINIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOMINIKA")]
        DM,
        
        /// <summary>
        /// <para>DOMINIKANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOMINIKANA")]
        DO,
        
        /// <summary>
        /// <para>DŻIBUTI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DŻIBUTI")]
        DJ,
        
        /// <summary>
        /// <para>EGIPT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EGIPT")]
        EG,
        
        /// <summary>
        /// <para>EKWADOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EKWADOR")]
        EC,
        
        /// <summary>
        /// <para>ERYTREA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ERYTREA")]
        ER,
        
        /// <summary>
        /// <para>ESTONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ESTONIA")]
        EE,
        
        /// <summary>
        /// <para>ETIOPIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ETIOPIA")]
        ET,
        
        /// <summary>
        /// <para>FALKLANDY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FALKLANDY")]
        FK,
        
        /// <summary>
        /// <para>FIDŻI REPUBLIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FIDŻI REPUBLIKA")]
        FJ,
        
        /// <summary>
        /// <para>FILIPINY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FILIPINY")]
        PH,
        
        /// <summary>
        /// <para>FINLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINLANDIA")]
        FI,
        
        /// <summary>
        /// <para>FRANCJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANCJA")]
        FR,
        
        /// <summary>
        /// <para>FRANCUSKIE TERYTORIUM POŁUDNIOWE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANCUSKIE TERYTORIUM POŁUDNIOWE")]
        TF,
        
        /// <summary>
        /// <para>GABON</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GABON")]
        GA,
        
        /// <summary>
        /// <para>GAMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GAMBIA")]
        GM,
        
        /// <summary>
        /// <para>GHANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GHANA")]
        GH,
        
        /// <summary>
        /// <para>GIBRALTAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GIBRALTAR")]
        GI,
        
        /// <summary>
        /// <para>GRECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRECJA")]
        GR,
        
        /// <summary>
        /// <para>GRENADA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRENADA")]
        GD,
        
        /// <summary>
        /// <para>GRENLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRENLANDIA")]
        GL,
        
        /// <summary>
        /// <para>GRUZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRUZJA")]
        GE,
        
        /// <summary>
        /// <para>GUAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUAM")]
        GU,
        
        /// <summary>
        /// <para>GUERNSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUERNSEY")]
        GG,
        
        /// <summary>
        /// <para>GUJANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUJANA")]
        GY,
        
        /// <summary>
        /// <para>GUJANA FRANCUSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUJANA FRANCUSKA")]
        GF,
        
        /// <summary>
        /// <para>GWADELUPA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWADELUPA")]
        GP,
        
        /// <summary>
        /// <para>GWATEMALA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWATEMALA")]
        GT,
        
        /// <summary>
        /// <para>GWINEA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA")]
        GN,
        
        /// <summary>
        /// <para>GWINEA RÓWNIKOWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA RÓWNIKOWA")]
        GQ,
        
        /// <summary>
        /// <para>GWINEA-BISSAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA-BISSAU")]
        GW,
        
        /// <summary>
        /// <para>HAITI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HAITI")]
        HT,
        
        /// <summary>
        /// <para>HISZPANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HISZPANIA")]
        ES,
        
        /// <summary>
        /// <para>HONDURAS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HONDURAS")]
        HN,
        
        /// <summary>
        /// <para>HONGKONG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HONGKONG")]
        HK,
        
        /// <summary>
        /// <para>INDIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INDIE")]
        IN,
        
        /// <summary>
        /// <para>INDONEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INDONEZJA")]
        ID,
        
        /// <summary>
        /// <para>IRAK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRAK")]
        IQ,
        
        /// <summary>
        /// <para>IRAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRAN")]
        IR,
        
        /// <summary>
        /// <para>IRLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRLANDIA")]
        IE,
        
        /// <summary>
        /// <para>ISLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ISLANDIA")]
        IS,
        
        /// <summary>
        /// <para>IZRAEL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IZRAEL")]
        IL,
        
        /// <summary>
        /// <para>JAMAJKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JAMAJKA")]
        JM,
        
        /// <summary>
        /// <para>JAPONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JAPONIA")]
        JP,
        
        /// <summary>
        /// <para>JEMEN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JEMEN")]
        YE,
        
        /// <summary>
        /// <para>JERSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JERSEY")]
        JE,
        
        /// <summary>
        /// <para>JORDANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JORDANIA")]
        JO,
        
        /// <summary>
        /// <para>KAJMANY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAJMANY")]
        KY,
        
        /// <summary>
        /// <para>KAMBODŻA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAMBODŻA")]
        KH,
        
        /// <summary>
        /// <para>KAMERUN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAMERUN")]
        CM,
        
        /// <summary>
        /// <para>KANADA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KANADA")]
        CA,
        
        /// <summary>
        /// <para>KATAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KATAR")]
        QA,
        
        /// <summary>
        /// <para>KAZACHSTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAZACHSTAN")]
        KZ,
        
        /// <summary>
        /// <para>KENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KENIA")]
        KE,
        
        /// <summary>
        /// <para>KIRGISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KIRGISTAN")]
        KG,
        
        /// <summary>
        /// <para>KIRIBATI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KIRIBATI")]
        KI,
        
        /// <summary>
        /// <para>KOLUMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOLUMBIA")]
        CO,
        
        /// <summary>
        /// <para>KOMORY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOMORY")]
        KM,
        
        /// <summary>
        /// <para>KONGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KONGO")]
        CG,
        
        /// <summary>
        /// <para>KONGO, REPUBLIKA DEMOKRATYCZNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KONGO, REPUBLIKA DEMOKRATYCZNA")]
        CD,
        
        /// <summary>
        /// <para>KOREAŃSKA REPUBLIKA LUDOWO-DEMOKRATYCZNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOREAŃSKA REPUBLIKA LUDOWO-DEMOKRATYCZNA")]
        KP,
        
        /// <summary>
        /// <para>KOSOWO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOSOWO")]
        XK,
        
        /// <summary>
        /// <para>KOSTARYKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOSTARYKA")]
        CR,
        
        /// <summary>
        /// <para>KUBA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KUBA")]
        CU,
        
        /// <summary>
        /// <para>KUWEJT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KUWEJT")]
        KW,
        
        /// <summary>
        /// <para>LAOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LAOS")]
        LA,
        
        /// <summary>
        /// <para>LESOTHO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LESOTHO")]
        LS,
        
        /// <summary>
        /// <para>LIBAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBAN")]
        LB,
        
        /// <summary>
        /// <para>LIBERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBERIA")]
        LR,
        
        /// <summary>
        /// <para>LIBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBIA")]
        LY,
        
        /// <summary>
        /// <para>LIECHTENSTEIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIECHTENSTEIN")]
        LI,
        
        /// <summary>
        /// <para>LITWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LITWA")]
        LT,
        
        /// <summary>
        /// <para>ŁOTWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ŁOTWA")]
        LV,
        
        /// <summary>
        /// <para>LUKSEMBURG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LUKSEMBURG")]
        LU,
        
        /// <summary>
        /// <para>MACEDONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MACEDONIA")]
        MK,
        
        /// <summary>
        /// <para>MADAGASKAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MADAGASKAR")]
        MG,
        
        /// <summary>
        /// <para>MAJOTTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAJOTTA")]
        YT,
        
        /// <summary>
        /// <para>MAKAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAKAU")]
        MO,
        
        /// <summary>
        /// <para>MALAWI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALAWI")]
        MW,
        
        /// <summary>
        /// <para>MALEDIWY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALEDIWY")]
        MV,
        
        /// <summary>
        /// <para>MALEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALEZJA")]
        MY,
        
        /// <summary>
        /// <para>MALI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALI")]
        ML,
        
        /// <summary>
        /// <para>MALTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALTA")]
        MT,
        
        /// <summary>
        /// <para>MARIANY PÓŁNOCNE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARIANY PÓŁNOCNE")]
        MP,
        
        /// <summary>
        /// <para>MAROKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAROKO")]
        MA,
        
        /// <summary>
        /// <para>MARTYNIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARTYNIKA")]
        MQ,
        
        /// <summary>
        /// <para>MAURETANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAURETANIA")]
        MR,
        
        /// <summary>
        /// <para>MAURITIUS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAURITIUS")]
        MU,
        
        /// <summary>
        /// <para>MEKSYK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEKSYK")]
        MX,
        
        /// <summary>
        /// <para>MELILLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MELILLA")]
        XL,
        
        /// <summary>
        /// <para>MIKRONEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MIKRONEZJA")]
        FM,
        
        /// <summary>
        /// <para>MINOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINOR")]
        UM,
        
        /// <summary>
        /// <para>MOŁDOWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOŁDOWA")]
        MD,
        
        /// <summary>
        /// <para>MONAKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONAKO")]
        MC,
        
        /// <summary>
        /// <para>MONGOLIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONGOLIA")]
        MN,
        
        /// <summary>
        /// <para>MONTSERRAT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONTSERRAT")]
        MS,
        
        /// <summary>
        /// <para>MOZAMBIK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOZAMBIK")]
        MZ,
        
        /// <summary>
        /// <para>MYANMAR (BURMA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MYANMAR (BURMA)")]
        MM,
        
        /// <summary>
        /// <para>NAMIBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAMIBIA")]
        NA,
        
        /// <summary>
        /// <para>NAURU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAURU")]
        NR,
        
        /// <summary>
        /// <para>NEPAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NEPAL")]
        NP,
        
        /// <summary>
        /// <para>NIDERLANDY (HOLANDIA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIDERLANDY (HOLANDIA)")]
        NL,
        
        /// <summary>
        /// <para>NIEMCY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIEMCY")]
        DE,
        
        /// <summary>
        /// <para>NIGER</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIGER")]
        NE,
        
        /// <summary>
        /// <para>NIGERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIGERIA")]
        NG,
        
        /// <summary>
        /// <para>NIKARAGUA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIKARAGUA")]
        NI,
        
        /// <summary>
        /// <para>NIUE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIUE")]
        NU,
        
        /// <summary>
        /// <para>NORFOLK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NORFOLK")]
        NF,
        
        /// <summary>
        /// <para>NORWEGIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NORWEGIA")]
        NO,
        
        /// <summary>
        /// <para>NOWA KALEDONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NOWA KALEDONIA")]
        NC,
        
        /// <summary>
        /// <para>NOWA ZELANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NOWA ZELANDIA")]
        NZ,
        
        /// <summary>
        /// <para>OKUPOWANE TERYTORIUM PALESTYNY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OKUPOWANE TERYTORIUM PALESTYNY")]
        PS,
        
        /// <summary>
        /// <para>OMAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OMAN")]
        OM,
        
        /// <summary>
        /// <para>PAKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAKISTAN")]
        PK,
        
        /// <summary>
        /// <para>PALAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PALAU")]
        PW,
        
        /// <summary>
        /// <para>PANAMA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PANAMA")]
        PA,
        
        /// <summary>
        /// <para>PAPUA NOWA GWINEA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAPUA NOWA GWINEA")]
        PG,
        
        /// <summary>
        /// <para>PARAGWAJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PARAGWAJ")]
        PY,
        
        /// <summary>
        /// <para>PERU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PERU")]
        PE,
        
        /// <summary>
        /// <para>PITCAIRN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PITCAIRN")]
        PN,
        
        /// <summary>
        /// <para>POLINEZJA FRANCUSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLINEZJA FRANCUSKA")]
        PF,
        
        /// <summary>
        /// <para>POLSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLSKA")]
        PL,
        
        /// <summary>
        /// <para>POŁUDNIOWA GEORGIA I POŁUD.WYSPY SANDWICH</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POŁUDNIOWA GEORGIA I POŁUD.WYSPY SANDWICH")]
        GS,
        
        /// <summary>
        /// <para>PORTUGALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PORTUGALIA")]
        PT,
        
        /// <summary>
        /// <para>PORTORYKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PORTORYKO")]
        PR,
        
        /// <summary>
        /// <para>REP.ŚRODKOWOAFRYKAŃSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REP.ŚRODKOWOAFRYKAŃSKA")]
        CF,
        
        /// <summary>
        /// <para>REPUBLIKA CZESKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA CZESKA")]
        CZ,
        
        /// <summary>
        /// <para>REPUBLIKA KOREI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA KOREI")]
        KR,
        
        /// <summary>
        /// <para>REPUBLIKA POŁUDNIOWEJ AFRYKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA POŁUDNIOWEJ AFRYKI")]
        ZA,
        
        /// <summary>
        /// <para>REUNION</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REUNION")]
        RE,
        
        /// <summary>
        /// <para>ROSJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ROSJA")]
        RU,
        
        /// <summary>
        /// <para>RUMUNIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUMUNIA")]
        RO,
        
        /// <summary>
        /// <para>RWANDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RWANDA")]
        RW,
        
        /// <summary>
        /// <para>SAHARA ZACHODNIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAHARA ZACHODNIA")]
        EH,
        
        /// <summary>
        /// <para>SAINT BARTHELEMY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT BARTHELEMY")]
        BL,
        
        /// <summary>
        /// <para>SAINT KITTS I NEVIS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT KITTS I NEVIS")]
        KN,
        
        /// <summary>
        /// <para>SAINT LUCIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT LUCIA")]
        LC,
        
        /// <summary>
        /// <para>SAINT MARTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT MARTIN")]
        MF,
        
        /// <summary>
        /// <para>SAINT VINCENT I GRENADYNY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT VINCENT I GRENADYNY")]
        VC,
        
        /// <summary>
        /// <para>SALWADOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALWADOR")]
        SV,
        
        /// <summary>
        /// <para>SAMOA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAMOA")]
        WS,
        
        /// <summary>
        /// <para>SAMOA AMERYKAŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAMOA AMERYKAŃSKIE")]
        AS,
        
        /// <summary>
        /// <para>SAN MARINO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAN MARINO")]
        SM,
        
        /// <summary>
        /// <para>SENEGAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SENEGAL")]
        SN,
        
        /// <summary>
        /// <para>SERBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SERBIA")]
        RS,
        
        /// <summary>
        /// <para>SESZELE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SESZELE")]
        SC,
        
        /// <summary>
        /// <para>SIERRA LEONE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SIERRA LEONE")]
        SL,
        
        /// <summary>
        /// <para>SINGAPUR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SINGAPUR")]
        SG,
        
        /// <summary>
        /// <para>SŁOWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWACJA")]
        SK,
        
        /// <summary>
        /// <para>SŁOWENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWENIA")]
        SI,
        
        /// <summary>
        /// <para>SOMALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOMALIA")]
        SO,
        
        /// <summary>
        /// <para>SRI LANKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SRI LANKA")]
        LK,
        
        /// <summary>
        /// <para>SAINT PIERRE I MIQUELON</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT PIERRE I MIQUELON")]
        PM,
        
        /// <summary>
        /// <para>STANY ZJEDNOCZONE AMERYKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STANY ZJEDNOCZONE AMERYKI")]
        US,
        
        /// <summary>
        /// <para>SUAZI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUAZI")]
        SZ,
        
        /// <summary>
        /// <para>SUDAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUDAN")]
        SD,
        
        /// <summary>
        /// <para>SUDAN POŁUDNIOWY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUDAN POŁUDNIOWY")]
        SS,
        
        /// <summary>
        /// <para>SURINAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SURINAM")]
        SR,
        
        /// <summary>
        /// <para>SVALBARD I JAN MAYEN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SVALBARD I JAN MAYEN")]
        SJ,
        
        /// <summary>
        /// <para>ŚWIĘTA HELENA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ŚWIĘTA HELENA")]
        SH,
        
        /// <summary>
        /// <para>SYRIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SYRIA")]
        SY,
        
        /// <summary>
        /// <para>SZWAJCARIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZWAJCARIA")]
        CH,
        
        /// <summary>
        /// <para>SZWECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZWECJA")]
        SE,
        
        /// <summary>
        /// <para>TADŻYKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TADŻYKISTAN")]
        TJ,
        
        /// <summary>
        /// <para>TAJLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAJLANDIA")]
        TH,
        
        /// <summary>
        /// <para>TAJWAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAJWAN")]
        TW,
        
        /// <summary>
        /// <para>TANZANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TANZANIA")]
        TZ,
        
        /// <summary>
        /// <para>TOGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TOGO")]
        TG,
        
        /// <summary>
        /// <para>TOKELAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TOKELAU")]
        TK,
        
        /// <summary>
        /// <para>TONGA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TONGA")]
        TO,
        
        /// <summary>
        /// <para>TRYNIDAD I TOBAGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRYNIDAD I TOBAGO")]
        TT,
        
        /// <summary>
        /// <para>TUNEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TUNEZJA")]
        TN,
        
        /// <summary>
        /// <para>TURCJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TURCJA")]
        TR,
        
        /// <summary>
        /// <para>TURKMENISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TURKMENISTAN")]
        TM,
        
        /// <summary>
        /// <para>TUVALU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TUVALU")]
        TV,
        
        /// <summary>
        /// <para>UGANDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UGANDA")]
        UG,
        
        /// <summary>
        /// <para>UKRAINA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UKRAINA")]
        UA,
        
        /// <summary>
        /// <para>URUGWAJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("URUGWAJ")]
        UY,
        
        /// <summary>
        /// <para>UZBEKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UZBEKISTAN")]
        UZ,
        
        /// <summary>
        /// <para>VANUATU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VANUATU")]
        VU,
        
        /// <summary>
        /// <para>WALLIS I FUTUNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WALLIS I FUTUNA")]
        WF,
        
        /// <summary>
        /// <para>WATYKAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WATYKAN")]
        VA,
        
        /// <summary>
        /// <para>WĘGRY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WĘGRY")]
        HU,
        
        /// <summary>
        /// <para>WENEZUELA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WENEZUELA")]
        VE,
        
        /// <summary>
        /// <para>WIELKA BRYTANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIELKA BRYTANIA")]
        GB,
        
        /// <summary>
        /// <para>WIETNAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIETNAM")]
        VN,
        
        /// <summary>
        /// <para>WŁOCHY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WŁOCHY")]
        IT,
        
        /// <summary>
        /// <para>WSCHODNI TIMOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WSCHODNI TIMOR")]
        TL,
        
        /// <summary>
        /// <para>WYBRZEŻE KOŚCI SŁONIOWEJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYBRZEŻE KOŚCI SŁONIOWEJ")]
        CI,
        
        /// <summary>
        /// <para>WYSPA BOUVETA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA BOUVETA")]
        BV,
        
        /// <summary>
        /// <para>WYSPA BOŻEGO NARODZENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA BOŻEGO NARODZENIA")]
        CX,
        
        /// <summary>
        /// <para>WYSPA MAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA MAN")]
        IM,
        
        /// <summary>
        /// <para>WYSPA SINT MAARTEN (CZĘŚĆ HOLENDERSKA WYSPY)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA SINT MAARTEN (CZĘŚĆ HOLENDERSKA WYSPY)")]
        SX,
        
        /// <summary>
        /// <para>WYSPY COOKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY COOKA")]
        CK,
        
        /// <summary>
        /// <para>WYSPY DZIEWICZE-USA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY DZIEWICZE-USA")]
        VI,
        
        /// <summary>
        /// <para>WYSPY DZIEWICZE-W.B.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY DZIEWICZE-W.B.")]
        VG,
        
        /// <summary>
        /// <para>WYSPY HEARD I MCDONALD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY HEARD I MCDONALD")]
        HM,
        
        /// <summary>
        /// <para>WYSPY KOKOSOWE (KEELINGA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY KOKOSOWE (KEELINGA)")]
        CC,
        
        /// <summary>
        /// <para>WYSPY MARSHALLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY MARSHALLA")]
        MH,
        
        /// <summary>
        /// <para>WYSPY OWCZE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY OWCZE")]
        FO,
        
        /// <summary>
        /// <para>WYSPY SALOMONA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY SALOMONA")]
        SB,
        
        /// <summary>
        /// <para>WYSPY ŚWIĘTEGO TOMASZA I KSIĄŻĘCA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY ŚWIĘTEGO TOMASZA I KSIĄŻĘCA")]
        ST,
        
        /// <summary>
        /// <para>WYSPY TURKS I CAICOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY TURKS I CAICOS")]
        TC,
        
        /// <summary>
        /// <para>ZAMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZAMBIA")]
        ZM,
        
        /// <summary>
        /// <para>ZIELONY PRZYLĄDEK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZIELONY PRZYLĄDEK")]
        CV,
        
        /// <summary>
        /// <para>ZIMBABWE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZIMBABWE")]
        ZW,
        
        /// <summary>
        /// <para>ZJEDNOCZONE EMIRATY ARABSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZJEDNOCZONE EMIRATY ARABSKIE")]
        AE,
        
        /// <summary>
        /// <para>ZJEDNOCZONE KRÓLESTWO (IRLANDIA PÓŁNOCNA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZJEDNOCZONE KRÓLESTWO (IRLANDIA PÓŁNOCNA)")]
        XI,
    }
    
    /// <summary>
    /// <para>Kod kraju wydania numeru identyfikacyjnego</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Kod kraju wydania numeru identyfikacyjnego")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TKodKrajuWydania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    public enum TKodKrajuWydania
    {
        
        /// <summary>
        /// <para>AFGANISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AFGANISTAN")]
        AF,
        
        /// <summary>
        /// <para>ALAND ISLANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALAND ISLANDS")]
        AX,
        
        /// <summary>
        /// <para>ALBANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALBANIA")]
        AL,
        
        /// <summary>
        /// <para>ALGIERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALGIERIA")]
        DZ,
        
        /// <summary>
        /// <para>ANDORA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANDORA")]
        AD,
        
        /// <summary>
        /// <para>ANGOLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANGOLA")]
        AO,
        
        /// <summary>
        /// <para>ANGUILLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANGUILLA")]
        AI,
        
        /// <summary>
        /// <para>ANTARKTYDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTARKTYDA")]
        AQ,
        
        /// <summary>
        /// <para>ANTIGUA I BARBUDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTIGUA I BARBUDA")]
        AG,
        
        /// <summary>
        /// <para>ANTYLE HOLENDERSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTYLE HOLENDERSKIE")]
        AN,
        
        /// <summary>
        /// <para>ARABIA SAUDYJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARABIA SAUDYJSKA")]
        SA,
        
        /// <summary>
        /// <para>ARGENTYNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARGENTYNA")]
        AR,
        
        /// <summary>
        /// <para>ARMENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARMENIA")]
        AM,
        
        /// <summary>
        /// <para>ARUBA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARUBA")]
        AW,
        
        /// <summary>
        /// <para>AUSTRALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUSTRALIA")]
        AU,
        
        /// <summary>
        /// <para>AUSTRIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUSTRIA")]
        AT,
        
        /// <summary>
        /// <para>AZERBEJDŻAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AZERBEJDŻAN")]
        AZ,
        
        /// <summary>
        /// <para>BAHAMY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAHAMY")]
        BS,
        
        /// <summary>
        /// <para>BAHRAJN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAHRAJN")]
        BH,
        
        /// <summary>
        /// <para>BANGLADESZ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BANGLADESZ")]
        BD,
        
        /// <summary>
        /// <para>BARBADOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BARBADOS")]
        BB,
        
        /// <summary>
        /// <para>BELGIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BELGIA")]
        BE,
        
        /// <summary>
        /// <para>BELIZE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BELIZE")]
        BZ,
        
        /// <summary>
        /// <para>BENIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BENIN")]
        BJ,
        
        /// <summary>
        /// <para>BERMUDY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BERMUDY")]
        BM,
        
        /// <summary>
        /// <para>BHUTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BHUTAN")]
        BT,
        
        /// <summary>
        /// <para>BIAŁORUŚ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BIAŁORUŚ")]
        BY,
        
        /// <summary>
        /// <para>BOLIWIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOLIWIA")]
        BO,
        
        /// <summary>
        /// <para>BONAIRE, SINT EUSTATIUS I SABA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BONAIRE, SINT EUSTATIUS I SABA")]
        BQ,
        
        /// <summary>
        /// <para>BOŚNIA I HERCEGOWINA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOŚNIA I HERCEGOWINA")]
        BA,
        
        /// <summary>
        /// <para>BOTSWANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOTSWANA")]
        BW,
        
        /// <summary>
        /// <para>BRAZYLIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRAZYLIA")]
        BR,
        
        /// <summary>
        /// <para>BRUNEI DARUSSALAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRUNEI DARUSSALAM")]
        BN,
        
        /// <summary>
        /// <para>BRYTYJSKIE TERYTORIUM OCEANU INDYJSKIEGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRYTYJSKIE TERYTORIUM OCEANU INDYJSKIEGO")]
        IO,
        
        /// <summary>
        /// <para>BUŁGARIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUŁGARIA")]
        BG,
        
        /// <summary>
        /// <para>BURKINA FASO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BURKINA FASO")]
        BF,
        
        /// <summary>
        /// <para>BURUNDI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BURUNDI")]
        BI,
        
        /// <summary>
        /// <para>CEUTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CEUTA")]
        XC,
        
        /// <summary>
        /// <para>CHILE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHILE")]
        CL,
        
        /// <summary>
        /// <para>CHINY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHINY")]
        CN,
        
        /// <summary>
        /// <para>CHORWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHORWACJA")]
        HR,
        
        /// <summary>
        /// <para>CURAÇAO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CURAÇAO")]
        CW,
        
        /// <summary>
        /// <para>CYPR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CYPR")]
        CY,
        
        /// <summary>
        /// <para>CZAD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CZAD")]
        TD,
        
        /// <summary>
        /// <para>CZARNOGÓRA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CZARNOGÓRA")]
        ME,
        
        /// <summary>
        /// <para>DANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DANIA")]
        DK,
        
        /// <summary>
        /// <para>DOMINIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOMINIKA")]
        DM,
        
        /// <summary>
        /// <para>DOMINIKANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOMINIKANA")]
        DO,
        
        /// <summary>
        /// <para>DŻIBUTI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DŻIBUTI")]
        DJ,
        
        /// <summary>
        /// <para>EGIPT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EGIPT")]
        EG,
        
        /// <summary>
        /// <para>EKWADOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EKWADOR")]
        EC,
        
        /// <summary>
        /// <para>ERYTREA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ERYTREA")]
        ER,
        
        /// <summary>
        /// <para>ESTONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ESTONIA")]
        EE,
        
        /// <summary>
        /// <para>ETIOPIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ETIOPIA")]
        ET,
        
        /// <summary>
        /// <para>FALKLANDY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FALKLANDY")]
        FK,
        
        /// <summary>
        /// <para>FIDŻI REPUBLIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FIDŻI REPUBLIKA")]
        FJ,
        
        /// <summary>
        /// <para>FILIPINY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FILIPINY")]
        PH,
        
        /// <summary>
        /// <para>FINLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINLANDIA")]
        FI,
        
        /// <summary>
        /// <para>FRANCJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANCJA")]
        FR,
        
        /// <summary>
        /// <para>FRANCUSKIE TERYTORIUM POŁUDNIOWE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANCUSKIE TERYTORIUM POŁUDNIOWE")]
        TF,
        
        /// <summary>
        /// <para>GABON</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GABON")]
        GA,
        
        /// <summary>
        /// <para>GAMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GAMBIA")]
        GM,
        
        /// <summary>
        /// <para>GHANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GHANA")]
        GH,
        
        /// <summary>
        /// <para>GIBRALTAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GIBRALTAR")]
        GI,
        
        /// <summary>
        /// <para>GRECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRECJA")]
        GR,
        
        /// <summary>
        /// <para>GRENADA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRENADA")]
        GD,
        
        /// <summary>
        /// <para>GRENLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRENLANDIA")]
        GL,
        
        /// <summary>
        /// <para>GRUZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRUZJA")]
        GE,
        
        /// <summary>
        /// <para>GUAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUAM")]
        GU,
        
        /// <summary>
        /// <para>GUERNSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUERNSEY")]
        GG,
        
        /// <summary>
        /// <para>GUJANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUJANA")]
        GY,
        
        /// <summary>
        /// <para>GUJANA FRANCUSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUJANA FRANCUSKA")]
        GF,
        
        /// <summary>
        /// <para>GWADELUPA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWADELUPA")]
        GP,
        
        /// <summary>
        /// <para>GWATEMALA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWATEMALA")]
        GT,
        
        /// <summary>
        /// <para>GWINEA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA")]
        GN,
        
        /// <summary>
        /// <para>GWINEA RÓWNIKOWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA RÓWNIKOWA")]
        GQ,
        
        /// <summary>
        /// <para>GWINEA-BISSAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA-BISSAU")]
        GW,
        
        /// <summary>
        /// <para>HAITI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HAITI")]
        HT,
        
        /// <summary>
        /// <para>HISZPANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HISZPANIA")]
        ES,
        
        /// <summary>
        /// <para>HONDURAS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HONDURAS")]
        HN,
        
        /// <summary>
        /// <para>HONGKONG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HONGKONG")]
        HK,
        
        /// <summary>
        /// <para>INDIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INDIE")]
        IN,
        
        /// <summary>
        /// <para>INDONEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INDONEZJA")]
        ID,
        
        /// <summary>
        /// <para>IRAK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRAK")]
        IQ,
        
        /// <summary>
        /// <para>IRAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRAN")]
        IR,
        
        /// <summary>
        /// <para>IRLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRLANDIA")]
        IE,
        
        /// <summary>
        /// <para>ISLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ISLANDIA")]
        IS,
        
        /// <summary>
        /// <para>IZRAEL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IZRAEL")]
        IL,
        
        /// <summary>
        /// <para>JAMAJKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JAMAJKA")]
        JM,
        
        /// <summary>
        /// <para>JAPONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JAPONIA")]
        JP,
        
        /// <summary>
        /// <para>JEMEN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JEMEN")]
        YE,
        
        /// <summary>
        /// <para>JERSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JERSEY")]
        JE,
        
        /// <summary>
        /// <para>JORDANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JORDANIA")]
        JO,
        
        /// <summary>
        /// <para>KAJMANY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAJMANY")]
        KY,
        
        /// <summary>
        /// <para>KAMBODŻA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAMBODŻA")]
        KH,
        
        /// <summary>
        /// <para>KAMERUN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAMERUN")]
        CM,
        
        /// <summary>
        /// <para>KANADA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KANADA")]
        CA,
        
        /// <summary>
        /// <para>KATAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KATAR")]
        QA,
        
        /// <summary>
        /// <para>KAZACHSTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAZACHSTAN")]
        KZ,
        
        /// <summary>
        /// <para>KENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KENIA")]
        KE,
        
        /// <summary>
        /// <para>KIRGISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KIRGISTAN")]
        KG,
        
        /// <summary>
        /// <para>KIRIBATI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KIRIBATI")]
        KI,
        
        /// <summary>
        /// <para>KOLUMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOLUMBIA")]
        CO,
        
        /// <summary>
        /// <para>KOMORY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOMORY")]
        KM,
        
        /// <summary>
        /// <para>KONGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KONGO")]
        CG,
        
        /// <summary>
        /// <para>KONGO, REPUBLIKA DEMOKRATYCZNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KONGO, REPUBLIKA DEMOKRATYCZNA")]
        CD,
        
        /// <summary>
        /// <para>KOREAŃSKA REPUBLIKA LUDOWO-DEMOKRATYCZNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOREAŃSKA REPUBLIKA LUDOWO-DEMOKRATYCZNA")]
        KP,
        
        /// <summary>
        /// <para>KOSOWO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOSOWO")]
        XK,
        
        /// <summary>
        /// <para>KOSTARYKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOSTARYKA")]
        CR,
        
        /// <summary>
        /// <para>KUBA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KUBA")]
        CU,
        
        /// <summary>
        /// <para>KUWEJT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KUWEJT")]
        KW,
        
        /// <summary>
        /// <para>LAOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LAOS")]
        LA,
        
        /// <summary>
        /// <para>LESOTHO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LESOTHO")]
        LS,
        
        /// <summary>
        /// <para>LIBAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBAN")]
        LB,
        
        /// <summary>
        /// <para>LIBERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBERIA")]
        LR,
        
        /// <summary>
        /// <para>LIBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBIA")]
        LY,
        
        /// <summary>
        /// <para>LIECHTENSTEIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIECHTENSTEIN")]
        LI,
        
        /// <summary>
        /// <para>LITWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LITWA")]
        LT,
        
        /// <summary>
        /// <para>ŁOTWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ŁOTWA")]
        LV,
        
        /// <summary>
        /// <para>LUKSEMBURG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LUKSEMBURG")]
        LU,
        
        /// <summary>
        /// <para>MACEDONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MACEDONIA")]
        MK,
        
        /// <summary>
        /// <para>MADAGASKAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MADAGASKAR")]
        MG,
        
        /// <summary>
        /// <para>MAJOTTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAJOTTA")]
        YT,
        
        /// <summary>
        /// <para>MAKAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAKAU")]
        MO,
        
        /// <summary>
        /// <para>MALAWI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALAWI")]
        MW,
        
        /// <summary>
        /// <para>MALEDIWY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALEDIWY")]
        MV,
        
        /// <summary>
        /// <para>MALEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALEZJA")]
        MY,
        
        /// <summary>
        /// <para>MALI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALI")]
        ML,
        
        /// <summary>
        /// <para>MALTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALTA")]
        MT,
        
        /// <summary>
        /// <para>MARIANY PÓŁNOCNE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARIANY PÓŁNOCNE")]
        MP,
        
        /// <summary>
        /// <para>MAROKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAROKO")]
        MA,
        
        /// <summary>
        /// <para>MARTYNIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARTYNIKA")]
        MQ,
        
        /// <summary>
        /// <para>MAURETANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAURETANIA")]
        MR,
        
        /// <summary>
        /// <para>MAURITIUS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAURITIUS")]
        MU,
        
        /// <summary>
        /// <para>MEKSYK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEKSYK")]
        MX,
        
        /// <summary>
        /// <para>MELILLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MELILLA")]
        XL,
        
        /// <summary>
        /// <para>MIKRONEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MIKRONEZJA")]
        FM,
        
        /// <summary>
        /// <para>MINOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINOR")]
        UM,
        
        /// <summary>
        /// <para>MOŁDOWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOŁDOWA")]
        MD,
        
        /// <summary>
        /// <para>MONAKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONAKO")]
        MC,
        
        /// <summary>
        /// <para>MONGOLIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONGOLIA")]
        MN,
        
        /// <summary>
        /// <para>MONTSERRAT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONTSERRAT")]
        MS,
        
        /// <summary>
        /// <para>MOZAMBIK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOZAMBIK")]
        MZ,
        
        /// <summary>
        /// <para>MYANMAR (BURMA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MYANMAR (BURMA)")]
        MM,
        
        /// <summary>
        /// <para>NAMIBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAMIBIA")]
        NA,
        
        /// <summary>
        /// <para>NAURU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAURU")]
        NR,
        
        /// <summary>
        /// <para>NEPAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NEPAL")]
        NP,
        
        /// <summary>
        /// <para>NIDERLANDY (HOLANDIA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIDERLANDY (HOLANDIA)")]
        NL,
        
        /// <summary>
        /// <para>NIEMCY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIEMCY")]
        DE,
        
        /// <summary>
        /// <para>NIGER</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIGER")]
        NE,
        
        /// <summary>
        /// <para>NIGERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIGERIA")]
        NG,
        
        /// <summary>
        /// <para>NIKARAGUA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIKARAGUA")]
        NI,
        
        /// <summary>
        /// <para>NIUE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIUE")]
        NU,
        
        /// <summary>
        /// <para>NORFOLK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NORFOLK")]
        NF,
        
        /// <summary>
        /// <para>NORWEGIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NORWEGIA")]
        NO,
        
        /// <summary>
        /// <para>NOWA KALEDONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NOWA KALEDONIA")]
        NC,
        
        /// <summary>
        /// <para>NOWA ZELANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NOWA ZELANDIA")]
        NZ,
        
        /// <summary>
        /// <para>OKUPOWANE TERYTORIUM PALESTYNY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OKUPOWANE TERYTORIUM PALESTYNY")]
        PS,
        
        /// <summary>
        /// <para>OMAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OMAN")]
        OM,
        
        /// <summary>
        /// <para>PAKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAKISTAN")]
        PK,
        
        /// <summary>
        /// <para>PALAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PALAU")]
        PW,
        
        /// <summary>
        /// <para>PANAMA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PANAMA")]
        PA,
        
        /// <summary>
        /// <para>PAPUA NOWA GWINEA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAPUA NOWA GWINEA")]
        PG,
        
        /// <summary>
        /// <para>PARAGWAJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PARAGWAJ")]
        PY,
        
        /// <summary>
        /// <para>PERU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PERU")]
        PE,
        
        /// <summary>
        /// <para>PITCAIRN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PITCAIRN")]
        PN,
        
        /// <summary>
        /// <para>POLINEZJA FRANCUSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLINEZJA FRANCUSKA")]
        PF,
        
        /// <summary>
        /// <para>POLSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLSKA")]
        PL,
        
        /// <summary>
        /// <para>POŁUDNIOWA GEORGIA I POŁUD.WYSPY SANDWICH</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POŁUDNIOWA GEORGIA I POŁUD.WYSPY SANDWICH")]
        GS,
        
        /// <summary>
        /// <para>PORTUGALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PORTUGALIA")]
        PT,
        
        /// <summary>
        /// <para>PORTORYKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PORTORYKO")]
        PR,
        
        /// <summary>
        /// <para>REP.ŚRODKOWOAFRYKAŃSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REP.ŚRODKOWOAFRYKAŃSKA")]
        CF,
        
        /// <summary>
        /// <para>REPUBLIKA CZESKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA CZESKA")]
        CZ,
        
        /// <summary>
        /// <para>REPUBLIKA KOREI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA KOREI")]
        KR,
        
        /// <summary>
        /// <para>REPUBLIKA POŁUDNIOWEJ AFRYKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA POŁUDNIOWEJ AFRYKI")]
        ZA,
        
        /// <summary>
        /// <para>REUNION</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REUNION")]
        RE,
        
        /// <summary>
        /// <para>ROSJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ROSJA")]
        RU,
        
        /// <summary>
        /// <para>RUMUNIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUMUNIA")]
        RO,
        
        /// <summary>
        /// <para>RWANDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RWANDA")]
        RW,
        
        /// <summary>
        /// <para>SAHARA ZACHODNIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAHARA ZACHODNIA")]
        EH,
        
        /// <summary>
        /// <para>SAINT BARTHELEMY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT BARTHELEMY")]
        BL,
        
        /// <summary>
        /// <para>SAINT KITTS I NEVIS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT KITTS I NEVIS")]
        KN,
        
        /// <summary>
        /// <para>SAINT LUCIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT LUCIA")]
        LC,
        
        /// <summary>
        /// <para>SAINT MARTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT MARTIN")]
        MF,
        
        /// <summary>
        /// <para>SAINT VINCENT I GRENADYNY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT VINCENT I GRENADYNY")]
        VC,
        
        /// <summary>
        /// <para>SALWADOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALWADOR")]
        SV,
        
        /// <summary>
        /// <para>SAMOA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAMOA")]
        WS,
        
        /// <summary>
        /// <para>SAMOA AMERYKAŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAMOA AMERYKAŃSKIE")]
        AS,
        
        /// <summary>
        /// <para>SAN MARINO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAN MARINO")]
        SM,
        
        /// <summary>
        /// <para>SENEGAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SENEGAL")]
        SN,
        
        /// <summary>
        /// <para>SERBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SERBIA")]
        RS,
        
        /// <summary>
        /// <para>SESZELE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SESZELE")]
        SC,
        
        /// <summary>
        /// <para>SIERRA LEONE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SIERRA LEONE")]
        SL,
        
        /// <summary>
        /// <para>SINGAPUR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SINGAPUR")]
        SG,
        
        /// <summary>
        /// <para>SŁOWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWACJA")]
        SK,
        
        /// <summary>
        /// <para>SŁOWENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWENIA")]
        SI,
        
        /// <summary>
        /// <para>SOMALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOMALIA")]
        SO,
        
        /// <summary>
        /// <para>SRI LANKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SRI LANKA")]
        LK,
        
        /// <summary>
        /// <para>SAINT PIERRE I MIQUELON</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT PIERRE I MIQUELON")]
        PM,
        
        /// <summary>
        /// <para>STANY ZJEDNOCZONE AMERYKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STANY ZJEDNOCZONE AMERYKI")]
        US,
        
        /// <summary>
        /// <para>SUAZI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUAZI")]
        SZ,
        
        /// <summary>
        /// <para>SUDAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUDAN")]
        SD,
        
        /// <summary>
        /// <para>SUDAN POŁUDNIOWY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUDAN POŁUDNIOWY")]
        SS,
        
        /// <summary>
        /// <para>SURINAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SURINAM")]
        SR,
        
        /// <summary>
        /// <para>SVALBARD I JAN MAYEN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SVALBARD I JAN MAYEN")]
        SJ,
        
        /// <summary>
        /// <para>ŚWIĘTA HELENA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ŚWIĘTA HELENA")]
        SH,
        
        /// <summary>
        /// <para>SYRIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SYRIA")]
        SY,
        
        /// <summary>
        /// <para>SZWAJCARIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZWAJCARIA")]
        CH,
        
        /// <summary>
        /// <para>SZWECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZWECJA")]
        SE,
        
        /// <summary>
        /// <para>TADŻYKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TADŻYKISTAN")]
        TJ,
        
        /// <summary>
        /// <para>TAJLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAJLANDIA")]
        TH,
        
        /// <summary>
        /// <para>TAJWAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAJWAN")]
        TW,
        
        /// <summary>
        /// <para>TANZANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TANZANIA")]
        TZ,
        
        /// <summary>
        /// <para>TOGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TOGO")]
        TG,
        
        /// <summary>
        /// <para>TOKELAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TOKELAU")]
        TK,
        
        /// <summary>
        /// <para>TONGA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TONGA")]
        TO,
        
        /// <summary>
        /// <para>TRYNIDAD I TOBAGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRYNIDAD I TOBAGO")]
        TT,
        
        /// <summary>
        /// <para>TUNEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TUNEZJA")]
        TN,
        
        /// <summary>
        /// <para>TURCJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TURCJA")]
        TR,
        
        /// <summary>
        /// <para>TURKMENISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TURKMENISTAN")]
        TM,
        
        /// <summary>
        /// <para>TUVALU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TUVALU")]
        TV,
        
        /// <summary>
        /// <para>UGANDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UGANDA")]
        UG,
        
        /// <summary>
        /// <para>UKRAINA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UKRAINA")]
        UA,
        
        /// <summary>
        /// <para>URUGWAJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("URUGWAJ")]
        UY,
        
        /// <summary>
        /// <para>UZBEKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UZBEKISTAN")]
        UZ,
        
        /// <summary>
        /// <para>VANUATU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VANUATU")]
        VU,
        
        /// <summary>
        /// <para>WALLIS I FUTUNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WALLIS I FUTUNA")]
        WF,
        
        /// <summary>
        /// <para>WATYKAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WATYKAN")]
        VA,
        
        /// <summary>
        /// <para>WĘGRY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WĘGRY")]
        HU,
        
        /// <summary>
        /// <para>WENEZUELA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WENEZUELA")]
        VE,
        
        /// <summary>
        /// <para>WIELKA BRYTANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIELKA BRYTANIA")]
        GB,
        
        /// <summary>
        /// <para>WIETNAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIETNAM")]
        VN,
        
        /// <summary>
        /// <para>WŁOCHY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WŁOCHY")]
        IT,
        
        /// <summary>
        /// <para>WSCHODNI TIMOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WSCHODNI TIMOR")]
        TL,
        
        /// <summary>
        /// <para>WYBRZEŻE KOŚCI SŁONIOWEJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYBRZEŻE KOŚCI SŁONIOWEJ")]
        CI,
        
        /// <summary>
        /// <para>WYSPA BOUVETA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA BOUVETA")]
        BV,
        
        /// <summary>
        /// <para>WYSPA BOŻEGO NARODZENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA BOŻEGO NARODZENIA")]
        CX,
        
        /// <summary>
        /// <para>WYSPA MAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA MAN")]
        IM,
        
        /// <summary>
        /// <para>WYSPA SINT MAARTEN (CZĘŚĆ HOLENDERSKA WYSPY)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA SINT MAARTEN (CZĘŚĆ HOLENDERSKA WYSPY)")]
        SX,
        
        /// <summary>
        /// <para>WYSPY COOKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY COOKA")]
        CK,
        
        /// <summary>
        /// <para>WYSPY DZIEWICZE-USA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY DZIEWICZE-USA")]
        VI,
        
        /// <summary>
        /// <para>WYSPY DZIEWICZE-W.B.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY DZIEWICZE-W.B.")]
        VG,
        
        /// <summary>
        /// <para>WYSPY HEARD I MCDONALD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY HEARD I MCDONALD")]
        HM,
        
        /// <summary>
        /// <para>WYSPY KOKOSOWE (KEELINGA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY KOKOSOWE (KEELINGA)")]
        CC,
        
        /// <summary>
        /// <para>WYSPY MARSHALLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY MARSHALLA")]
        MH,
        
        /// <summary>
        /// <para>WYSPY OWCZE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY OWCZE")]
        FO,
        
        /// <summary>
        /// <para>WYSPY SALOMONA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY SALOMONA")]
        SB,
        
        /// <summary>
        /// <para>WYSPY ŚWIĘTEGO TOMASZA I KSIĄŻĘCA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY ŚWIĘTEGO TOMASZA I KSIĄŻĘCA")]
        ST,
        
        /// <summary>
        /// <para>WYSPY TURKS I CAICOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY TURKS I CAICOS")]
        TC,
        
        /// <summary>
        /// <para>ZAMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZAMBIA")]
        ZM,
        
        /// <summary>
        /// <para>ZIELONY PRZYLĄDEK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZIELONY PRZYLĄDEK")]
        CV,
        
        /// <summary>
        /// <para>ZIMBABWE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZIMBABWE")]
        ZW,
        
        /// <summary>
        /// <para>ZJEDNOCZONE EMIRATY ARABSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZJEDNOCZONE EMIRATY ARABSKIE")]
        AE,
        
        /// <summary>
        /// <para>ZJEDNOCZONE KRÓLESTWO (IRLANDIA PÓŁNOCNA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZJEDNOCZONE KRÓLESTWO (IRLANDIA PÓŁNOCNA)")]
        XI,
    }
    
    /// <summary>
    /// <para>Określa, czy to jest złożenie, czy korekta dokumentu</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Określa, czy to jest złożenie, czy korekta dokumentu")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TCelZlozenia", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    public enum TCelZlozenia
    {
        
        /// <summary>
        /// <para>złożenie po raz pierwszy deklaracji za dany okres</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("złożenie po raz pierwszy deklaracji za dany okres")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>korekta deklaracji za dany okres</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("korekta deklaracji za dany okres")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Pojedyncze pole wyboru</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pojedyncze pole wyboru")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TWybor1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    public enum TWybor1
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }
    
    /// <summary>
    /// <para>Podwójne pole wyboru</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podwójne pole wyboru")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TWybor1_2", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    public enum TWybor1_2
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Potrójne pole wyboru</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Potrójne pole wyboru")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TWybor1_3", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    public enum TWybor1_3
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    
    /// <summary>
    /// <para>Informacje opisujące adres polski</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Informacje opisujące adres polski")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TAdresPolski", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TAdresPolski
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ProFak.IO.FA_2.TKodKraju _kodKraju = ProFak.IO.FA_2.TKodKraju.PL;
        
        /// <summary>
        /// <para>Kraj</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kraj")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("KodKraju")]
        public ProFak.IO.FA_2.TKodKraju KodKraju
        {
            get
            {
                return _kodKraju;
            }
            set
            {
                _kodKraju = value;
            }
        }
        
        /// <summary>
        /// <para>Województwo</para>
        /// <para>Typ określający nazwę województwa, nazwę powiatu lub nazwę gminy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Województwo")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Wojewodztwo")]
        public string Wojewodztwo { get; set; }
        
        /// <summary>
        /// <para>Powiat</para>
        /// <para>Typ określający nazwę województwa, nazwę powiatu lub nazwę gminy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Powiat")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Powiat")]
        public string Powiat { get; set; }
        
        /// <summary>
        /// <para>Gmina</para>
        /// <para>Typ określający nazwę województwa, nazwę powiatu lub nazwę gminy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gmina")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Gmina")]
        public string Gmina { get; set; }
        
        /// <summary>
        /// <para>Nazwa ulicy</para>
        /// <para>Nazwa ulicy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 65.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa ulicy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(65)]
        [System.Xml.Serialization.XmlElementAttribute("Ulica")]
        public string Ulica { get; set; }
        
        /// <summary>
        /// <para>Numer budynku</para>
        /// <para>Numer budynku</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer budynku")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("NrDomu")]
        public string NrDomu { get; set; }
        
        /// <summary>
        /// <para>Numer lokalu</para>
        /// <para>Numer lokalu</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer lokalu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.Xml.Serialization.XmlElementAttribute("NrLokalu")]
        public string NrLokalu { get; set; }
        
        /// <summary>
        /// <para>Nazwa miejscowości</para>
        /// <para>Typ określający nazwę miejscowości</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 56.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa miejscowości")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(56)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Miejscowosc")]
        public string Miejscowosc { get; set; }
        
        /// <summary>
        /// <para>Kod pocztowy</para>
        /// <para>Kod pocztowy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod pocztowy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("KodPocztowy")]
        public string KodPocztowy { get; set; }
        
        /// <summary>
        /// <para>Nazwa urzędu pocztowego</para>
        /// <para>Typ określający nazwę miejscowości</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 56.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa urzędu pocztowego")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(56)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Poczta")]
        public string Poczta { get; set; }
    }
    
    /// <summary>
    /// <para>Informacje opisujące adres zagraniczny</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Informacje opisujące adres zagraniczny")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TAdresZagraniczny", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TAdresZagraniczny
    {
        
        /// <summary>
        /// <para>Kod Kraju [Country Code]</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod Kraju [Country Code]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("KodKraju")]
        public TAdresZagranicznyKodKraju KodKraju { get; set; }
        
        /// <summary>
        /// <para>Kod pocztowy [Postal code]</para>
        /// <para>Kod pocztowy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod pocztowy [Postal code]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.Xml.Serialization.XmlElementAttribute("KodPocztowy")]
        public string KodPocztowy { get; set; }
        
        /// <summary>
        /// <para>Nazwa miejscowości [City]</para>
        /// <para>Typ określający nazwę miejscowości</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 56.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa miejscowości [City]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(56)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Miejscowosc")]
        public string Miejscowosc { get; set; }
        
        /// <summary>
        /// <para>Nazwa ulicy [Street]</para>
        /// <para>Nazwa ulicy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 65.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa ulicy [Street]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(65)]
        [System.Xml.Serialization.XmlElementAttribute("Ulica")]
        public string Ulica { get; set; }
        
        /// <summary>
        /// <para>Numer budynku [Building number]</para>
        /// <para>Numer budynku</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer budynku [Building number]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("NrDomu")]
        public string NrDomu { get; set; }
        
        /// <summary>
        /// <para>Numer lokalu [Flat number]</para>
        /// <para>Numer lokalu</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer lokalu [Flat number]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.Xml.Serialization.XmlElementAttribute("NrLokalu")]
        public string NrLokalu { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TAdresZagranicznyKodKraju", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/", AnonymousType=true)]
    public enum TAdresZagranicznyKodKraju
    {
        
        /// <summary>
        /// <para>AFGANISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AFGANISTAN")]
        AF,
        
        /// <summary>
        /// <para>ALAND ISLANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALAND ISLANDS")]
        AX,
        
        /// <summary>
        /// <para>ALBANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALBANIA")]
        AL,
        
        /// <summary>
        /// <para>ALGIERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ALGIERIA")]
        DZ,
        
        /// <summary>
        /// <para>ANDORA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANDORA")]
        AD,
        
        /// <summary>
        /// <para>ANGOLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANGOLA")]
        AO,
        
        /// <summary>
        /// <para>ANGUILLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANGUILLA")]
        AI,
        
        /// <summary>
        /// <para>ANTARKTYDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTARKTYDA")]
        AQ,
        
        /// <summary>
        /// <para>ANTIGUA I BARBUDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTIGUA I BARBUDA")]
        AG,
        
        /// <summary>
        /// <para>ANTYLE HOLENDERSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANTYLE HOLENDERSKIE")]
        AN,
        
        /// <summary>
        /// <para>ARABIA SAUDYJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARABIA SAUDYJSKA")]
        SA,
        
        /// <summary>
        /// <para>ARGENTYNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARGENTYNA")]
        AR,
        
        /// <summary>
        /// <para>ARMENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARMENIA")]
        AM,
        
        /// <summary>
        /// <para>ARUBA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARUBA")]
        AW,
        
        /// <summary>
        /// <para>AUSTRALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUSTRALIA")]
        AU,
        
        /// <summary>
        /// <para>AUSTRIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUSTRIA")]
        AT,
        
        /// <summary>
        /// <para>AZERBEJDŻAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AZERBEJDŻAN")]
        AZ,
        
        /// <summary>
        /// <para>BAHAMY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAHAMY")]
        BS,
        
        /// <summary>
        /// <para>BAHRAJN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAHRAJN")]
        BH,
        
        /// <summary>
        /// <para>BANGLADESZ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BANGLADESZ")]
        BD,
        
        /// <summary>
        /// <para>BARBADOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BARBADOS")]
        BB,
        
        /// <summary>
        /// <para>BELGIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BELGIA")]
        BE,
        
        /// <summary>
        /// <para>BELIZE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BELIZE")]
        BZ,
        
        /// <summary>
        /// <para>BENIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BENIN")]
        BJ,
        
        /// <summary>
        /// <para>BERMUDY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BERMUDY")]
        BM,
        
        /// <summary>
        /// <para>BHUTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BHUTAN")]
        BT,
        
        /// <summary>
        /// <para>BIAŁORUŚ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BIAŁORUŚ")]
        BY,
        
        /// <summary>
        /// <para>BOLIWIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOLIWIA")]
        BO,
        
        /// <summary>
        /// <para>BONAIRE, SINT EUSTATIUS I SABA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BONAIRE, SINT EUSTATIUS I SABA")]
        BQ,
        
        /// <summary>
        /// <para>BOŚNIA I HERCEGOWINA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOŚNIA I HERCEGOWINA")]
        BA,
        
        /// <summary>
        /// <para>BOTSWANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOTSWANA")]
        BW,
        
        /// <summary>
        /// <para>BRAZYLIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRAZYLIA")]
        BR,
        
        /// <summary>
        /// <para>BRUNEI DARUSSALAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRUNEI DARUSSALAM")]
        BN,
        
        /// <summary>
        /// <para>BRYTYJSKIE TERYTORIUM OCEANU INDYJSKIEGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRYTYJSKIE TERYTORIUM OCEANU INDYJSKIEGO")]
        IO,
        
        /// <summary>
        /// <para>BUŁGARIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUŁGARIA")]
        BG,
        
        /// <summary>
        /// <para>BURKINA FASO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BURKINA FASO")]
        BF,
        
        /// <summary>
        /// <para>BURUNDI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BURUNDI")]
        BI,
        
        /// <summary>
        /// <para>CEUTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CEUTA")]
        XC,
        
        /// <summary>
        /// <para>CHILE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHILE")]
        CL,
        
        /// <summary>
        /// <para>CHINY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHINY")]
        CN,
        
        /// <summary>
        /// <para>CHORWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHORWACJA")]
        HR,
        
        /// <summary>
        /// <para>CURAÇAO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CURAÇAO")]
        CW,
        
        /// <summary>
        /// <para>CYPR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CYPR")]
        CY,
        
        /// <summary>
        /// <para>CZAD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CZAD")]
        TD,
        
        /// <summary>
        /// <para>CZARNOGÓRA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CZARNOGÓRA")]
        ME,
        
        /// <summary>
        /// <para>DANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DANIA")]
        DK,
        
        /// <summary>
        /// <para>DOMINIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOMINIKA")]
        DM,
        
        /// <summary>
        /// <para>DOMINIKANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOMINIKANA")]
        DO,
        
        /// <summary>
        /// <para>DŻIBUTI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DŻIBUTI")]
        DJ,
        
        /// <summary>
        /// <para>EGIPT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EGIPT")]
        EG,
        
        /// <summary>
        /// <para>EKWADOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EKWADOR")]
        EC,
        
        /// <summary>
        /// <para>ERYTREA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ERYTREA")]
        ER,
        
        /// <summary>
        /// <para>ESTONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ESTONIA")]
        EE,
        
        /// <summary>
        /// <para>ETIOPIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ETIOPIA")]
        ET,
        
        /// <summary>
        /// <para>FALKLANDY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FALKLANDY")]
        FK,
        
        /// <summary>
        /// <para>FIDŻI REPUBLIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FIDŻI REPUBLIKA")]
        FJ,
        
        /// <summary>
        /// <para>FILIPINY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FILIPINY")]
        PH,
        
        /// <summary>
        /// <para>FINLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINLANDIA")]
        FI,
        
        /// <summary>
        /// <para>FRANCJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANCJA")]
        FR,
        
        /// <summary>
        /// <para>FRANCUSKIE TERYTORIUM POŁUDNIOWE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANCUSKIE TERYTORIUM POŁUDNIOWE")]
        TF,
        
        /// <summary>
        /// <para>GABON</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GABON")]
        GA,
        
        /// <summary>
        /// <para>GAMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GAMBIA")]
        GM,
        
        /// <summary>
        /// <para>GHANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GHANA")]
        GH,
        
        /// <summary>
        /// <para>GIBRALTAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GIBRALTAR")]
        GI,
        
        /// <summary>
        /// <para>GRECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRECJA")]
        GR,
        
        /// <summary>
        /// <para>GRENADA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRENADA")]
        GD,
        
        /// <summary>
        /// <para>GRENLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRENLANDIA")]
        GL,
        
        /// <summary>
        /// <para>GRUZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRUZJA")]
        GE,
        
        /// <summary>
        /// <para>GUAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUAM")]
        GU,
        
        /// <summary>
        /// <para>GUERNSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUERNSEY")]
        GG,
        
        /// <summary>
        /// <para>GUJANA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUJANA")]
        GY,
        
        /// <summary>
        /// <para>GUJANA FRANCUSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUJANA FRANCUSKA")]
        GF,
        
        /// <summary>
        /// <para>GWADELUPA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWADELUPA")]
        GP,
        
        /// <summary>
        /// <para>GWATEMALA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWATEMALA")]
        GT,
        
        /// <summary>
        /// <para>GWINEA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA")]
        GN,
        
        /// <summary>
        /// <para>GWINEA RÓWNIKOWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA RÓWNIKOWA")]
        GQ,
        
        /// <summary>
        /// <para>GWINEA-BISSAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GWINEA-BISSAU")]
        GW,
        
        /// <summary>
        /// <para>HAITI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HAITI")]
        HT,
        
        /// <summary>
        /// <para>HISZPANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HISZPANIA")]
        ES,
        
        /// <summary>
        /// <para>HONDURAS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HONDURAS")]
        HN,
        
        /// <summary>
        /// <para>HONGKONG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HONGKONG")]
        HK,
        
        /// <summary>
        /// <para>INDIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INDIE")]
        IN,
        
        /// <summary>
        /// <para>INDONEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INDONEZJA")]
        ID,
        
        /// <summary>
        /// <para>IRAK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRAK")]
        IQ,
        
        /// <summary>
        /// <para>IRAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRAN")]
        IR,
        
        /// <summary>
        /// <para>IRLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRLANDIA")]
        IE,
        
        /// <summary>
        /// <para>ISLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ISLANDIA")]
        IS,
        
        /// <summary>
        /// <para>IZRAEL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IZRAEL")]
        IL,
        
        /// <summary>
        /// <para>JAMAJKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JAMAJKA")]
        JM,
        
        /// <summary>
        /// <para>JAPONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JAPONIA")]
        JP,
        
        /// <summary>
        /// <para>JEMEN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JEMEN")]
        YE,
        
        /// <summary>
        /// <para>JERSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JERSEY")]
        JE,
        
        /// <summary>
        /// <para>JORDANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JORDANIA")]
        JO,
        
        /// <summary>
        /// <para>KAJMANY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAJMANY")]
        KY,
        
        /// <summary>
        /// <para>KAMBODŻA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAMBODŻA")]
        KH,
        
        /// <summary>
        /// <para>KAMERUN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAMERUN")]
        CM,
        
        /// <summary>
        /// <para>KANADA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KANADA")]
        CA,
        
        /// <summary>
        /// <para>KATAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KATAR")]
        QA,
        
        /// <summary>
        /// <para>KAZACHSTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KAZACHSTAN")]
        KZ,
        
        /// <summary>
        /// <para>KENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KENIA")]
        KE,
        
        /// <summary>
        /// <para>KIRGISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KIRGISTAN")]
        KG,
        
        /// <summary>
        /// <para>KIRIBATI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KIRIBATI")]
        KI,
        
        /// <summary>
        /// <para>KOLUMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOLUMBIA")]
        CO,
        
        /// <summary>
        /// <para>KOMORY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOMORY")]
        KM,
        
        /// <summary>
        /// <para>KONGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KONGO")]
        CG,
        
        /// <summary>
        /// <para>KONGO, REPUBLIKA DEMOKRATYCZNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KONGO, REPUBLIKA DEMOKRATYCZNA")]
        CD,
        
        /// <summary>
        /// <para>KOREAŃSKA REPUBLIKA LUDOWO-DEMOKRATYCZNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOREAŃSKA REPUBLIKA LUDOWO-DEMOKRATYCZNA")]
        KP,
        
        /// <summary>
        /// <para>KOSOWO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOSOWO")]
        XK,
        
        /// <summary>
        /// <para>KOSTARYKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KOSTARYKA")]
        CR,
        
        /// <summary>
        /// <para>KUBA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KUBA")]
        CU,
        
        /// <summary>
        /// <para>KUWEJT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KUWEJT")]
        KW,
        
        /// <summary>
        /// <para>LAOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LAOS")]
        LA,
        
        /// <summary>
        /// <para>LESOTHO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LESOTHO")]
        LS,
        
        /// <summary>
        /// <para>LIBAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBAN")]
        LB,
        
        /// <summary>
        /// <para>LIBERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBERIA")]
        LR,
        
        /// <summary>
        /// <para>LIBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBIA")]
        LY,
        
        /// <summary>
        /// <para>LIECHTENSTEIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIECHTENSTEIN")]
        LI,
        
        /// <summary>
        /// <para>LITWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LITWA")]
        LT,
        
        /// <summary>
        /// <para>ŁOTWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ŁOTWA")]
        LV,
        
        /// <summary>
        /// <para>LUKSEMBURG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LUKSEMBURG")]
        LU,
        
        /// <summary>
        /// <para>MACEDONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MACEDONIA")]
        MK,
        
        /// <summary>
        /// <para>MADAGASKAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MADAGASKAR")]
        MG,
        
        /// <summary>
        /// <para>MAJOTTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAJOTTA")]
        YT,
        
        /// <summary>
        /// <para>MAKAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAKAU")]
        MO,
        
        /// <summary>
        /// <para>MALAWI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALAWI")]
        MW,
        
        /// <summary>
        /// <para>MALEDIWY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALEDIWY")]
        MV,
        
        /// <summary>
        /// <para>MALEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALEZJA")]
        MY,
        
        /// <summary>
        /// <para>MALI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALI")]
        ML,
        
        /// <summary>
        /// <para>MALTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALTA")]
        MT,
        
        /// <summary>
        /// <para>MARIANY PÓŁNOCNE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARIANY PÓŁNOCNE")]
        MP,
        
        /// <summary>
        /// <para>MAROKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAROKO")]
        MA,
        
        /// <summary>
        /// <para>MARTYNIKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARTYNIKA")]
        MQ,
        
        /// <summary>
        /// <para>MAURETANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAURETANIA")]
        MR,
        
        /// <summary>
        /// <para>MAURITIUS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAURITIUS")]
        MU,
        
        /// <summary>
        /// <para>MEKSYK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEKSYK")]
        MX,
        
        /// <summary>
        /// <para>MELILLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MELILLA")]
        XL,
        
        /// <summary>
        /// <para>MIKRONEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MIKRONEZJA")]
        FM,
        
        /// <summary>
        /// <para>MINOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINOR")]
        UM,
        
        /// <summary>
        /// <para>MOŁDOWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOŁDOWA")]
        MD,
        
        /// <summary>
        /// <para>MONAKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONAKO")]
        MC,
        
        /// <summary>
        /// <para>MONGOLIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONGOLIA")]
        MN,
        
        /// <summary>
        /// <para>MONTSERRAT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONTSERRAT")]
        MS,
        
        /// <summary>
        /// <para>MOZAMBIK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOZAMBIK")]
        MZ,
        
        /// <summary>
        /// <para>MYANMAR (BURMA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MYANMAR (BURMA)")]
        MM,
        
        /// <summary>
        /// <para>NAMIBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAMIBIA")]
        NA,
        
        /// <summary>
        /// <para>NAURU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAURU")]
        NR,
        
        /// <summary>
        /// <para>NEPAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NEPAL")]
        NP,
        
        /// <summary>
        /// <para>NIDERLANDY (HOLANDIA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIDERLANDY (HOLANDIA)")]
        NL,
        
        /// <summary>
        /// <para>NIEMCY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIEMCY")]
        DE,
        
        /// <summary>
        /// <para>NIGER</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIGER")]
        NE,
        
        /// <summary>
        /// <para>NIGERIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIGERIA")]
        NG,
        
        /// <summary>
        /// <para>NIKARAGUA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIKARAGUA")]
        NI,
        
        /// <summary>
        /// <para>NIUE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIUE")]
        NU,
        
        /// <summary>
        /// <para>NORFOLK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NORFOLK")]
        NF,
        
        /// <summary>
        /// <para>NORWEGIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NORWEGIA")]
        NO,
        
        /// <summary>
        /// <para>NOWA KALEDONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NOWA KALEDONIA")]
        NC,
        
        /// <summary>
        /// <para>NOWA ZELANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NOWA ZELANDIA")]
        NZ,
        
        /// <summary>
        /// <para>OKUPOWANE TERYTORIUM PALESTYNY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OKUPOWANE TERYTORIUM PALESTYNY")]
        PS,
        
        /// <summary>
        /// <para>OMAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OMAN")]
        OM,
        
        /// <summary>
        /// <para>PAKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAKISTAN")]
        PK,
        
        /// <summary>
        /// <para>PALAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PALAU")]
        PW,
        
        /// <summary>
        /// <para>PANAMA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PANAMA")]
        PA,
        
        /// <summary>
        /// <para>PAPUA NOWA GWINEA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAPUA NOWA GWINEA")]
        PG,
        
        /// <summary>
        /// <para>PARAGWAJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PARAGWAJ")]
        PY,
        
        /// <summary>
        /// <para>PERU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PERU")]
        PE,
        
        /// <summary>
        /// <para>PITCAIRN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PITCAIRN")]
        PN,
        
        /// <summary>
        /// <para>POLINEZJA FRANCUSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLINEZJA FRANCUSKA")]
        PF,
        
        /// <summary>
        /// <para>POLSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLSKA")]
        PL,
        
        /// <summary>
        /// <para>POŁUDNIOWA GEORGIA I POŁUD.WYSPY SANDWICH</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POŁUDNIOWA GEORGIA I POŁUD.WYSPY SANDWICH")]
        GS,
        
        /// <summary>
        /// <para>PORTUGALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PORTUGALIA")]
        PT,
        
        /// <summary>
        /// <para>PORTORYKO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PORTORYKO")]
        PR,
        
        /// <summary>
        /// <para>REP.ŚRODKOWOAFRYKAŃSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REP.ŚRODKOWOAFRYKAŃSKA")]
        CF,
        
        /// <summary>
        /// <para>REPUBLIKA CZESKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA CZESKA")]
        CZ,
        
        /// <summary>
        /// <para>REPUBLIKA KOREI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA KOREI")]
        KR,
        
        /// <summary>
        /// <para>REPUBLIKA POŁUDNIOWEJ AFRYKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REPUBLIKA POŁUDNIOWEJ AFRYKI")]
        ZA,
        
        /// <summary>
        /// <para>REUNION</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REUNION")]
        RE,
        
        /// <summary>
        /// <para>ROSJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ROSJA")]
        RU,
        
        /// <summary>
        /// <para>RUMUNIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUMUNIA")]
        RO,
        
        /// <summary>
        /// <para>RWANDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RWANDA")]
        RW,
        
        /// <summary>
        /// <para>SAHARA ZACHODNIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAHARA ZACHODNIA")]
        EH,
        
        /// <summary>
        /// <para>SAINT BARTHELEMY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT BARTHELEMY")]
        BL,
        
        /// <summary>
        /// <para>SAINT KITTS I NEVIS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT KITTS I NEVIS")]
        KN,
        
        /// <summary>
        /// <para>SAINT LUCIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT LUCIA")]
        LC,
        
        /// <summary>
        /// <para>SAINT MARTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT MARTIN")]
        MF,
        
        /// <summary>
        /// <para>SAINT VINCENT I GRENADYNY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT VINCENT I GRENADYNY")]
        VC,
        
        /// <summary>
        /// <para>SALWADOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALWADOR")]
        SV,
        
        /// <summary>
        /// <para>SAMOA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAMOA")]
        WS,
        
        /// <summary>
        /// <para>SAMOA AMERYKAŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAMOA AMERYKAŃSKIE")]
        AS,
        
        /// <summary>
        /// <para>SAN MARINO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAN MARINO")]
        SM,
        
        /// <summary>
        /// <para>SENEGAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SENEGAL")]
        SN,
        
        /// <summary>
        /// <para>SERBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SERBIA")]
        RS,
        
        /// <summary>
        /// <para>SESZELE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SESZELE")]
        SC,
        
        /// <summary>
        /// <para>SIERRA LEONE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SIERRA LEONE")]
        SL,
        
        /// <summary>
        /// <para>SINGAPUR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SINGAPUR")]
        SG,
        
        /// <summary>
        /// <para>SŁOWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWACJA")]
        SK,
        
        /// <summary>
        /// <para>SŁOWENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWENIA")]
        SI,
        
        /// <summary>
        /// <para>SOMALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOMALIA")]
        SO,
        
        /// <summary>
        /// <para>SRI LANKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SRI LANKA")]
        LK,
        
        /// <summary>
        /// <para>SAINT PIERRE I MIQUELON</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAINT PIERRE I MIQUELON")]
        PM,
        
        /// <summary>
        /// <para>STANY ZJEDNOCZONE AMERYKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STANY ZJEDNOCZONE AMERYKI")]
        US,
        
        /// <summary>
        /// <para>SUAZI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUAZI")]
        SZ,
        
        /// <summary>
        /// <para>SUDAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUDAN")]
        SD,
        
        /// <summary>
        /// <para>SUDAN POŁUDNIOWY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUDAN POŁUDNIOWY")]
        SS,
        
        /// <summary>
        /// <para>SURINAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SURINAM")]
        SR,
        
        /// <summary>
        /// <para>SVALBARD I JAN MAYEN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SVALBARD I JAN MAYEN")]
        SJ,
        
        /// <summary>
        /// <para>ŚWIĘTA HELENA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ŚWIĘTA HELENA")]
        SH,
        
        /// <summary>
        /// <para>SYRIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SYRIA")]
        SY,
        
        /// <summary>
        /// <para>SZWAJCARIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZWAJCARIA")]
        CH,
        
        /// <summary>
        /// <para>SZWECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZWECJA")]
        SE,
        
        /// <summary>
        /// <para>TADŻYKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TADŻYKISTAN")]
        TJ,
        
        /// <summary>
        /// <para>TAJLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAJLANDIA")]
        TH,
        
        /// <summary>
        /// <para>TAJWAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAJWAN")]
        TW,
        
        /// <summary>
        /// <para>TANZANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TANZANIA")]
        TZ,
        
        /// <summary>
        /// <para>TOGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TOGO")]
        TG,
        
        /// <summary>
        /// <para>TOKELAU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TOKELAU")]
        TK,
        
        /// <summary>
        /// <para>TONGA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TONGA")]
        TO,
        
        /// <summary>
        /// <para>TRYNIDAD I TOBAGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRYNIDAD I TOBAGO")]
        TT,
        
        /// <summary>
        /// <para>TUNEZJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TUNEZJA")]
        TN,
        
        /// <summary>
        /// <para>TURCJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TURCJA")]
        TR,
        
        /// <summary>
        /// <para>TURKMENISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TURKMENISTAN")]
        TM,
        
        /// <summary>
        /// <para>TUVALU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TUVALU")]
        TV,
        
        /// <summary>
        /// <para>UGANDA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UGANDA")]
        UG,
        
        /// <summary>
        /// <para>UKRAINA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UKRAINA")]
        UA,
        
        /// <summary>
        /// <para>URUGWAJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("URUGWAJ")]
        UY,
        
        /// <summary>
        /// <para>UZBEKISTAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UZBEKISTAN")]
        UZ,
        
        /// <summary>
        /// <para>VANUATU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VANUATU")]
        VU,
        
        /// <summary>
        /// <para>WALLIS I FUTUNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WALLIS I FUTUNA")]
        WF,
        
        /// <summary>
        /// <para>WATYKAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WATYKAN")]
        VA,
        
        /// <summary>
        /// <para>WĘGRY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WĘGRY")]
        HU,
        
        /// <summary>
        /// <para>WENEZUELA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WENEZUELA")]
        VE,
        
        /// <summary>
        /// <para>WIELKA BRYTANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIELKA BRYTANIA")]
        GB,
        
        /// <summary>
        /// <para>WIETNAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIETNAM")]
        VN,
        
        /// <summary>
        /// <para>WŁOCHY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WŁOCHY")]
        IT,
        
        /// <summary>
        /// <para>WSCHODNI TIMOR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WSCHODNI TIMOR")]
        TL,
        
        /// <summary>
        /// <para>WYBRZEŻE KOŚCI SŁONIOWEJ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYBRZEŻE KOŚCI SŁONIOWEJ")]
        CI,
        
        /// <summary>
        /// <para>WYSPA BOUVETA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA BOUVETA")]
        BV,
        
        /// <summary>
        /// <para>WYSPA BOŻEGO NARODZENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA BOŻEGO NARODZENIA")]
        CX,
        
        /// <summary>
        /// <para>WYSPA MAN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA MAN")]
        IM,
        
        /// <summary>
        /// <para>WYSPA SINT MAARTEN (CZĘŚĆ HOLENDERSKA WYSPY)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPA SINT MAARTEN (CZĘŚĆ HOLENDERSKA WYSPY)")]
        SX,
        
        /// <summary>
        /// <para>WYSPY COOKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY COOKA")]
        CK,
        
        /// <summary>
        /// <para>WYSPY DZIEWICZE-USA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY DZIEWICZE-USA")]
        VI,
        
        /// <summary>
        /// <para>WYSPY DZIEWICZE-W.B.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY DZIEWICZE-W.B.")]
        VG,
        
        /// <summary>
        /// <para>WYSPY HEARD I MCDONALD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY HEARD I MCDONALD")]
        HM,
        
        /// <summary>
        /// <para>WYSPY KOKOSOWE (KEELINGA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY KOKOSOWE (KEELINGA)")]
        CC,
        
        /// <summary>
        /// <para>WYSPY MARSHALLA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY MARSHALLA")]
        MH,
        
        /// <summary>
        /// <para>WYSPY OWCZE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY OWCZE")]
        FO,
        
        /// <summary>
        /// <para>WYSPY SALOMONA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY SALOMONA")]
        SB,
        
        /// <summary>
        /// <para>WYSPY ŚWIĘTEGO TOMASZA I KSIĄŻĘCA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY ŚWIĘTEGO TOMASZA I KSIĄŻĘCA")]
        ST,
        
        /// <summary>
        /// <para>WYSPY TURKS I CAICOS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WYSPY TURKS I CAICOS")]
        TC,
        
        /// <summary>
        /// <para>ZAMBIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZAMBIA")]
        ZM,
        
        /// <summary>
        /// <para>ZIELONY PRZYLĄDEK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZIELONY PRZYLĄDEK")]
        CV,
        
        /// <summary>
        /// <para>ZIMBABWE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZIMBABWE")]
        ZW,
        
        /// <summary>
        /// <para>ZJEDNOCZONE EMIRATY ARABSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZJEDNOCZONE EMIRATY ARABSKIE")]
        AE,
        
        /// <summary>
        /// <para>ZJEDNOCZONE KRÓLESTWO (IRLANDIA PÓŁNOCNA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZJEDNOCZONE KRÓLESTWO (IRLANDIA PÓŁNOCNA)")]
        XI,
    }
    
    /// <summary>
    /// <para>Dane określające adres - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Dane określające adres - bez elementu Poczta w adresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TAdres1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOsobaFizyczna3AdresZamieszkania))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOsobaFizyczna4AdresZamieszkania))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOsobaFizyczna5AdresZamieszkania))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOsobaFizycznaPelna1AdresZamieszkania))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOsobaNiefizyczna1AdresSiedziby))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOsobaNiefizyczna2AdresSiedziby))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOsobaNiefizycznaPelna1AdresSiedziby))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TPodmiotDowolny1AdresZamieszkaniaSiedziby))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TPodmiotDowolny2AdresZamieszkaniaSiedziby))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TPodmiotDowolnyPelny1AdresZamieszkaniaSiedziby))]
    public partial class TAdres1
    {
        
        [System.Xml.Serialization.XmlElementAttribute("AdresPol")]
        public TAdresPolski1 AdresPol { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("AdresZagr")]
        public TAdresZagraniczny AdresZagr { get; set; }
    }
    
    /// <summary>
    /// <para>Informacje opisujące adres polski - bez elementu Poczta</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Informacje opisujące adres polski - bez elementu Poczta")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TAdresPolski1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TAdresPolski1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ProFak.IO.FA_2.TKodKraju _kodKraju = ProFak.IO.FA_2.TKodKraju.PL;
        
        /// <summary>
        /// <para>Kraj</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kraj")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("KodKraju")]
        public ProFak.IO.FA_2.TKodKraju KodKraju
        {
            get
            {
                return _kodKraju;
            }
            set
            {
                _kodKraju = value;
            }
        }
        
        /// <summary>
        /// <para>Województwo</para>
        /// <para>Typ określający nazwę województwa, nazwę powiatu lub nazwę gminy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Województwo")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Wojewodztwo")]
        public string Wojewodztwo { get; set; }
        
        /// <summary>
        /// <para>Powiat</para>
        /// <para>Typ określający nazwę województwa, nazwę powiatu lub nazwę gminy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Powiat")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Powiat")]
        public string Powiat { get; set; }
        
        /// <summary>
        /// <para>Gmina</para>
        /// <para>Typ określający nazwę województwa, nazwę powiatu lub nazwę gminy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gmina")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Gmina")]
        public string Gmina { get; set; }
        
        /// <summary>
        /// <para>Nazwa ulicy</para>
        /// <para>Nazwa ulicy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 65.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa ulicy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(65)]
        [System.Xml.Serialization.XmlElementAttribute("Ulica")]
        public string Ulica { get; set; }
        
        /// <summary>
        /// <para>Numer budynku</para>
        /// <para>Numer budynku</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer budynku")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("NrDomu")]
        public string NrDomu { get; set; }
        
        /// <summary>
        /// <para>Numer lokalu</para>
        /// <para>Numer lokalu</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer lokalu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.Xml.Serialization.XmlElementAttribute("NrLokalu")]
        public string NrLokalu { get; set; }
        
        /// <summary>
        /// <para>Nazwa miejscowości</para>
        /// <para>Typ określający nazwę miejscowości</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 56.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa miejscowości")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(56)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Miejscowosc")]
        public string Miejscowosc { get; set; }
        
        /// <summary>
        /// <para>Kod pocztowy</para>
        /// <para>Kod pocztowy</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod pocztowy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("KodPocztowy")]
        public string KodPocztowy { get; set; }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych identyfikacyjnych o osobie fizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych identyfikacyjnych o osobie fizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyFizycznej", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyFizycznej
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Pierwsze imię</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pierwsze imię")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("ImiePierwsze")]
        public string ImiePierwsze { get; set; }
        
        /// <summary>
        /// <para>Nazwisko</para>
        /// <para>Nazwisko</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 81.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwisko")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(81)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwisko")]
        public string Nazwisko { get; set; }
        
        /// <summary>
        /// <para>Data urodzenia</para>
        /// <para>Typ daty</para>
        /// <para xml:lang="en">Minimum inclusive value: 1900-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-12-31.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data urodzenia")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "1900-01-01", "2050-12-31")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataUrodzenia", DataType="date")]
        public System.DateTime DataUrodzenia { get; set; }
        
        /// <summary>
        /// <para>Identyfikator podatkowy numer PESEL</para>
        /// <para>Identyfikator podatkowy numer PESEL</para>
        /// <para xml:lang="en">Pattern: \d{11}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy numer PESEL")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{11}")]
        [System.Xml.Serialization.XmlElementAttribute("PESEL")]
        public string PESEL { get; set; }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych identyfikacyjnych o osobie fizycznej z identyfikatorem NIP albo PESEL</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych identyfikacyjnych o osobie fizycznej z identyfikatorem N" +
        "IP albo PESEL")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyFizycznej1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyFizycznej1
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Identyfikator podatkowy numer PESEL</para>
        /// <para>Identyfikator podatkowy numer PESEL</para>
        /// <para xml:lang="en">Pattern: \d{11}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy numer PESEL")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{11}")]
        [System.Xml.Serialization.XmlElementAttribute("PESEL")]
        public string PESEL { get; set; }
        
        /// <summary>
        /// <para>Pierwsze imię</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pierwsze imię")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("ImiePierwsze")]
        public string ImiePierwsze { get; set; }
        
        /// <summary>
        /// <para>Nazwisko</para>
        /// <para>Nazwisko</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 81.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwisko")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(81)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwisko")]
        public string Nazwisko { get; set; }
        
        /// <summary>
        /// <para>Data urodzenia</para>
        /// <para>Typ daty</para>
        /// <para xml:lang="en">Minimum inclusive value: 1900-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-12-31.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data urodzenia")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "1900-01-01", "2050-12-31")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataUrodzenia", DataType="date")]
        public System.DateTime DataUrodzenia { get; set; }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych identyfikacyjnych o osobie fizycznej z identyfikatorem NIP</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych identyfikacyjnych o osobie fizycznej z identyfikatorem N" +
        "IP")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyFizycznej2", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyFizycznej2
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Pierwsze imię</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pierwsze imię")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("ImiePierwsze")]
        public string ImiePierwsze { get; set; }
        
        /// <summary>
        /// <para>Nazwisko</para>
        /// <para>Nazwisko</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 81.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwisko")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(81)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwisko")]
        public string Nazwisko { get; set; }
        
        /// <summary>
        /// <para>Data urodzenia</para>
        /// <para>Typ daty</para>
        /// <para xml:lang="en">Minimum inclusive value: 1900-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-12-31.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data urodzenia")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "1900-01-01", "2050-12-31")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataUrodzenia", DataType="date")]
        public System.DateTime DataUrodzenia { get; set; }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych identyfikacyjnych o osobie fizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych identyfikacyjnych o osobie fizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyFizycznejPelny", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyFizycznejPelny
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Pierwsze imię</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pierwsze imię")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("ImiePierwsze")]
        public string ImiePierwsze { get; set; }
        
        /// <summary>
        /// <para>Nazwisko</para>
        /// <para>Nazwisko</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 81.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwisko")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(81)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwisko")]
        public string Nazwisko { get; set; }
        
        /// <summary>
        /// <para>Data urodzenia</para>
        /// <para>Typ daty</para>
        /// <para xml:lang="en">Minimum inclusive value: 1900-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-12-31.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data urodzenia")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "1900-01-01", "2050-12-31")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataUrodzenia", DataType="date")]
        public System.DateTime DataUrodzenia { get; set; }
        
        /// <summary>
        /// <para>Imię ojca</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię ojca")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("ImieOjca")]
        public string ImieOjca { get; set; }
        
        /// <summary>
        /// <para>Imię matki</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię matki")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("ImieMatki")]
        public string ImieMatki { get; set; }
        
        /// <summary>
        /// <para>Identyfikator podatkowy numer PESEL</para>
        /// <para>Identyfikator podatkowy numer PESEL</para>
        /// <para xml:lang="en">Pattern: \d{11}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy numer PESEL")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{11}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PESEL")]
        public string PESEL { get; set; }
    }
    
    /// <summary>
    /// <para>Zestaw danych identyfikacyjnych dla osoby fizycznej zagranicznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Zestaw danych identyfikacyjnych dla osoby fizycznej zagranicznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyFizycznejZagranicznej", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyFizycznejZagranicznej
    {
        
        /// <summary>
        /// <para>Imię pierwsze [First name]</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię pierwsze [First name]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("ImiePierwsze")]
        public string ImiePierwsze { get; set; }
        
        /// <summary>
        /// <para>Nazwisko [Family name]</para>
        /// <para>Nazwisko</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 81.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwisko [Family name]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(81)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwisko")]
        public string Nazwisko { get; set; }
        
        /// <summary>
        /// <para>Data urodzenia [Date of Birth]</para>
        /// <para>Typ daty</para>
        /// <para xml:lang="en">Minimum inclusive value: 1900-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-12-31.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data urodzenia [Date of Birth]")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "1900-01-01", "2050-12-31")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataUrodzenia", DataType="date")]
        public System.DateTime DataUrodzenia { get; set; }
        
        /// <summary>
        /// <para>Miejsce urodzenia [Place of Birth]</para>
        /// <para>Typ określający nazwę miejscowości</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 56.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miejsce urodzenia [Place of Birth]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(56)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("MiejsceUrodzenia")]
        public string MiejsceUrodzenia { get; set; }
        
        /// <summary>
        /// <para>Imię ojca [Father’s name]</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię ojca [Father’s name]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("ImieOjca")]
        public string ImieOjca { get; set; }
        
        /// <summary>
        /// <para>Imię matki [Mother’s name]</para>
        /// <para>Pierwsze imię</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię matki [Mother’s name]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("ImieMatki")]
        public string ImieMatki { get; set; }
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP [Tax Identification Number (NIP)]</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP [Tax Identification Number (NIP)]")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych identyfikacyjnych o osobie niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych identyfikacyjnych o osobie niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyNiefizycznej", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyNiefizycznej
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Pełna nazwa</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 240.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pełna nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(240)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("PelnaNazwa")]
        public string PelnaNazwa { get; set; }
        
        /// <summary>
        /// <para>Numer REGON</para>
        /// <para>Numer REGON</para>
        /// <para xml:lang="en">Pattern: (\d{9})|(\d{14}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer REGON")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\d{9})|(\\d{14})")]
        [System.Xml.Serialization.XmlElementAttribute("REGON")]
        public string REGON { get; set; }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych identyfikacyjnych o osobie niefizycznej  - bez elementu Numer REGON</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych identyfikacyjnych o osobie niefizycznej - bez elementu N" +
        "umer REGON")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyNiefizycznej1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyNiefizycznej1
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Pełna nazwa</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 240.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pełna nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(240)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("PelnaNazwa")]
        public string PelnaNazwa { get; set; }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych identyfikacyjnych o osobie niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych identyfikacyjnych o osobie niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyNiefizycznejPelny", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyNiefizycznejPelny
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Pełna nazwa</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 240.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pełna nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(240)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("PelnaNazwa")]
        public string PelnaNazwa { get; set; }
        
        /// <summary>
        /// <para>Skrócona nazwa</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Skrócona nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("SkroconaNazwa")]
        public string SkroconaNazwa { get; set; }
        
        /// <summary>
        /// <para>Numer REGON</para>
        /// <para>Numer REGON</para>
        /// <para xml:lang="en">Pattern: (\d{9})|(\d{14}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer REGON")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\d{9})|(\\d{14})")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("REGON")]
        public string REGON { get; set; }
    }
    
    /// <summary>
    /// <para>Zestaw danych identyfikacyjnych dla osoby niefizycznej zagranicznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Zestaw danych identyfikacyjnych dla osoby niefizycznej zagranicznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIdentyfikatorOsobyNiefizycznejZagranicznej", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIdentyfikatorOsobyNiefizycznejZagranicznej
    {
        
        /// <summary>
        /// <para>Pełna nazwa [Name]</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 240.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pełna nazwa [Name]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(240)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("PelnaNazwa")]
        public string PelnaNazwa { get; set; }
        
        /// <summary>
        /// <para>Nazwa skrócona [Short Name]</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 70.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa skrócona [Short Name]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(70)]
        [System.Xml.Serialization.XmlElementAttribute("SkroconaNazwa")]
        public string SkroconaNazwa { get; set; }
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP [Tax Identification Number (NIP)]</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP [Tax Identification Number (NIP)]")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
    }
    
    /// <summary>
    /// <para>Skrócony zestaw danych o osobie fizycznej lub niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Skrócony zestaw danych o osobie fizycznej lub niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyBezAdresu", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TPodmiotDowolny))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TPodmiotDowolny1))]
    public partial class TPodmiotDowolnyBezAdresu
    {
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej OsobaFizyczna { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznej OsobaNiefizyczna { get; set; }
    }
    
    /// <summary>
    /// <para>Skrócony zestaw danych o osobie fizycznej lub niefizycznej z identyfikatorem NIP albo PESEL</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Skrócony zestaw danych o osobie fizycznej lub niefizycznej z identyfikatorem NIP " +
        "albo PESEL")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyBezAdresu1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolnyBezAdresu1
    {
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej1 OsobaFizyczna { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznej OsobaNiefizyczna { get; set; }
    }
    
    /// <summary>
    /// <para>Skrócony zestaw danych o osobie fizycznej lub niefizycznej z identyfikatorem NIP</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Skrócony zestaw danych o osobie fizycznej lub niefizycznej z identyfikatorem NIP")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyBezAdresu2", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolnyBezAdresu2
    {
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej2 OsobaFizyczna { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznej OsobaNiefizyczna { get; set; }
    }
    
    /// <summary>
    /// <para>Skrócony zestaw danych o osobie fizycznej lub niefizycznej z identyfikatorem NIP - bez elementu numer REGON dla osoby niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Skrócony zestaw danych o osobie fizycznej lub niefizycznej z identyfikatorem NIP " +
        "- bez elementu numer REGON dla osoby niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyBezAdresu3", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TPodmiotDowolny2))]
    public partial class TPodmiotDowolnyBezAdresu3
    {
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej2 OsobaFizyczna { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznej1 OsobaNiefizyczna { get; set; }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizycznaAdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizycznaAdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizycznaAdresZamieszkania : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP albo PESEL</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP albo PESEL")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna1
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej1 OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizyczna1AdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna1AdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna1AdresZamieszkania : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej - bez elementu Poczta w adresie polsk" +
        "im")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna5", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna5
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizyczna5AdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna5AdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna5AdresZamieszkania : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP albo PESEL - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP albo PESEL - be" +
        "z elementu Poczta w adresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna3", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna3
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej1 OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizyczna3AdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna3AdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna3AdresZamieszkania : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna2", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna2
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej2 OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizyczna2AdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna2AdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna2AdresZamieszkania : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizyczna", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizyczna
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznej OsobaNiefizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresSiedziby")]
        public TOsobaNiefizycznaAdresSiedziby AdresSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizycznaAdresSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizycznaAdresSiedziby : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie niefizycznej - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie niefizycznej - bez elementu Poczta w adresie po" +
        "lskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizyczna1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizyczna1
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznej OsobaNiefizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresSiedziby")]
        public TOsobaNiefizyczna1AdresSiedziby AdresSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizyczna1AdresSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizyczna1AdresSiedziby : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie niefizycznej - bez elementu Numer REGON oraz bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie niefizycznej - bez elementu Numer REGON oraz be" +
        "z elementu Poczta w adresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizyczna2", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizyczna2
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznej1 OsobaNiefizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresSiedziby")]
        public TOsobaNiefizyczna2AdresSiedziby AdresSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizyczna2AdresSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizyczna2AdresSiedziby : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej z identyfikatorem NIP - bez elementu " +
        "Poczta w adresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna4", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna4
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznej2 OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizyczna4AdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizyczna4AdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizyczna4AdresZamieszkania : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej lub niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej lub niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolny", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolny : TPodmiotDowolnyBezAdresu
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkaniaSiedziby")]
        public TPodmiotDowolnyAdresZamieszkaniaSiedziby AdresZamieszkaniaSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyAdresZamieszkaniaSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolnyAdresZamieszkaniaSiedziby : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych o osobie fizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych o osobie fizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizycznaPelna", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizycznaPelna
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznejPelny OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizycznaPelnaAdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizycznaPelnaAdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizycznaPelnaAdresZamieszkania : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych o osobie fizycznej - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych o osobie fizycznej - bez elementu Poczta w adresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizycznaPelna1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizycznaPelna1
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznejPelny OsobaFizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkania")]
        public TOsobaFizycznaPelna1AdresZamieszkania AdresZamieszkania { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaFizycznaPelna1AdresZamieszkania", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaFizycznaPelna1AdresZamieszkania : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej lub niefizycznej - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej lub niefizycznej - bez elementu Poczt" +
        "a w adresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolny1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolny1 : TPodmiotDowolnyBezAdresu
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkaniaSiedziby")]
        public TPodmiotDowolny1AdresZamieszkaniaSiedziby AdresZamieszkaniaSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolny1AdresZamieszkaniaSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolny1AdresZamieszkaniaSiedziby : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Podstawowy zestaw danych o osobie fizycznej lub niefizycznej - bez elementu Numer REGON oraz bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Podstawowy zestaw danych o osobie fizycznej lub niefizycznej - bez elementu Numer" +
        " REGON oraz bez elementu Poczta w adresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolny2", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolny2 : TPodmiotDowolnyBezAdresu3
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkaniaSiedziby")]
        public TPodmiotDowolny2AdresZamieszkaniaSiedziby AdresZamieszkaniaSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolny2AdresZamieszkaniaSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolny2AdresZamieszkaniaSiedziby : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych o niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych o niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizycznaPelna", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizycznaPelna
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznejPelny OsobaNiefizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresSiedziby")]
        public TOsobaNiefizycznaPelnaAdresSiedziby AdresSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizycznaPelnaAdresSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizycznaPelnaAdresSiedziby : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych o osobie fizycznej lub niefizycznej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych o osobie fizycznej lub niefizycznej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyPelny", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolnyPelny
    {
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznejPelny OsobaFizyczna { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznejPelny OsobaNiefizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkaniaSiedziby")]
        public TPodmiotDowolnyPelnyAdresZamieszkaniaSiedziby AdresZamieszkaniaSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyPelnyAdresZamieszkaniaSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolnyPelnyAdresZamieszkaniaSiedziby : TAdres
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych o osobie fizycznej lub niefizycznej - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych o osobie fizycznej lub niefizycznej - bez elementu Poczta w a" +
        "dresie polskim")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyPelny1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolnyPelny1
    {
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaFizyczna")]
        public TIdentyfikatorOsobyFizycznejPelny OsobaFizyczna { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznejPelny OsobaNiefizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresZamieszkaniaSiedziby")]
        public TPodmiotDowolnyPelny1AdresZamieszkaniaSiedziby AdresZamieszkaniaSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiotDowolnyPelny1AdresZamieszkaniaSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiotDowolnyPelny1AdresZamieszkaniaSiedziby : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Pełny zestaw danych o osobie niefizycznej - bez elementu Poczta w adresie polskim</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Pełny zestaw danych o osobie niefizycznej - bez elementu Poczta w adresie polskim" +
        "")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizycznaPelna1", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizycznaPelna1
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("OsobaNiefizyczna")]
        public TIdentyfikatorOsobyNiefizycznejPelny OsobaNiefizyczna { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresSiedziby")]
        public TOsobaNiefizycznaPelna1AdresSiedziby AdresSiedziby { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOsobaNiefizycznaPelna1AdresSiedziby", Namespace="http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/01/05/eD/DefinicjeTypy/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TOsobaNiefizycznaPelna1AdresSiedziby : TAdres1
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _rodzajAdresu = "RAD";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("rodzajAdresu")]
        public string rodzajAdresu
        {
            get
            {
                return _rodzajAdresu;
            }
            set
            {
                _rodzajAdresu = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Kody krajów członkowskich Unii Europejskiej, w tym kod dla obszaru Irlandii Północnej</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Kody krajów członkowskich Unii Europejskiej, w tym kod dla obszaru Irlandii Półno" +
        "cnej")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TKodyKrajowUE", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TKodyKrajowUE
    {
        
        /// <summary>
        /// <para>AUSTRIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUSTRIA")]
        AT,
        
        /// <summary>
        /// <para>BELGIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BELGIA")]
        BE,
        
        /// <summary>
        /// <para>BUŁGARIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUŁGARIA")]
        BG,
        
        /// <summary>
        /// <para>CYPR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CYPR")]
        CY,
        
        /// <summary>
        /// <para>CZECHY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CZECHY")]
        CZ,
        
        /// <summary>
        /// <para>DANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DANIA")]
        DK,
        
        /// <summary>
        /// <para>ESTONIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ESTONIA")]
        EE,
        
        /// <summary>
        /// <para>FINLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINLANDIA")]
        FI,
        
        /// <summary>
        /// <para>FRANCJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANCJA")]
        FR,
        
        /// <summary>
        /// <para>NIEMCY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NIEMCY")]
        DE,
        
        /// <summary>
        /// <para>GRECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRECJA")]
        EL,
        
        /// <summary>
        /// <para>CHORWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHORWACJA")]
        HR,
        
        /// <summary>
        /// <para>WĘGRY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WĘGRY")]
        HU,
        
        /// <summary>
        /// <para>IRLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRLANDIA")]
        IE,
        
        /// <summary>
        /// <para>WŁOCHY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WŁOCHY")]
        IT,
        
        /// <summary>
        /// <para>ŁOTWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ŁOTWA")]
        LV,
        
        /// <summary>
        /// <para>LITWA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LITWA")]
        LT,
        
        /// <summary>
        /// <para>LUKSEMBURG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LUKSEMBURG")]
        LU,
        
        /// <summary>
        /// <para>MALTA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MALTA")]
        MT,
        
        /// <summary>
        /// <para>HOLANDIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HOLANDIA")]
        NL,
        
        /// <summary>
        /// <para>POLSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLSKA")]
        PL,
        
        /// <summary>
        /// <para>PORTUGALIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PORTUGALIA")]
        PT,
        
        /// <summary>
        /// <para>RUMUNIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUMUNIA")]
        RO,
        
        /// <summary>
        /// <para>SŁOWACJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWACJA")]
        SK,
        
        /// <summary>
        /// <para>SŁOWENIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SŁOWENIA")]
        SI,
        
        /// <summary>
        /// <para>HISZPANIA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HISZPANIA")]
        ES,
        
        /// <summary>
        /// <para>SZWECJA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZWECJA")]
        SE,
        
        /// <summary>
        /// <para>IRLANDIA PÓŁNOCNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IRLANDIA PÓŁNOCNA")]
        XI,
    }
    
    /// <summary>
    /// <para>Słownik kodów walut</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Słownik kodów walut")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TKodWaluty", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TKodWaluty
    {
        
        /// <summary>
        /// <para>DIRHAM ZEA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DIRHAM ZEA")]
        AED,
        
        /// <summary>
        /// <para>AFGANI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AFGANI")]
        AFN,
        
        /// <summary>
        /// <para>LEK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEK")]
        ALL,
        
        /// <summary>
        /// <para>DRAM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DRAM")]
        AMD,
        
        /// <summary>
        /// <para>GULDEN ANTYLI HOLENDERSKICH</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GULDEN ANTYLI HOLENDERSKICH")]
        ANG,
        
        /// <summary>
        /// <para>KWANZA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KWANZA")]
        AOA,
        
        /// <summary>
        /// <para>PESO ARGENTYŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO ARGENTYŃSKIE")]
        ARS,
        
        /// <summary>
        /// <para>DOLAR AUSTRALIJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR AUSTRALIJSKI")]
        AUD,
        
        /// <summary>
        /// <para>GULDEN ARUBAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GULDEN ARUBAŃSKI")]
        AWG,
        
        /// <summary>
        /// <para>MANAT AZERBEJDŻAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MANAT AZERBEJDŻAŃSKI")]
        AZN,
        
        /// <summary>
        /// <para>MARKA ZAMIENNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARKA ZAMIENNA")]
        BAM,
        
        /// <summary>
        /// <para>DOLAR BARBADOSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR BARBADOSKI")]
        BBD,
        
        /// <summary>
        /// <para>TAKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAKA")]
        BDT,
        
        /// <summary>
        /// <para>LEW</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEW")]
        BGN,
        
        /// <summary>
        /// <para>DINAR BAHRAJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR BAHRAJSKI")]
        BHD,
        
        /// <summary>
        /// <para>FRANK BURUNDYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK BURUNDYJSKI")]
        BIF,
        
        /// <summary>
        /// <para>DOLAR BERMUDZKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR BERMUDZKI")]
        BMD,
        
        /// <summary>
        /// <para>DOLAR BRUNEJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR BRUNEJSKI")]
        BND,
        
        /// <summary>
        /// <para>BOLIWIANO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOLIWIANO")]
        BOB,
        
        /// <summary>
        /// <para>BOLIWIANO MVDOL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOLIWIANO MVDOL")]
        BOV,
        
        /// <summary>
        /// <para>REAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REAL")]
        BRL,
        
        /// <summary>
        /// <para>DOLAR BAHAMSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR BAHAMSKI")]
        BSD,
        
        /// <summary>
        /// <para>NGULTRUM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NGULTRUM")]
        BTN,
        
        /// <summary>
        /// <para>PULA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PULA")]
        BWP,
        
        /// <summary>
        /// <para>RUBEL BIAŁORUSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUBEL BIAŁORUSKI")]
        BYN,
        
        /// <summary>
        /// <para>DOLAR BELIZEŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR BELIZEŃSKI")]
        BZD,
        
        /// <summary>
        /// <para>DOLAR KANADYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR KANADYJSKI")]
        CAD,
        
        /// <summary>
        /// <para>FRANK KONGIJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK KONGIJSKI")]
        CDF,
        
        /// <summary>
        /// <para>FRANK SZWAJCARSKI VIR EURO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK SZWAJCARSKI VIR EURO")]
        CHE,
        
        /// <summary>
        /// <para>FRANK SZWAJCARSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK SZWAJCARSKI")]
        CHF,
        
        /// <summary>
        /// <para>FRANK SZWAJCARSKI VIR FRANK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK SZWAJCARSKI VIR FRANK")]
        CHW,
        
        /// <summary>
        /// <para>JEDNOSTKA ROZLICZENIOWA CHILIJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JEDNOSTKA ROZLICZENIOWA CHILIJSKA")]
        CLF,
        
        /// <summary>
        /// <para>PESO CHILIJSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO CHILIJSKIE")]
        CLP,
        
        /// <summary>
        /// <para>YUAN RENMINBI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("YUAN RENMINBI")]
        CNY,
        
        /// <summary>
        /// <para>PESO KOLUMBIJSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO KOLUMBIJSKIE")]
        COP,
        
        /// <summary>
        /// <para>UNIDAD DE VALOR REAL KOLUMBILSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UNIDAD DE VALOR REAL KOLUMBILSKIE")]
        COU,
        
        /// <summary>
        /// <para>COLON KOSTARYKAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COLON KOSTARYKAŃSKI")]
        CRC,
        
        /// <summary>
        /// <para>PESO WYMIENIALNE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO WYMIENIALNE")]
        CUC,
        
        /// <summary>
        /// <para>PESO KUBAŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO KUBAŃSKIE")]
        CUP,
        
        /// <summary>
        /// <para>ESCUDO REPUBLIKI ZIELONEGO PRZYLĄDKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ESCUDO REPUBLIKI ZIELONEGO PRZYLĄDKA")]
        CVE,
        
        /// <summary>
        /// <para>KORONA CZESKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KORONA CZESKA")]
        CZK,
        
        /// <summary>
        /// <para>FRANK DŻIBUTI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK DŻIBUTI")]
        DJF,
        
        /// <summary>
        /// <para>KORONA DUŃSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KORONA DUŃSKA")]
        DKK,
        
        /// <summary>
        /// <para>PESO DOMINIKAŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO DOMINIKAŃSKIE")]
        DOP,
        
        /// <summary>
        /// <para>DINAR ALGIERSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR ALGIERSKI")]
        DZD,
        
        /// <summary>
        /// <para>FUNT EGIPSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT EGIPSKI")]
        EGP,
        
        /// <summary>
        /// <para>NAKFA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAKFA")]
        ERN,
        
        /// <summary>
        /// <para>BIRR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BIRR")]
        ETB,
        
        /// <summary>
        /// <para>EURO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EURO")]
        EUR,
        
        /// <summary>
        /// <para>DOLAR FIDŻI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR FIDŻI")]
        FJD,
        
        /// <summary>
        /// <para>FUNT FALKLANDZKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT FALKLANDZKI")]
        FKP,
        
        /// <summary>
        /// <para>FUNT SZTERLING</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT SZTERLING")]
        GBP,
        
        /// <summary>
        /// <para>LARI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LARI")]
        GEL,
        
        /// <summary>
        /// <para>FUNT GUERNSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT GUERNSEY")]
        GGP,
        
        /// <summary>
        /// <para>GHANA CEDI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GHANA CEDI")]
        GHS,
        
        /// <summary>
        /// <para>FUNT GIBRALTARSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT GIBRALTARSKI")]
        GIP,
        
        /// <summary>
        /// <para>DALASI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DALASI")]
        GMD,
        
        /// <summary>
        /// <para>FRANK GWINEJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK GWINEJSKI")]
        GNF,
        
        /// <summary>
        /// <para>QUETZAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("QUETZAL")]
        GTQ,
        
        /// <summary>
        /// <para>DOLAR GUJAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR GUJAŃSKI")]
        GYD,
        
        /// <summary>
        /// <para>DOLAR HONGKONGU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR HONGKONGU")]
        HKD,
        
        /// <summary>
        /// <para>LEMPIRA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEMPIRA")]
        HNL,
        
        /// <summary>
        /// <para>KUNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KUNA")]
        HRK,
        
        /// <summary>
        /// <para>GOURDE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GOURDE")]
        HTG,
        
        /// <summary>
        /// <para>FORINT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FORINT")]
        HUF,
        
        /// <summary>
        /// <para>RUPIA INDONEZYJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA INDONEZYJSKA")]
        IDR,
        
        /// <summary>
        /// <para>SZEKEL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZEKEL")]
        ILS,
        
        /// <summary>
        /// <para>FUNT MANX</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT MANX")]
        IMP,
        
        /// <summary>
        /// <para>RUPIA INDYJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA INDYJSKA")]
        INR,
        
        /// <summary>
        /// <para>DINAR IRACKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR IRACKI")]
        IQD,
        
        /// <summary>
        /// <para>RIAL IRAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RIAL IRAŃSKI")]
        IRR,
        
        /// <summary>
        /// <para>KORONA ISLANDZKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KORONA ISLANDZKA")]
        ISK,
        
        /// <summary>
        /// <para>FUNT JERSEY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT JERSEY")]
        JEP,
        
        /// <summary>
        /// <para>DOLAR JAMAJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR JAMAJSKI")]
        JMD,
        
        /// <summary>
        /// <para>DINAR JORDAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR JORDAŃSKI")]
        JOD,
        
        /// <summary>
        /// <para>JEN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JEN")]
        JPY,
        
        /// <summary>
        /// <para>SZYLING KENIJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZYLING KENIJSKI")]
        KES,
        
        /// <summary>
        /// <para>SOM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOM")]
        KGS,
        
        /// <summary>
        /// <para>RIEL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RIEL")]
        KHR,
        
        /// <summary>
        /// <para>FRANK KOMORÓW</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK KOMORÓW")]
        KMF,
        
        /// <summary>
        /// <para>WON PÓŁNOCNO­KOREAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WON PÓŁNOCNO­KOREAŃSKI")]
        KPW,
        
        /// <summary>
        /// <para>WON POŁUDNIOWO­KOREAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WON POŁUDNIOWO­KOREAŃSKI")]
        KRW,
        
        /// <summary>
        /// <para>DINAR KUWEJCKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR KUWEJCKI")]
        KWD,
        
        /// <summary>
        /// <para>DOLAR KAJMAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR KAJMAŃSKI")]
        KYD,
        
        /// <summary>
        /// <para>TENGE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TENGE")]
        KZT,
        
        /// <summary>
        /// <para>KIP</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KIP")]
        LAK,
        
        /// <summary>
        /// <para>FUNT LIBAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT LIBAŃSKI")]
        LBP,
        
        /// <summary>
        /// <para>RUPIA LANKIJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA LANKIJSKA")]
        LKR,
        
        /// <summary>
        /// <para>DOLAR LIBERYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR LIBERYJSKI")]
        LRD,
        
        /// <summary>
        /// <para>LOTI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LOTI")]
        LSL,
        
        /// <summary>
        /// <para>DINAR LIBIJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR LIBIJSKI")]
        LYD,
        
        /// <summary>
        /// <para>DIRHAM MAROKAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DIRHAM MAROKAŃSKI")]
        MAD,
        
        /// <summary>
        /// <para>LEJ MOŁDAWII</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEJ MOŁDAWII")]
        MDL,
        
        /// <summary>
        /// <para>ARIARY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARIARY")]
        MGA,
        
        /// <summary>
        /// <para>DENAR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DENAR")]
        MKD,
        
        /// <summary>
        /// <para>KYAT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KYAT")]
        MMK,
        
        /// <summary>
        /// <para>TUGRIK</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TUGRIK")]
        MNT,
        
        /// <summary>
        /// <para>PATACA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PATACA")]
        MOP,
        
        /// <summary>
        /// <para>OUGUIYA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OUGUIYA")]
        MRU,
        
        /// <summary>
        /// <para>RUPIA MAURITIUSU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA MAURITIUSU")]
        MUR,
        
        /// <summary>
        /// <para>RUPIA MALEDIWSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA MALEDIWSKA")]
        MVR,
        
        /// <summary>
        /// <para>KWACHA MALAWIJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KWACHA MALAWIJSKA")]
        MWK,
        
        /// <summary>
        /// <para>PESO MEKSYKAŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO MEKSYKAŃSKIE")]
        MXN,
        
        /// <summary>
        /// <para>UNIDAD DE INVERSION (UDI) MEKSYKAŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UNIDAD DE INVERSION (UDI) MEKSYKAŃSKIE")]
        MXV,
        
        /// <summary>
        /// <para>RINGGIT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RINGGIT")]
        MYR,
        
        /// <summary>
        /// <para>METICAL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("METICAL")]
        MZN,
        
        /// <summary>
        /// <para>DOLAR NAMIBIJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR NAMIBIJSKI")]
        NAD,
        
        /// <summary>
        /// <para>NAIRA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NAIRA")]
        NGN,
        
        /// <summary>
        /// <para>CORDOBA ORO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CORDOBA ORO")]
        NIO,
        
        /// <summary>
        /// <para>KORONA NORWESKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KORONA NORWESKA")]
        NOK,
        
        /// <summary>
        /// <para>RUPIA NEPALSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA NEPALSKA")]
        NPR,
        
        /// <summary>
        /// <para>DOLAR NOWOZELANDZKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR NOWOZELANDZKI")]
        NZD,
        
        /// <summary>
        /// <para>RIAL OMAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RIAL OMAŃSKI")]
        OMR,
        
        /// <summary>
        /// <para>BALBOA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BALBOA")]
        PAB,
        
        /// <summary>
        /// <para>SOL</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOL")]
        PEN,
        
        /// <summary>
        /// <para>KINA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KINA")]
        PGK,
        
        /// <summary>
        /// <para>PESO FILIPIŃSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO FILIPIŃSKIE")]
        PHP,
        
        /// <summary>
        /// <para>RUPIA PAKISTAŃSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA PAKISTAŃSKA")]
        PKR,
        
        /// <summary>
        /// <para>ZŁOTY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZŁOTY")]
        PLN,
        
        /// <summary>
        /// <para>GUARANI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUARANI")]
        PYG,
        
        /// <summary>
        /// <para>RIAL KATARSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RIAL KATARSKI")]
        QAR,
        
        /// <summary>
        /// <para>LEJ RUMUŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEJ RUMUŃSKI")]
        RON,
        
        /// <summary>
        /// <para>DINAR SERBSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR SERBSKI")]
        RSD,
        
        /// <summary>
        /// <para>RUBEL ROSYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUBEL ROSYJSKI")]
        RUB,
        
        /// <summary>
        /// <para>FRANK RWANDYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK RWANDYJSKI")]
        RWF,
        
        /// <summary>
        /// <para>RIAL SAUDYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RIAL SAUDYJSKI")]
        SAR,
        
        /// <summary>
        /// <para>DOLAR WYSP SALOMONA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR WYSP SALOMONA")]
        SBD,
        
        /// <summary>
        /// <para>RUPIA SESZELSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUPIA SESZELSKA")]
        SCR,
        
        /// <summary>
        /// <para>FUNT SUDAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT SUDAŃSKI")]
        SDG,
        
        /// <summary>
        /// <para>KORONA SZWEDZKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KORONA SZWEDZKA")]
        SEK,
        
        /// <summary>
        /// <para>DOLAR SINGAPURSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR SINGAPURSKI")]
        SGD,
        
        /// <summary>
        /// <para>FUNT ŚWIĘTEJ HELENY (ŚWIĘTA HELENA I WYSPA WNIEBOWSTĄPIENIA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT ŚWIĘTEJ HELENY (ŚWIĘTA HELENA I WYSPA WNIEBOWSTĄPIENIA)")]
        SHP,
        
        /// <summary>
        /// <para>LEONE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEONE")]
        SLL,
        
        /// <summary>
        /// <para>SZYLING SOMALIJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZYLING SOMALIJSKI")]
        SOS,
        
        /// <summary>
        /// <para>DOLAR SURINAMSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR SURINAMSKI")]
        SRD,
        
        /// <summary>
        /// <para>FUNT POŁUDNIOWOSUDAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT POŁUDNIOWOSUDAŃSKI")]
        SSP,
        
        /// <summary>
        /// <para>DOBRA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOBRA")]
        STN,
        
        /// <summary>
        /// <para>COLON SALWADORSKI (SV1)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COLON SALWADORSKI (SV1)")]
        SVC,
        
        /// <summary>
        /// <para>FUNT SYRYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FUNT SYRYJSKI")]
        SYP,
        
        /// <summary>
        /// <para>LILANGENI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LILANGENI")]
        SZL,
        
        /// <summary>
        /// <para>BAT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAT")]
        THB,
        
        /// <summary>
        /// <para>SOMONI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOMONI")]
        TJS,
        
        /// <summary>
        /// <para>MANAT TURKMEŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MANAT TURKMEŃSKI")]
        TMT,
        
        /// <summary>
        /// <para>DINAR TUNEZYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DINAR TUNEZYJSKI")]
        TND,
        
        /// <summary>
        /// <para>PAANGA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAANGA")]
        TOP,
        
        /// <summary>
        /// <para>LIRA TURECKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIRA TURECKA")]
        TRY,
        
        /// <summary>
        /// <para>DOLAR TRYNIDADU I TOBAGO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR TRYNIDADU I TOBAGO")]
        TTD,
        
        /// <summary>
        /// <para>NOWY DOLAR TAJWAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NOWY DOLAR TAJWAŃSKI")]
        TWD,
        
        /// <summary>
        /// <para>SZYLING TANZAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZYLING TANZAŃSKI")]
        TZS,
        
        /// <summary>
        /// <para>HRYWNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HRYWNA")]
        UAH,
        
        /// <summary>
        /// <para>SZYLING UGANDYJSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SZYLING UGANDYJSKI")]
        UGX,
        
        /// <summary>
        /// <para>DOLAR AMERYKAŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR AMERYKAŃSKI")]
        USD,
        
        /// <summary>
        /// <para>DOLAR AMERYKAŃSKI (NEXT DAY)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR AMERYKAŃSKI (NEXT DAY)")]
        USN,
        
        /// <summary>
        /// <para>PESO EN UNIDADES INDEXADAS URUGWAJSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO EN UNIDADES INDEXADAS URUGWAJSKIE")]
        UYI,
        
        /// <summary>
        /// <para>PESO URUGWAJSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO URUGWAJSKIE")]
        UYU,
        
        /// <summary>
        /// <para>PESO EN UNIDADES INDEXADAS URUGWAJSKIE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PESO EN UNIDADES INDEXADAS URUGWAJSKIE")]
        UYW,
        
        /// <summary>
        /// <para>SUM</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUM")]
        UZS,
        
        /// <summary>
        /// <para>BOLIWAR SOBERANO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOLIWAR SOBERANO")]
        VES,
        
        /// <summary>
        /// <para>DONG</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DONG")]
        VND,
        
        /// <summary>
        /// <para>VATU</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VATU")]
        VUV,
        
        /// <summary>
        /// <para>TALA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TALA")]
        WST,
        
        /// <summary>
        /// <para>FRANK CFA (BEAC)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK CFA (BEAC)")]
        XAF,
        
        /// <summary>
        /// <para>SREBRO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SREBRO")]
        XAG,
        
        /// <summary>
        /// <para>ZŁOTO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ZŁOTO")]
        XAU,
        
        /// <summary>
        /// <para>BOND MARKETS UNIT EUROPEAN COMPOSITE UNIT (EURCO)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOND MARKETS UNIT EUROPEAN COMPOSITE UNIT (EURCO)")]
        XBA,
        
        /// <summary>
        /// <para>BOND MARKETS UNIT EUROPEAN MONETARY UNIT (E.M.U.-6)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOND MARKETS UNIT EUROPEAN MONETARY UNIT (E.M.U.-6)")]
        XBB,
        
        /// <summary>
        /// <para>BOND MARKETS UNIT EUROPEAN UNIT OF ACCOUNT 9 (E.U.A.-9)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOND MARKETS UNIT EUROPEAN UNIT OF ACCOUNT 9 (E.U.A.-9)")]
        XBC,
        
        /// <summary>
        /// <para>BOND MARKETS UNIT EUROPEAN UNIT OF ACCOUNT 17 (E.U.A.-17)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOND MARKETS UNIT EUROPEAN UNIT OF ACCOUNT 17 (E.U.A.-17)")]
        XBD,
        
        /// <summary>
        /// <para>DOLAR WSCHODNIO­KARAIBSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR WSCHODNIO­KARAIBSKI")]
        XCD,
        
        /// <summary>
        /// <para>SDR MIĘDZYNARODOWY FUNDUSZ WALUTOWY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SDR MIĘDZYNARODOWY FUNDUSZ WALUTOWY")]
        XDR,
        
        /// <summary>
        /// <para>FRANK CFA (BCEAO)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK CFA (BCEAO)")]
        XOF,
        
        /// <summary>
        /// <para>PALLAD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PALLAD")]
        XPD,
        
        /// <summary>
        /// <para>FRANK CFP</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FRANK CFP")]
        XPF,
        
        /// <summary>
        /// <para>PLATYNA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PLATYNA")]
        XPT,
        
        /// <summary>
        /// <para>SUCRE SISTEMA UNITARIO DE COMPENSACION REGIONAL DE PAGOS SUCRE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUCRE SISTEMA UNITARIO DE COMPENSACION REGIONAL DE PAGOS SUCRE")]
        XSU,
        
        /// <summary>
        /// <para>ADB UNIT OF ACCOUNT MEMBER COUNTRIES OF THE AFRICAN DEVELOPMENT BANK GROUP</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ADB UNIT OF ACCOUNT MEMBER COUNTRIES OF THE AFRICAN DEVELOPMENT BANK GROUP")]
        XUA,
        
        /// <summary>
        /// <para>BRAK WALUTY</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRAK WALUTY")]
        XXX,
        
        /// <summary>
        /// <para>RIAL JEMEŃSKI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RIAL JEMEŃSKI")]
        YER,
        
        /// <summary>
        /// <para>RAND</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RAND")]
        ZAR,
        
        /// <summary>
        /// <para>KWACHA ZAMBIJSKA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KWACHA ZAMBIJSKA")]
        ZMW,
        
        /// <summary>
        /// <para>DOLAR ZIMBABWE</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOLAR ZIMBABWE")]
        ZWL,
    }
    
    /// <summary>
    /// <para>Symbol wzoru formularza</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Symbol wzoru formularza")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TKodFormularza", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TKodFormularza
    {
        
        FA,
    }
    
    /// <summary>
    /// <para>Nagłówek</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Nagłówek")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNaglowek", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNaglowek
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("KodFormularza")]
        public TNaglowekKodFormularza KodFormularza { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("WariantFormularza")]
        public TNaglowekWariantFormularza WariantFormularza { get; set; }
        
        /// <summary>
        /// <para>Data i czas wytworzenia faktury</para>
        /// <para xml:lang="en">Minimum inclusive value: 2022-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01T23:59:59Z.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data i czas wytworzenia faktury")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2022-01-01T00:00:00Z", "2050-01-01T23:59:59Z")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataWytworzeniaFa", DataType="dateTime")]
        public System.DateTime DataWytworzeniaFa { get; set; }
        
        /// <summary>
        /// <para>Nazwa systemu teleinformatycznego, z którego korzysta podatnik</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa systemu teleinformatycznego, z którego korzysta podatnik")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("SystemInfo")]
        public string SystemInfo { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNaglowekKodFormularza", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNaglowekKodFormularza
    {
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public TKodFormularza Value { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _kodSystemowy = "FA (2)";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("kodSystemowy")]
        public string kodSystemowy
        {
            get
            {
                return _kodSystemowy;
            }
            set
            {
                _kodSystemowy = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _wersjaSchemy = "1-0E";
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("wersjaSchemy")]
        public string wersjaSchemy
        {
            get
            {
                return _wersjaSchemy;
            }
            set
            {
                _wersjaSchemy = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNaglowekWariantFormularza", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    public enum TNaglowekWariantFormularza
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Informacje opisujące adres</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Informacje opisujące adres")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TAdres", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TAdres", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FakturaPodmiot1AdresKoresp))]
    public partial class TAdres
    {
        
        /// <summary>
        /// <para>Kod Kraju [Country Code]</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod Kraju [Country Code]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("KodKraju")]
        public ProFak.IO.FA_2.TKodKraju KodKraju { get; set; }
        
        /// <summary>
        /// <para>Adres [Address]</para>
        /// <para>Typ znakowy ograniczony do 512 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 512.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres [Address]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(512)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("AdresL1")]
        public string AdresL1 { get; set; }
        
        /// <summary>
        /// <para>Adres [Address]</para>
        /// <para>Typ znakowy ograniczony do 512 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 512.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres [Address]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(512)]
        [System.Xml.Serialization.XmlElementAttribute("AdresL2")]
        public string AdresL2 { get; set; }
        
        /// <summary>
        /// <para>Globalny Numer Lokalizacyjny [Global Location Number]</para>
        /// <para>Typ Globalnego Numeru Lokalizacyjnego</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 13.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Globalny Numer Lokalizacyjny [Global Location Number]")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(13)]
        [System.Xml.Serialization.XmlElementAttribute("GLN")]
        public string GLN { get; set; }
    }
    
    /// <summary>
    /// <para>Typ złożony, klucz-wartość</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Typ złożony, klucz-wartość")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TKluczWartosc", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TKluczWartosc
    {
        
        /// <summary>
        /// <para>Numer wiersza podany w polu NrWierszaFa lub NrWierszaZam, jeśli informacja odnosi się wyłącznie do danej pozycji faktury</para>
        /// <para>Liczby naturalne większe od zera</para>
        /// <para xml:lang="en">Total number of digits: 14.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer wiersza podany w polu NrWierszaFa lub NrWierszaZam, jeśli informacja odnosi" +
            " się wyłącznie do danej pozycji faktury")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("NrWiersza")]
        public ulong NrWierszaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrWiersza property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NrWierszaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Numer wiersza podany w polu NrWierszaFa lub NrWierszaZam, jeśli informacja odnosi się wyłącznie do danej pozycji faktury</para>
        /// <para>Liczby naturalne większe od zera</para>
        /// <para xml:lang="en">Total number of digits: 14.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> NrWiersza
        {
            get
            {
                if (this.NrWierszaValueSpecified)
                {
                    return this.NrWierszaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrWierszaValue = value.GetValueOrDefault();
                this.NrWierszaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Klucz</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Klucz")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Klucz")]
        public string Klucz { get; set; }
        
        /// <summary>
        /// <para>Wartość</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wartość")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Wartosc")]
        public string Wartosc { get; set; }
    }
    
    /// <summary>
    /// <para>Typy form płatności</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Typy form płatności")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TFormaPlatnosci", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TFormaPlatnosci
    {
        
        /// <summary>
        /// <para>Gotówka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gotówka")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Karta</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Karta")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Bon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bon")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <summary>
        /// <para>Czek</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Czek")]
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <summary>
        /// <para>Kredyt</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kredyt")]
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <summary>
        /// <para>Przelew</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Przelew")]
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <summary>
        /// <para>Mobilna</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobilna")]
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
    }
    
    /// <summary>
    /// <para>Typy ładunków</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Typy ładunków")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TLadunek", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TLadunek
    {
        
        /// <summary>
        /// <para>Bańka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bańka")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Beczka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beczka")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Butla</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Butla")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <summary>
        /// <para>Karton</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Karton")]
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <summary>
        /// <para>Kanister</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kanister")]
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <summary>
        /// <para>Klatka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Klatka")]
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <summary>
        /// <para>Kontener</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kontener")]
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <summary>
        /// <para>Kosz/koszyk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kosz/koszyk")]
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <summary>
        /// <para>Łubianka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Łubianka")]
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <summary>
        /// <para>Opakowanie zbiorcze</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Opakowanie zbiorcze")]
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <summary>
        /// <para>Paczka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paczka")]
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <summary>
        /// <para>Pakiet</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pakiet")]
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <summary>
        /// <para>Paleta</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paleta")]
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <summary>
        /// <para>Pojemnik</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pojemnik")]
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <summary>
        /// <para>Pojemnik do ładunków masowych stałych</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pojemnik do ładunków masowych stałych")]
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <summary>
        /// <para>Pojemnik do ładunków masowych w postaci płynnej</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pojemnik do ładunków masowych w postaci płynnej")]
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <summary>
        /// <para>Pudełko</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pudełko")]
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <summary>
        /// <para>Puszka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Puszka")]
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <summary>
        /// <para>Skrzynia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Skrzynia")]
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        /// <summary>
        /// <para>Worek</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Worek")]
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
    }
    
    /// <summary>
    /// <para>Typy rachunków własnych</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Typy rachunków własnych")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TRachunekWlasnyBanku", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TRachunekWlasnyBanku
    {
        
        /// <summary>
        /// <para>Rachunek banku lub rachunek spółdzielczej kasy oszczędnościowo-kredytowej służący do dokonywania rozliczeń z tytułu nabywanych przez ten bank lub tę kasę wierzytelności pieniężnych</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rachunek banku lub rachunek spółdzielczej kasy oszczędnościowo-kredytowej służący" +
            " do dokonywania rozliczeń z tytułu nabywanych przez ten bank lub tę kasę wierzyt" +
            "elności pieniężnych")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Rachunek banku lub rachunek spółdzielczej kasy oszczędnościowo-kredytowej wykorzystywany przez ten bank lub tę kasę do pobrania należności od nabywcy towarów lub usługobiorcy za dostawę towarów lub świadczenie usług, potwierdzone fakturą, i przekazania jej w całości albo części dostawcy towarów lub usługodawcy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Rachunek banku lub rachunek spółdzielczej kasy oszczędnościowo-kredytowej wykorzystywany przez ten bank lub tę kasę do pobrania należności od nabywcy towarów lub usługobiorcy za dostawę towarów lub świadczenie usług, potwierdzone fakturą, i przekazania jej w całości albo części dostawcy towarów lub usługodawcy")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Rachunek banku lub rachunek spółdzielczej kasy oszczędnościowo-kredytowej prowadzony przez ten bank lub tę kasę w ramach gospodarki własnej, niebędący rachunkiem rozliczeniowym</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rachunek banku lub rachunek spółdzielczej kasy oszczędnościowo-kredytowej prowadz" +
            "ony przez ten bank lub tę kasę w ramach gospodarki własnej, niebędący rachunkiem" +
            " rozliczeniowym")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <summary>
    /// <para>Informacje o rachunku</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Informacje o rachunku")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TRachunekBankowy", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRachunekBankowy
    {
        
        /// <summary>
        /// <para>Pełny numer rachunku</para>
        /// <para>Numer rachunku</para>
        /// <para xml:lang="en">Pattern: [0-9A-Z]{10,32}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pełny numer rachunku")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9A-Z]{10,32}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NrRB")]
        public string NrRB { get; set; }
        
        /// <summary>
        /// <para>Kod SWIFT</para>
        /// <para>Kod SWIFT</para>
        /// <para xml:lang="en">Pattern: [A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod SWIFT")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}")]
        [System.Xml.Serialization.XmlElementAttribute("SWIFT")]
        public string SWIFT { get; set; }
        
        /// <summary>
        /// <para>Rachunek własny</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rachunek własny")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("RachunekWlasnyBanku")]
        public TRachunekWlasnyBanku RachunekWlasnyBankuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RachunekWlasnyBanku property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RachunekWlasnyBankuValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Rachunek własny</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TRachunekWlasnyBanku> RachunekWlasnyBanku
        {
            get
            {
                if (this.RachunekWlasnyBankuValueSpecified)
                {
                    return this.RachunekWlasnyBankuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RachunekWlasnyBankuValue = value.GetValueOrDefault();
                this.RachunekWlasnyBankuValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Nazwa</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NazwaBanku")]
        public string NazwaBanku { get; set; }
        
        /// <summary>
        /// <para>Opis rachunku</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Opis rachunku")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("OpisRachunku")]
        public string OpisRachunku { get; set; }
    }
    
    /// <summary>
    /// <para>Zestaw danych identyfikacyjnych oraz danych adresowych podatnika</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Zestaw danych identyfikacyjnych oraz danych adresowych podatnika")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiot1", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiot1
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Imię i nazwisko lub nazwa</para>
        /// <para>Typ znakowy ograniczony do 512 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 512.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię i nazwisko lub nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(512)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwa")]
        public string Nazwa { get; set; }
    }
    
    /// <summary>
    /// <para>Zestaw danych identyfikacyjnych oraz danych adresowych nabywcy</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Zestaw danych identyfikacyjnych oraz danych adresowych nabywcy")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiot2", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiot2
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Kod (prefiks) nabywcy VAT UE, o którym mowa w art. 106e ust. 1 pkt 24 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 4 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod (prefiks) nabywcy VAT UE, o którym mowa w art. 106e ust. 1 pkt 24 ustawy oraz" +
            " w przypadku, o którym mowa w art. 136 ust. 1 pkt 4 ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KodUE")]
        public TKodyKrajowUE KodUEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KodUE property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KodUEValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kod (prefiks) nabywcy VAT UE, o którym mowa w art. 106e ust. 1 pkt 24 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 4 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TKodyKrajowUE> KodUE
        {
            get
            {
                if (this.KodUEValueSpecified)
                {
                    return this.KodUEValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KodUEValue = value.GetValueOrDefault();
                this.KodUEValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer Identyfikacyjny VAT kontrahenta UE</para>
        /// <para>Numer Identyfikacyjny VAT kontrahenta UE</para>
        /// <para xml:lang="en">Pattern: (\d|[A-Z]|\+|\*){1,12}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer Identyfikacyjny VAT kontrahenta UE")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\d|[A-Z]|\\+|\\*){1,12}")]
        [System.Xml.Serialization.XmlElementAttribute("NrVatUE")]
        public string NrVatUE { get; set; }
        
        /// <summary>
        /// <para>Kod kraju nadania identyfikatora podatkowego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod kraju nadania identyfikatora podatkowego")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KodKraju")]
        public ProFak.IO.FA_2.TKodKraju KodKrajuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KodKraju property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KodKrajuValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kod kraju nadania identyfikatora podatkowego</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TKodKraju> KodKraju
        {
            get
            {
                if (this.KodKrajuValueSpecified)
                {
                    return this.KodKrajuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KodKrajuValue = value.GetValueOrDefault();
                this.KodKrajuValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Identyfikator podatkowy inny</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9]{1,50}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy inny")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9]{1,50}")]
        [System.Xml.Serialization.XmlElementAttribute("NrID")]
        public string NrID { get; set; }
        
        /// <summary>
        /// <para>Podmiot nie posiada identyfikatora podatkowego lub identyfikator nie występuje na fakturze: 1- tak</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Podmiot nie posiada identyfikatora podatkowego lub identyfikator nie występuje na" +
            " fakturze: 1- tak")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("BrakID")]
        public ProFak.IO.FA_2.TWybor1 BrakIDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BrakID property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BrakIDValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Podmiot nie posiada identyfikatora podatkowego lub identyfikator nie występuje na fakturze: 1- tak</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> BrakID
        {
            get
            {
                if (this.BrakIDValueSpecified)
                {
                    return this.BrakIDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BrakIDValue = value.GetValueOrDefault();
                this.BrakIDValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Imię i nazwisko lub nazwa</para>
        /// <para>Typ znakowy ograniczony do 512 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 512.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię i nazwisko lub nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(512)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwa")]
        public string Nazwa { get; set; }
    }
    
    /// <summary>
    /// <para>Zestaw danych identyfikacyjnych oraz danych adresowych podmiotów trzecich</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Zestaw danych identyfikacyjnych oraz danych adresowych podmiotów trzecich")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TPodmiot3", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPodmiot3
    {
        
        /// <summary>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para>Identyfikator podatkowy NIP</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy NIP")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}")]
        [System.Xml.Serialization.XmlElementAttribute("NIP")]
        public string NIP { get; set; }
        
        /// <summary>
        /// <para>Identyfikator wewnętrzny z NIP</para>
        /// <para>Identyfikator wewnętrzny</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// <para xml:lang="en">Pattern: [1-9]((\d[1-9])|([1-9]\d))\d{7}-\d{5}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator wewnętrzny z NIP")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1-9]((\\d[1-9])|([1-9]\\d))\\d{7}-\\d{5}")]
        [System.Xml.Serialization.XmlElementAttribute("IDWew")]
        public string IDWew { get; set; }
        
        /// <summary>
        /// <para>Kod (prefiks) nabywcy VAT UE, o którym mowa w art. 106e ust. 1 pkt 24 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 4 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod (prefiks) nabywcy VAT UE, o którym mowa w art. 106e ust. 1 pkt 24 ustawy oraz" +
            " w przypadku, o którym mowa w art. 136 ust. 1 pkt 4 ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KodUE")]
        public TKodyKrajowUE KodUEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KodUE property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KodUEValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kod (prefiks) nabywcy VAT UE, o którym mowa w art. 106e ust. 1 pkt 24 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 4 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TKodyKrajowUE> KodUE
        {
            get
            {
                if (this.KodUEValueSpecified)
                {
                    return this.KodUEValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KodUEValue = value.GetValueOrDefault();
                this.KodUEValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer Identyfikacyjny VAT kontrahenta UE</para>
        /// <para>Numer Identyfikacyjny VAT kontrahenta UE</para>
        /// <para xml:lang="en">Pattern: (\d|[A-Z]|\+|\*){1,12}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer Identyfikacyjny VAT kontrahenta UE")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\d|[A-Z]|\\+|\\*){1,12}")]
        [System.Xml.Serialization.XmlElementAttribute("NrVatUE")]
        public string NrVatUE { get; set; }
        
        /// <summary>
        /// <para>Kod kraju nadania identyfikatora podatkowego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod kraju nadania identyfikatora podatkowego")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KodKraju")]
        public ProFak.IO.FA_2.TKodKraju KodKrajuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KodKraju property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KodKrajuValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kod kraju nadania identyfikatora podatkowego</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TKodKraju> KodKraju
        {
            get
            {
                if (this.KodKrajuValueSpecified)
                {
                    return this.KodKrajuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KodKrajuValue = value.GetValueOrDefault();
                this.KodKrajuValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Identyfikator podatkowy inny</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9]{1,50}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identyfikator podatkowy inny")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9]{1,50}")]
        [System.Xml.Serialization.XmlElementAttribute("NrID")]
        public string NrID { get; set; }
        
        /// <summary>
        /// <para>Podmiot nie posiada identyfikatora podatkowego lub identyfikator nie występuje na fakturze: 1- tak</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Podmiot nie posiada identyfikatora podatkowego lub identyfikator nie występuje na" +
            " fakturze: 1- tak")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("BrakID")]
        public ProFak.IO.FA_2.TWybor1 BrakIDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BrakID property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BrakIDValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Podmiot nie posiada identyfikatora podatkowego lub identyfikator nie występuje na fakturze: 1- tak</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> BrakID
        {
            get
            {
                if (this.BrakIDValueSpecified)
                {
                    return this.BrakIDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BrakIDValue = value.GetValueOrDefault();
                this.BrakIDValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Imię i nazwisko lub nazwa</para>
        /// <para>Typ znakowy ograniczony do 512 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 512.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Imię i nazwisko lub nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(512)]
        [System.Xml.Serialization.XmlElementAttribute("Nazwa")]
        public string Nazwa { get; set; }
    }
    
    /// <summary>
    /// <para>Status podatnika</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Status podatnika")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TStatusInfoPodatnika", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TStatusInfoPodatnika
    {
        
        /// <summary>
        /// <para>Podatnik znajdujący się w stanie likwidacji</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Podatnik znajdujący się w stanie likwidacji")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Podatnik, który jest w trakcie postępowania restrukturyzacyjnego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Podatnik, który jest w trakcie postępowania restrukturyzacyjnego")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Podatnik znajdujący się w stanie upadłości</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Podatnik znajdujący się w stanie upadłości")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <summary>
        /// <para>Przedsiębiorstwo w spadku</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Przedsiębiorstwo w spadku")]
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    /// <summary>
    /// <para>Rola podmiotu upoważnionego</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Rola podmiotu upoważnionego")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TRolaPodmiotuUpowaznionego", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TRolaPodmiotuUpowaznionego
    {
        
        /// <summary>
        /// <para>Organ egzekucyjny - w przypadku, o którym mowa w art. 106c pkt 1 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Organ egzekucyjny - w przypadku, o którym mowa w art. 106c pkt 1 ustawy")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Komornik sądowy - w przypadku, o którym mowa w art. 106c pkt 2 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Komornik sądowy - w przypadku, o którym mowa w art. 106c pkt 2 ustawy")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Przedstawiciel podatkowy - w przypadku, gdy na fakturze występują dane przedstawiciela podatkowego, o którym mowa w przepisach art. 18a - 18d ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Przedstawiciel podatkowy - w przypadku, gdy na fakturze występują dane przedstawi" +
            "ciela podatkowego, o którym mowa w przepisach art. 18a - 18d ustawy")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <summary>
    /// <para>Rola podmiotu trzeciego</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Rola podmiotu trzeciego")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TRolaPodmiotu3", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TRolaPodmiotu3
    {
        
        /// <summary>
        /// <para>Faktor - w przypadku, gdy na fakturze występują dane faktora</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktor - w przypadku, gdy na fakturze występują dane faktora")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Odbiorca - w przypadku, gdy na fakturze występują dane jednostek wewnętrznych, oddziałów, wyodrębnionych w ramach nabywcy, które same nie stanowią nabywcy w rozumieniu ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Odbiorca - w przypadku, gdy na fakturze występują dane jednostek wewnętrznych, od" +
            "działów, wyodrębnionych w ramach nabywcy, które same nie stanowią nabywcy w rozu" +
            "mieniu ustawy")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Podmiot pierwotny - w przypadku, gdy na fakturze występują dane podmiotu będącego w stosunku do podatnika podmiotem przejętym lub przekształconym, który świadczył usługę lub dokonywał dostawy. Z wyłączeniem przypadków, o których mowa w art. 106j ust.2 pkt 3 ustawy, gdy dane te wykazywane są w części Podmiot1K</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Podmiot pierwotny - w przypadku, gdy na fakturze występują dane podmiotu będącego w stosunku do podatnika podmiotem przejętym lub przekształconym, który świadczył usługę lub dokonywał dostawy. Z wyłączeniem przypadków, o których mowa w art. 106j ust.2 pkt 3 ustawy, gdy dane te wykazywane są w części Podmiot1K")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <summary>
        /// <para>Dodatkowy nabywca - w przypadku, gdy na fakturze występują dane kolejnych (innych niż wymieniony w części Podmiot2) nabywców</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dodatkowy nabywca - w przypadku, gdy na fakturze występują dane kolejnych (innych" +
            " niż wymieniony w części Podmiot2) nabywców")]
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <summary>
        /// <para>Wystawca faktury - w przypadku, gdy na fakturze występują dane podmiotu wystawiającego fakturę w imieniu podatnika. Nie dotyczy przypadku, gdy wystawcą faktury jest nabywca</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wystawca faktury - w przypadku, gdy na fakturze występują dane podmiotu wystawiaj" +
            "ącego fakturę w imieniu podatnika. Nie dotyczy przypadku, gdy wystawcą faktury j" +
            "est nabywca")]
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <summary>
        /// <para>Dokonujący płatności - w przypadku, gdy na fakturze występują dane podmiotu regulującego zobowiązanie w miejsce nabywcy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dokonujący płatności - w przypadku, gdy na fakturze występują dane podmiotu regul" +
            "ującego zobowiązanie w miejsce nabywcy")]
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <summary>
        /// <para>Jednostka samorządu terytorialnego - wystawca</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jednostka samorządu terytorialnego - wystawca")]
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <summary>
        /// <para>Jednostka samorządu terytorialnego - odbiorca</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jednostka samorządu terytorialnego - odbiorca")]
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <summary>
        /// <para>Członek grupy VAT - wystawca</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Członek grupy VAT - wystawca")]
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <summary>
        /// <para>Członek grupy VAT - odbiorca</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Członek grupy VAT - odbiorca")]
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
    }
    
    /// <summary>
    /// <para>Rodzaj faktury</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Rodzaj faktury")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TRodzajFaktury", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TRodzajFaktury
    {
        
        /// <summary>
        /// <para>Faktura podstawowa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura podstawowa")]
        VAT,
        
        /// <summary>
        /// <para>Faktura korygująca</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura korygująca")]
        KOR,
        
        /// <summary>
        /// <para>Faktura dokumentująca otrzymanie zapłaty lub jej części przed dokonaniem czynności oraz faktura wystawiona w związku z art. 106f ust. 4 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura dokumentująca otrzymanie zapłaty lub jej części przed dokonaniem czynnośc" +
            "i oraz faktura wystawiona w związku z art. 106f ust. 4 ustawy")]
        ZAL,
        
        /// <summary>
        /// <para>Faktura wystawiona w związku z art. 106f ust. 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura wystawiona w związku z art. 106f ust. 3 ustawy")]
        ROZ,
        
        /// <summary>
        /// <para>Faktura, o której mowa w art. 106e ust. 5 pkt 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura, o której mowa w art. 106e ust. 5 pkt 3 ustawy")]
        UPR,
        
        /// <summary>
        /// <para>Faktura korygująca fakturę dokumentującą otrzymanie zapłaty lub jej części przed dokonaniem czynności oraz fakturę wystawioną w związku z art. 106f ust. 4 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura korygująca fakturę dokumentującą otrzymanie zapłaty lub jej części przed " +
            "dokonaniem czynności oraz fakturę wystawioną w związku z art. 106f ust. 4 ustawy" +
            "")]
        KOR_ZAL,
        
        /// <summary>
        /// <para>Faktura korygująca fakturę wystawioną w związku z art. 106f ust. 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura korygująca fakturę wystawioną w związku z art. 106f ust. 3 ustawy")]
        KOR_ROZ,
    }
    
    /// <summary>
    /// <para>Typ skutku korekty w ewidencji dla podatku od towarów i usług</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Typ skutku korekty w ewidencji dla podatku od towarów i usług")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TTypKorekty", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TTypKorekty
    {
        
        /// <summary>
        /// <para>Korekta skutkująca w dacie ujęcia faktury pierwotnej</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Korekta skutkująca w dacie ujęcia faktury pierwotnej")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Korekta skutkująca w dacie wystawienia faktury korygującej</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Korekta skutkująca w dacie wystawienia faktury korygującej")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Korekta skutkująca w dacie innej, w tym gdy dla różnych pozycji faktury korygującej daty te są różne</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Korekta skutkująca w dacie innej, w tym gdy dla różnych pozycji faktury korygując" +
            "ej daty te są różne")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <summary>
    /// <para>Stawka podatku</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Stawka podatku")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TStawkaPodatku", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TStawkaPodatku
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
        
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <summary>
        /// <para>zwolnione od podatku</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("zwolnione od podatku")]
        zw,
        
        /// <summary>
        /// <para>odwrotne obciążenie</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("odwrotne obciążenie")]
        oo,
        
        /// <summary>
        /// <para>niepodlegające opodatkowaniu- dostawy towarów oraz świadczenia usług poza terytorium kraju</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("niepodlegające opodatkowaniu- dostawy towarów oraz świadczenia usług poza terytor" +
            "ium kraju")]
        np,
    }
    
    /// <summary>
    /// <para>Oznaczenia dotyczące procedur dla faktur</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Oznaczenia dotyczące procedur dla faktur")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOznaczenieProcedury", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TOznaczenieProcedury
    {
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2a rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2a rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        WSTO_EE,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2b rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2b rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        IED,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 5 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 5 rozporządzenia " +
            "w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w " +
            "ewidencji w zakresie podatku od towarów i usług")]
        TT_D,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 8 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 8 rozporządzenia " +
            "w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w " +
            "ewidencji w zakresie podatku od towarów i usług")]
        I_42,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 9 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 9 rozporządzenia " +
            "w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w " +
            "ewidencji w zakresie podatku od towarów i usług")]
        I_63,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 10 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 10 rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        B_SPV,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 11 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 11 rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        B_SPV_DOSTAWA,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 12 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 12 rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        B_MPV_PROWIZJA,
    }
    
    /// <summary>
    /// <para>Oznaczenia dotyczące procedur dla zamówień</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Oznaczenia dotyczące procedur dla zamówień")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TOznaczenieProceduryZ", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TOznaczenieProceduryZ
    {
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2a rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2a rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        WSTO_EE,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2b rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 2b rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        IED,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 5 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 5 rozporządzenia " +
            "w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w " +
            "ewidencji w zakresie podatku od towarów i usług")]
        TT_D,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 10 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 10 rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        B_SPV,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 11 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 11 rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        B_SPV_DOSTAWA,
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 12 rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury, o której mowa w § 10 ust. 4 pkt 12 rozporządzenia" +
            " w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w" +
            " ewidencji w zakresie podatku od towarów i usług")]
        B_MPV_PROWIZJA,
    }
    
    /// <summary>
    /// <para>Oznaczenie dotyczące dostawy towarów i świadczenia usług</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące dostawy towarów i świadczenia usług")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TGTU", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TGTU
    {
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. a rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. a rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_01,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. b rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. b rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_02,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. c rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. c rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_03,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. d rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. d rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_04,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. e rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. e rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_05,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. f rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. f rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_06,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. g rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. g rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_07,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. h rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. h rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_08,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. i rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. i rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_09,
        
        /// <summary>
        /// <para>Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. j rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dostawa towarów, o których mowa w § 10 ust. 3 pkt 1 lit. j rozporządzenia w spraw" +
            "ie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidenc" +
            "ji w zakresie podatku od towarów i usług")]
        GTU_10,
        
        /// <summary>
        /// <para>Świadczenie usług, o których mowa w § 10 ust. 3 pkt 2 lit. a rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Świadczenie usług, o których mowa w § 10 ust. 3 pkt 2 lit. a rozporządzenia w spr" +
            "awie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewide" +
            "ncji w zakresie podatku od towarów i usług")]
        GTU_11,
        
        /// <summary>
        /// <para>Świadczenie usług, o których mowa w § 10 ust. 3 pkt 2 lit. b rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Świadczenie usług, o których mowa w § 10 ust. 3 pkt 2 lit. b rozporządzenia w spr" +
            "awie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewide" +
            "ncji w zakresie podatku od towarów i usług")]
        GTU_12,
        
        /// <summary>
        /// <para>Świadczenie usług, o których mowa w § 10 ust. 3 pkt 2 lit. c rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Świadczenie usług, o których mowa w § 10 ust. 3 pkt 2 lit. c rozporządzenia w spr" +
            "awie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewide" +
            "ncji w zakresie podatku od towarów i usług")]
        GTU_13,
    }
    
    /// <summary>
    /// <para>Rodzaj transportu</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Rodzaj transportu")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TRodzajTransportu", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public enum TRodzajTransportu
    {
        
        /// <summary>
        /// <para>Transport morski</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport morski")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Transport kolejowy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport kolejowy")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>Transport drogowy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport drogowy")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <summary>
        /// <para>Transport lotniczy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport lotniczy")]
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <summary>
        /// <para>Przesyłka pocztowa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Przesyłka pocztowa")]
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <summary>
        /// <para>Stałe instalacje przesyłowe</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stałe instalacje przesyłowe")]
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <summary>
        /// <para>Żegluga śródlądowa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Żegluga śródlądowa")]
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
    }
    
    /// <summary>
    /// <para>Faktura VAT</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Faktura VAT")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Faktura", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("Faktura", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    public partial class Faktura
    {
        
        /// <summary>
        /// <para>Nagłówek</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nagłówek")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Naglowek")]
        public TNaglowek Naglowek { get; set; }
        
        /// <summary>
        /// <para>Dane podatnika. Imię i nazwisko lub nazwa sprzedawcy towarów lub usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane podatnika. Imię i nazwisko lub nazwa sprzedawcy towarów lub usług")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Podmiot1")]
        public FakturaPodmiot1 Podmiot1 { get; set; }
        
        /// <summary>
        /// <para>Dane nabywcy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane nabywcy")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Podmiot2")]
        public FakturaPodmiot2 Podmiot2 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaPodmiot3> _podmiot3;
        
        /// <summary>
        /// <para>Dane podmiotu/-ów trzeciego/-ich (innego/-ych niż sprzedawca i nabywca wymieniony w części Podmiot2), związanego/-ych z fakturą</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane podmiotu/-ów trzeciego/-ich (innego/-ych niż sprzedawca i nabywca wymieniony" +
            " w części Podmiot2), związanego/-ych z fakturą")]
        [System.Xml.Serialization.XmlElementAttribute("Podmiot3")]
        public System.Collections.ObjectModel.Collection<FakturaPodmiot3> Podmiot3
        {
            get
            {
                return _podmiot3;
            }
            private set
            {
                _podmiot3 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Podmiot3 collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Podmiot3Specified
        {
            get
            {
                return (this.Podmiot3.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Faktura" /> class.</para>
        /// </summary>
        public Faktura()
        {
            this._podmiot3 = new System.Collections.ObjectModel.Collection<FakturaPodmiot3>();
        }
        
        /// <summary>
        /// <para>Dane podmiotu upoważnionego, związanego z fakturą</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane podmiotu upoważnionego, związanego z fakturą")]
        [System.Xml.Serialization.XmlElementAttribute("PodmiotUpowazniony")]
        public FakturaPodmiotUpowazniony PodmiotUpowazniony { get; set; }
        
        /// <summary>
        /// <para>Na podstawie art. 106a - 106q ustawy. Pola dotyczące wartości sprzedaży i podatku wypełnia się w walucie, w której wystawiono fakturę, z wyjątkiem pól dotyczących podatku przeliczonego zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy. W przypadku wystawienia faktury korygującej, wypełnia się wszystkie pola wg stanu po korekcie, a pola dotyczące podstaw opodatkowania, podatku oraz należności ogółem wypełnia się poprzez różnicę</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Na podstawie art. 106a - 106q ustawy. Pola dotyczące wartości sprzedaży i podatku wypełnia się w walucie, w której wystawiono fakturę, z wyjątkiem pól dotyczących podatku przeliczonego zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy. W przypadku wystawienia faktury korygującej, wypełnia się wszystkie pola wg stanu po korekcie, a pola dotyczące podstaw opodatkowania, podatku oraz należności ogółem wypełnia się poprzez różnicę")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Fa")]
        public FakturaFa Fa { get; set; }
        
        /// <summary>
        /// <para>Pozostałe dane na fakturze</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pozostałe dane na fakturze")]
        [System.Xml.Serialization.XmlElementAttribute("Stopka")]
        public FakturaStopka Stopka { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiot1", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiot1
    {
        
        /// <summary>
        /// <para>Kod (prefiks) podatnika VAT UE dla przypadków określonych w art. 97 ust. 10 pkt 2 i 3 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod (prefiks) podatnika VAT UE dla przypadków określonych w art. 97 ust. 10 pkt 2" +
            " i 3 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 3 ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PrefiksPodatnika")]
        public TKodyKrajowUE PrefiksPodatnikaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrefiksPodatnika property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PrefiksPodatnikaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kod (prefiks) podatnika VAT UE dla przypadków określonych w art. 97 ust. 10 pkt 2 i 3 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 3 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TKodyKrajowUE> PrefiksPodatnika
        {
            get
            {
                if (this.PrefiksPodatnikaValueSpecified)
                {
                    return this.PrefiksPodatnikaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrefiksPodatnikaValue = value.GetValueOrDefault();
                this.PrefiksPodatnikaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer EORI podatnika (sprzedawcy)</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer EORI podatnika (sprzedawcy)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrEORI")]
        public string NrEORI { get; set; }
        
        /// <summary>
        /// <para>Dane identyfikujące podatnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane identyfikujące podatnika")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DaneIdentyfikacyjne")]
        public TPodmiot1 DaneIdentyfikacyjne { get; set; }
        
        /// <summary>
        /// <para>Adres podatnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres podatnika")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Adres")]
        public TAdres Adres { get; set; }
        
        /// <summary>
        /// <para>Adres korespondencyjny podatnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres korespondencyjny podatnika")]
        [System.Xml.Serialization.XmlElementAttribute("AdresKoresp")]
        public FakturaPodmiot1AdresKoresp AdresKoresp { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaPodmiot1DaneKontaktowe> _daneKontaktowe;
        
        /// <summary>
        /// <para>Dane kontaktowe podatnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane kontaktowe podatnika")]
        [System.Xml.Serialization.XmlElementAttribute("DaneKontaktowe")]
        public System.Collections.ObjectModel.Collection<FakturaPodmiot1DaneKontaktowe> DaneKontaktowe
        {
            get
            {
                return _daneKontaktowe;
            }
            private set
            {
                _daneKontaktowe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DaneKontaktowe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DaneKontaktoweSpecified
        {
            get
            {
                return (this.DaneKontaktowe.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaPodmiot1" /> class.</para>
        /// </summary>
        public FakturaPodmiot1()
        {
            this._daneKontaktowe = new System.Collections.ObjectModel.Collection<FakturaPodmiot1DaneKontaktowe>();
        }
        
        /// <summary>
        /// <para>Status podatnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Status podatnika")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("StatusInfoPodatnika")]
        public TStatusInfoPodatnika StatusInfoPodatnikaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatusInfoPodatnika property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StatusInfoPodatnikaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Status podatnika</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TStatusInfoPodatnika> StatusInfoPodatnika
        {
            get
            {
                if (this.StatusInfoPodatnikaValueSpecified)
                {
                    return this.StatusInfoPodatnikaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatusInfoPodatnikaValue = value.GetValueOrDefault();
                this.StatusInfoPodatnikaValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiot1AdresKoresp", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiot1AdresKoresp : TAdres
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiot1DaneKontaktowe", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiot1DaneKontaktowe
    {
        
        /// <summary>
        /// <para>Adres e-mail podatnika</para>
        /// <para>Adres e-mail</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// <para xml:lang="en">Pattern: (.)+@(.)+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres e-mail podatnika")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(255)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(.)+@(.)+")]
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Numer telefonu podatnika</para>
        /// <para>Numer telefonu</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer telefonu podatnika")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("Telefon")]
        public string Telefon { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiot2", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiot2
    {
        
        /// <summary>
        /// <para>Numer EORI nabywcy towarów</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer EORI nabywcy towarów")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrEORI")]
        public string NrEORI { get; set; }
        
        /// <summary>
        /// <para>Dane identyfikujące nabywcę</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane identyfikujące nabywcę")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DaneIdentyfikacyjne")]
        public TPodmiot2 DaneIdentyfikacyjne { get; set; }
        
        /// <summary>
        /// <para>Adres nabywcy. Pola opcjonalne dla przypadków określonych w art. 106e ust. 5 pkt 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres nabywcy. Pola opcjonalne dla przypadków określonych w art. 106e ust. 5 pkt " +
            "3 ustawy")]
        [System.Xml.Serialization.XmlElementAttribute("Adres")]
        public TAdres Adres { get; set; }
        
        /// <summary>
        /// <para>Adres korespondencyjny nabywcy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres korespondencyjny nabywcy")]
        [System.Xml.Serialization.XmlElementAttribute("AdresKoresp")]
        public TAdres AdresKoresp { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaPodmiot2DaneKontaktowe> _daneKontaktowe;
        
        /// <summary>
        /// <para>Dane kontaktowe nabywcy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane kontaktowe nabywcy")]
        [System.Xml.Serialization.XmlElementAttribute("DaneKontaktowe")]
        public System.Collections.ObjectModel.Collection<FakturaPodmiot2DaneKontaktowe> DaneKontaktowe
        {
            get
            {
                return _daneKontaktowe;
            }
            private set
            {
                _daneKontaktowe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DaneKontaktowe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DaneKontaktoweSpecified
        {
            get
            {
                return (this.DaneKontaktowe.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaPodmiot2" /> class.</para>
        /// </summary>
        public FakturaPodmiot2()
        {
            this._daneKontaktowe = new System.Collections.ObjectModel.Collection<FakturaPodmiot2DaneKontaktowe>();
        }
        
        /// <summary>
        /// <para>Numer klienta dla przypadków, w których nabywca posługuje się nim w umowie lub zamówieniu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer klienta dla przypadków, w których nabywca posługuje się nim w umowie lub za" +
            "mówieniu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrKlienta")]
        public string NrKlienta { get; set; }
        
        /// <summary>
        /// <para>Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku gdy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fakturze korygowanej</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku g" +
            "dy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fak" +
            "turze korygowanej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlElementAttribute("IDNabywcy")]
        public string IDNabywcy { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiot2DaneKontaktowe", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiot2DaneKontaktowe
    {
        
        /// <summary>
        /// <para>Adres e-mail nabywcy</para>
        /// <para>Adres e-mail</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// <para xml:lang="en">Pattern: (.)+@(.)+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres e-mail nabywcy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(255)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(.)+@(.)+")]
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Numer telefonu nabywcy</para>
        /// <para>Numer telefonu</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer telefonu nabywcy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("Telefon")]
        public string Telefon { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiot3", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiot3
    {
        
        /// <summary>
        /// <para>Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku gdy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fakturze korygowanej</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku g" +
            "dy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fak" +
            "turze korygowanej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlElementAttribute("IDNabywcy")]
        public string IDNabywcy { get; set; }
        
        /// <summary>
        /// <para>Numer EORI podmiotu trzeciego</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer EORI podmiotu trzeciego")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrEORI")]
        public string NrEORI { get; set; }
        
        /// <summary>
        /// <para>Dane identyfikujące podmiot trzeci</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane identyfikujące podmiot trzeci")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DaneIdentyfikacyjne")]
        public TPodmiot3 DaneIdentyfikacyjne { get; set; }
        
        /// <summary>
        /// <para>Adres podmiotu trzeciego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres podmiotu trzeciego")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Adres")]
        public TAdres Adres { get; set; }
        
        /// <summary>
        /// <para>Adres korespondencyjny podmiotu trzeciego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres korespondencyjny podmiotu trzeciego")]
        [System.Xml.Serialization.XmlElementAttribute("AdresKoresp")]
        public TAdres AdresKoresp { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaPodmiot3DaneKontaktowe> _daneKontaktowe;
        
        /// <summary>
        /// <para>Dane kontaktowe podmiotu trzeciego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane kontaktowe podmiotu trzeciego")]
        [System.Xml.Serialization.XmlElementAttribute("DaneKontaktowe")]
        public System.Collections.ObjectModel.Collection<FakturaPodmiot3DaneKontaktowe> DaneKontaktowe
        {
            get
            {
                return _daneKontaktowe;
            }
            private set
            {
                _daneKontaktowe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DaneKontaktowe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DaneKontaktoweSpecified
        {
            get
            {
                return (this.DaneKontaktowe.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaPodmiot3" /> class.</para>
        /// </summary>
        public FakturaPodmiot3()
        {
            this._daneKontaktowe = new System.Collections.ObjectModel.Collection<FakturaPodmiot3DaneKontaktowe>();
        }
        
        /// <summary>
        /// <para>Rola podmiotu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rola podmiotu")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Rola")]
        public TRolaPodmiotu3 RolaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rola property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RolaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Rola podmiotu</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TRolaPodmiotu3> Rola
        {
            get
            {
                if (this.RolaValueSpecified)
                {
                    return this.RolaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RolaValue = value.GetValueOrDefault();
                this.RolaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik innego podmiotu: 1 - Inny podmiot</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik innego podmiotu: 1 - Inny podmiot")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("RolaInna")]
        public ProFak.IO.FA_2.TWybor1 RolaInnaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RolaInna property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RolaInnaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik innego podmiotu: 1 - Inny podmiot</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> RolaInna
        {
            get
            {
                if (this.RolaInnaValueSpecified)
                {
                    return this.RolaInnaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RolaInnaValue = value.GetValueOrDefault();
                this.RolaInnaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Opis roli podmiotu - w przypadku wyboru roli jako Inny podmiot</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Opis roli podmiotu - w przypadku wyboru roli jako Inny podmiot")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("OpisRoli")]
        public string OpisRoli { get; set; }
        
        /// <summary>
        /// <para>Udział - procentowy udział dodatkowego nabywcy. Różnica pomiędzy wartością 100% a sumą udziałów dodatkowych nabywców jest udziałem nabywcy wymienionego w części Podmiot2. W przypadku niewypełnienia pola przyjmuje się, że udziały występujących na fakturze nabywców są równe</para>
        /// <para>Wartość procentowa z dokładnością do 6 miejsc po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 9.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Udział - procentowy udział dodatkowego nabywcy. Różnica pomiędzy wartością 100% a sumą udziałów dodatkowych nabywców jest udziałem nabywcy wymienionego w części Podmiot2. W przypadku niewypełnienia pola przyjmuje się, że udziały występujących na fakturze nabywców są równe")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0", "100")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Udzial")]
        public decimal UdzialValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Udzial property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UdzialValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Udział - procentowy udział dodatkowego nabywcy. Różnica pomiędzy wartością 100% a sumą udziałów dodatkowych nabywców jest udziałem nabywcy wymienionego w części Podmiot2. W przypadku niewypełnienia pola przyjmuje się, że udziały występujących na fakturze nabywców są równe</para>
        /// <para>Wartość procentowa z dokładnością do 6 miejsc po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 9.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Udzial
        {
            get
            {
                if (this.UdzialValueSpecified)
                {
                    return this.UdzialValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UdzialValue = value.GetValueOrDefault();
                this.UdzialValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer klienta dla przypadków, w których podmiot wymieniony jako podmiot trzeci posługuje się nim w umowie lub zamówieniu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer klienta dla przypadków, w których podmiot wymieniony jako podmiot trzeci po" +
            "sługuje się nim w umowie lub zamówieniu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrKlienta")]
        public string NrKlienta { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiot3DaneKontaktowe", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiot3DaneKontaktowe
    {
        
        /// <summary>
        /// <para>Adres e-mail podmiotu trzeciego</para>
        /// <para>Adres e-mail</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// <para xml:lang="en">Pattern: (.)+@(.)+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres e-mail podmiotu trzeciego")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(255)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(.)+@(.)+")]
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Numer telefonu podmiotu trzeciego</para>
        /// <para>Numer telefonu</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer telefonu podmiotu trzeciego")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("Telefon")]
        public string Telefon { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiotUpowazniony", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiotUpowazniony
    {
        
        /// <summary>
        /// <para>Numer EORI podmiotu upoważnionego</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer EORI podmiotu upoważnionego")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrEORI")]
        public string NrEORI { get; set; }
        
        /// <summary>
        /// <para>Dane identyfikujące podmiotu upoważnionego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane identyfikujące podmiotu upoważnionego")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DaneIdentyfikacyjne")]
        public TPodmiot1 DaneIdentyfikacyjne { get; set; }
        
        /// <summary>
        /// <para>Adres podmiotu upoważnionego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres podmiotu upoważnionego")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Adres")]
        public TAdres Adres { get; set; }
        
        /// <summary>
        /// <para>Adres korespondencyjny podmiotu upoważnionego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres korespondencyjny podmiotu upoważnionego")]
        [System.Xml.Serialization.XmlElementAttribute("AdresKoresp")]
        public TAdres AdresKoresp { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaPodmiotUpowaznionyDaneKontaktowe> _daneKontaktowe;
        
        /// <summary>
        /// <para>Dane kontaktowe podmiotu upoważnionego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane kontaktowe podmiotu upoważnionego")]
        [System.Xml.Serialization.XmlElementAttribute("DaneKontaktowe")]
        public System.Collections.ObjectModel.Collection<FakturaPodmiotUpowaznionyDaneKontaktowe> DaneKontaktowe
        {
            get
            {
                return _daneKontaktowe;
            }
            private set
            {
                _daneKontaktowe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DaneKontaktowe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DaneKontaktoweSpecified
        {
            get
            {
                return (this.DaneKontaktowe.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaPodmiotUpowazniony" /> class.</para>
        /// </summary>
        public FakturaPodmiotUpowazniony()
        {
            this._daneKontaktowe = new System.Collections.ObjectModel.Collection<FakturaPodmiotUpowaznionyDaneKontaktowe>();
        }
        
        /// <summary>
        /// <para>Rola podmiotu upoważnionego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rola podmiotu upoważnionego")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("RolaPU")]
        public TRolaPodmiotuUpowaznionego RolaPU { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaPodmiotUpowaznionyDaneKontaktowe", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaPodmiotUpowaznionyDaneKontaktowe
    {
        
        /// <summary>
        /// <para>Adres e-mail podmiotu upoważnionego</para>
        /// <para>Adres e-mail</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// <para xml:lang="en">Pattern: (.)+@(.)+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres e-mail podmiotu upoważnionego")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(255)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(.)+@(.)+")]
        [System.Xml.Serialization.XmlElementAttribute("EmailPU")]
        public string EmailPU { get; set; }
        
        /// <summary>
        /// <para>Numer telefonu podmiotu upoważnionego</para>
        /// <para>Numer telefonu</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer telefonu podmiotu upoważnionego")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("TelefonPU")]
        public string TelefonPU { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFa", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFa
    {
        
        /// <summary>
        /// <para>Trzyliterowy kod waluty (ISO 4217)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trzyliterowy kod waluty (ISO 4217)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("KodWaluty")]
        public TKodWaluty KodWaluty { get; set; }
        
        /// <summary>
        /// <para>Data wystawienia, z zastrzeżeniem art. 106na ust. 1 ustawy</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data wystawienia, z zastrzeżeniem art. 106na ust. 1 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_1", DataType="date")]
        public System.DateTime P_1 { get; set; }
        
        /// <summary>
        /// <para>Miejsce wystawienia faktury</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miejsce wystawienia faktury")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_1M")]
        public string P_1M { get; set; }
        
        /// <summary>
        /// <para>Kolejny numer faktury, nadany w ramach jednej lub więcej serii, który w sposób jednoznaczny identyfikuje fakturę</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kolejny numer faktury, nadany w ramach jednej lub więcej serii, który w sposób je" +
            "dnoznaczny identyfikuje fakturę")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("P_2")]
        public string P_2 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _wZ;
        
        /// <summary>
        /// <para>Numery dokumentów magazynowych WZ (wydanie na zewnątrz) związane z fakturą</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numery dokumentów magazynowych WZ (wydanie na zewnątrz) związane z fakturą")]
        [System.Xml.Serialization.XmlElementAttribute("WZ")]
        public System.Collections.ObjectModel.Collection<string> WZ
        {
            get
            {
                return _wZ;
            }
            private set
            {
                _wZ = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WZ collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WZSpecified
        {
            get
            {
                return (this.WZ.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaFa" /> class.</para>
        /// </summary>
        public FakturaFa()
        {
            this._wZ = new System.Collections.ObjectModel.Collection<string>();
            this._daneFaKorygowanej = new System.Collections.ObjectModel.Collection<FakturaFaDaneFaKorygowanej>();
            this._podmiot2K = new System.Collections.ObjectModel.Collection<FakturaFaPodmiot2K>();
            this._zaliczkaCzesciowa = new System.Collections.ObjectModel.Collection<FakturaFaZaliczkaCzesciowa>();
            this._dodatkowyOpis = new System.Collections.ObjectModel.Collection<TKluczWartosc>();
            this._fakturaZaliczkowa = new System.Collections.ObjectModel.Collection<FakturaFaFakturaZaliczkowa>();
            this._faWiersz = new System.Collections.ObjectModel.Collection<FakturaFaFaWiersz>();
        }
        
        /// <summary>
        /// <para>Data dokonania lub zakończenia dostawy towarów lub wykonania usługi lub data otrzymania zapłaty, o której mowa w art. 106b ust. 1 pkt 4 ustawy, o ile taka data jest określona i różni się od daty wystawienia faktury. Pole wypełnia się w przypadku, gdy dla wszystkich pozycji faktury data jest wspólna</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Data dokonania lub zakończenia dostawy towarów lub wykonania usługi lub data otrzymania zapłaty, o której mowa w art. 106b ust. 1 pkt 4 ustawy, o ile taka data jest określona i różni się od daty wystawienia faktury. Pole wypełnia się w przypadku, gdy dla wszystkich pozycji faktury data jest wspólna")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_6", DataType="date")]
        public System.DateTime P_6Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_6 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_6ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Data dokonania lub zakończenia dostawy towarów lub wykonania usługi lub data otrzymania zapłaty, o której mowa w art. 106b ust. 1 pkt 4 ustawy, o ile taka data jest określona i różni się od daty wystawienia faktury. Pole wypełnia się w przypadku, gdy dla wszystkich pozycji faktury data jest wspólna</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> P_6
        {
            get
            {
                if (this.P_6ValueSpecified)
                {
                    return this.P_6Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_6Value = value.GetValueOrDefault();
                this.P_6ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Okres, którego dotyczy faktura w przypadkach, o których mowa w art. 19a ust. 3 zdanie pierwsze i ust. 4 oraz ust. 5 pkt 4 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Okres, którego dotyczy faktura w przypadkach, o których mowa w art. 19a ust. 3 zd" +
            "anie pierwsze i ust. 4 oraz ust. 5 pkt 4 ustawy")]
        [System.Xml.Serialization.XmlElementAttribute("OkresFa")]
        public FakturaFaOkresFa OkresFa { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto ze stawką podstawową - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży netto ze stawką podstawową - aktualnie 23% albo 22%. W pr" +
            "zypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujący" +
            "ch, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_1")]
        public decimal P_13_1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_1ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto ze stawką podstawową - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_1
        {
            get
            {
                if (this.P_13_1ValueSpecified)
                {
                    return this.P_13_1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_1Value = value.GetValueOrDefault();
                this.P_13_1ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto objętej stawką podstawową - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Kwota podatku od sumy wartości sprzedaży netto objętej stawką podstawową - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_1")]
        public decimal P_14_1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_1ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto objętej stawką podstawową - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_1
        {
            get
            {
                if (this.P_14_1ValueSpecified)
                {
                    return this.P_14_1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_1Value = value.GetValueOrDefault();
                this.P_14_1ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką podstawową, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką podstawową, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_1W")]
        public decimal P_14_1WValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_1W property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_1WValueSpecified { get; set; }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką podstawową, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 23% albo 22%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_1W
        {
            get
            {
                if (this.P_14_1WValueSpecified)
                {
                    return this.P_14_1WValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_1WValue = value.GetValueOrDefault();
                this.P_14_1WValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto objętej stawką obniżoną pierwszą - aktualnie 8 % albo 7%. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży netto objętej stawką obniżoną pierwszą - aktualnie 8 % al" +
            "bo 7%. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur" +
            " korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_2")]
        public decimal P_13_2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_2ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto objętej stawką obniżoną pierwszą - aktualnie 8 % albo 7%. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_2
        {
            get
            {
                if (this.P_13_2ValueSpecified)
                {
                    return this.P_13_2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_2Value = value.GetValueOrDefault();
                this.P_13_2ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną pierwszą - aktualnie 8% albo 7%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną pierwszą - aktualnie 8% albo 7%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_2")]
        public decimal P_14_2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_2ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną pierwszą - aktualnie 8% albo 7%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_2
        {
            get
            {
                if (this.P_14_2ValueSpecified)
                {
                    return this.P_14_2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_2Value = value.GetValueOrDefault();
                this.P_14_2ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 8% albo 7%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 8% albo 7%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_2W")]
        public decimal P_14_2WValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_2W property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_2WValueSpecified { get; set; }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 8% albo 7%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_2W
        {
            get
            {
                if (this.P_14_2WValueSpecified)
                {
                    return this.P_14_2WValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_2WValue = value.GetValueOrDefault();
                this.P_14_2WValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto objętej stawką obniżoną drugą - aktualnie 5%. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży netto objętej stawką obniżoną drugą - aktualnie 5%. W prz" +
            "ypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygującyc" +
            "h, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_3")]
        public decimal P_13_3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_3 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_3ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto objętej stawką obniżoną drugą - aktualnie 5%. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_3
        {
            get
            {
                if (this.P_13_3ValueSpecified)
                {
                    return this.P_13_3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_3Value = value.GetValueOrDefault();
                this.P_13_3ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną drugą - aktualnie 5%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną drugą - aktualnie 5%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_3")]
        public decimal P_14_3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_3 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_3ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną drugą - aktualnie 5%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_3
        {
            get
            {
                if (this.P_14_3ValueSpecified)
                {
                    return this.P_14_3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_3Value = value.GetValueOrDefault();
                this.P_14_3ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną drugą, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 5%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną drugą, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 5%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_3W")]
        public decimal P_14_3WValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_3W property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_3WValueSpecified { get; set; }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku od sumy wartości sprzedaży netto objętej stawką obniżoną drugą, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy - aktualnie 5%. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_3W
        {
            get
            {
                if (this.P_14_3WValueSpecified)
                {
                    return this.P_14_3WValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_3WValue = value.GetValueOrDefault();
                this.P_14_3WValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto objętej ryczałtem dla taksówek osobowych. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży netto objętej ryczałtem dla taksówek osobowych. W przypad" +
            "ku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, k" +
            "wota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_4")]
        public decimal P_13_4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_4 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_4ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto objętej ryczałtem dla taksówek osobowych. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_4
        {
            get
            {
                if (this.P_13_4ValueSpecified)
                {
                    return this.P_13_4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_4Value = value.GetValueOrDefault();
                this.P_13_4ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto w przypadku ryczałtu dla taksówek osobowych. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Kwota podatku od sumy wartości sprzedaży netto w przypadku ryczałtu dla taksówek osobowych. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_4")]
        public decimal P_14_4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_4 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_4ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku od sumy wartości sprzedaży netto w przypadku ryczałtu dla taksówek osobowych. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_4
        {
            get
            {
                if (this.P_14_4ValueSpecified)
                {
                    return this.P_14_4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_4Value = value.GetValueOrDefault();
                this.P_14_4ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku ryczałtu dla taksówek osobowych, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku ryczałtu dla taksówek osobowych, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_4W")]
        public decimal P_14_4WValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_4W property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_4WValueSpecified { get; set; }
        
        /// <summary>
        /// <para>W przypadku gdy faktura jest wystawiona w walucie obcej, kwota podatku ryczałtu dla taksówek osobowych, przeliczona zgodnie z przepisami Działu VI w związku z art. 106e ust. 11 ustawy. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_4W
        {
            get
            {
                if (this.P_14_4WValueSpecified)
                {
                    return this.P_14_4WValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_4WValue = value.GetValueOrDefault();
                this.P_14_4WValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto w przypadku procedury szczególnej, o której mowa w dziale XII w rozdziale 6a ustawy. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Suma wartości sprzedaży netto w przypadku procedury szczególnej, o której mowa w dziale XII w rozdziale 6a ustawy. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_5")]
        public decimal P_13_5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_5 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_5ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży netto w przypadku procedury szczególnej, o której mowa w dziale XII w rozdziale 6a ustawy. W przypadku faktur zaliczkowych, kwota zaliczki netto. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_5
        {
            get
            {
                if (this.P_13_5ValueSpecified)
                {
                    return this.P_13_5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_5Value = value.GetValueOrDefault();
                this.P_13_5ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku od wartości dodanej w przypadku procedury szczególnej, o której mowa w dziale XII w rozdziale 6a ustawy. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Kwota podatku od wartości dodanej w przypadku procedury szczególnej, o której mowa w dziale XII w rozdziale 6a ustawy. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_14_5")]
        public decimal P_14_5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_14_5 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_14_5ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku od wartości dodanej w przypadku procedury szczególnej, o której mowa w dziale XII w rozdziale 6a ustawy. W przypadku faktur zaliczkowych, kwota podatku wyliczona według wzoru, o którym mowa w art. 106f ust. 1 pkt 3 ustawy. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_14_5
        {
            get
            {
                if (this.P_14_5ValueSpecified)
                {
                    return this.P_14_5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_14_5Value = value.GetValueOrDefault();
                this.P_14_5ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży objętej stawką 0% z wyłączeniem wewnątrzwspólnotowej dostawy towarów i eksportu. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży objętej stawką 0% z wyłączeniem wewnątrzwspólnotowej dost" +
            "awy towarów i eksportu. W przypadku faktur zaliczkowych, kwota zaliczki. W przyp" +
            "adku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 " +
            "ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_6_1")]
        public decimal P_13_6_1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_6_1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_6_1ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży objętej stawką 0% z wyłączeniem wewnątrzwspólnotowej dostawy towarów i eksportu. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_6_1
        {
            get
            {
                if (this.P_13_6_1ValueSpecified)
                {
                    return this.P_13_6_1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_6_1Value = value.GetValueOrDefault();
                this.P_13_6_1ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży objętej stawką 0% w przypadku wewnątrzwspólnotowej dostawy towarów. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży objętej stawką 0% w przypadku wewnątrzwspólnotowej dostaw" +
            "y towarów. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. " +
            "106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_6_2")]
        public decimal P_13_6_2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_6_2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_6_2ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży objętej stawką 0% w przypadku wewnątrzwspólnotowej dostawy towarów. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_6_2
        {
            get
            {
                if (this.P_13_6_2ValueSpecified)
                {
                    return this.P_13_6_2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_6_2Value = value.GetValueOrDefault();
                this.P_13_6_2ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży objętej stawką 0% w przypadku eksportu. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży objętej stawką 0% w przypadku eksportu. W przypadku faktu" +
            "r zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, " +
            "o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_6_3")]
        public decimal P_13_6_3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_6_3 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_6_3ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży objętej stawką 0% w przypadku eksportu. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_6_3
        {
            get
            {
                if (this.P_13_6_3ValueSpecified)
                {
                    return this.P_13_6_3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_6_3Value = value.GetValueOrDefault();
                this.P_13_6_3ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży zwolnionej od podatku. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży zwolnionej od podatku. W przypadku faktur zaliczkowych, k" +
            "wota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży" +
            "")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_7")]
        public decimal P_13_7Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_7 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_7ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży zwolnionej od podatku. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_7
        {
            get
            {
                if (this.P_13_7ValueSpecified)
                {
                    return this.P_13_7Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_7Value = value.GetValueOrDefault();
                this.P_13_7ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży w przypadku dostawy towarów oraz świadczenia usług poza terytorium kraju, z wyłączeniem kwot wykazanych w polach P_13_5 i P_13_9. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Suma wartości sprzedaży w przypadku dostawy towarów oraz świadczenia usług poza terytorium kraju, z wyłączeniem kwot wykazanych w polach P_13_5 i P_13_9. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_8")]
        public decimal P_13_8Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_8 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_8ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży w przypadku dostawy towarów oraz świadczenia usług poza terytorium kraju, z wyłączeniem kwot wykazanych w polach P_13_5 i P_13_9. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_8
        {
            get
            {
                if (this.P_13_8ValueSpecified)
                {
                    return this.P_13_8Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_8Value = value.GetValueOrDefault();
                this.P_13_8ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości świadczenia usług, o których mowa w art. 100 ust. 1 pkt 4 ustawy. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości świadczenia usług, o których mowa w art. 100 ust. 1 pkt 4 ustawy. W" +
            " przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących," +
            " kwota różnicy wartości sprzedaży")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_9")]
        public decimal P_13_9Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_9 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_9ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości świadczenia usług, o których mowa w art. 100 ust. 1 pkt 4 ustawy. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_9
        {
            get
            {
                if (this.P_13_9ValueSpecified)
                {
                    return this.P_13_9Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_9Value = value.GetValueOrDefault();
                this.P_13_9ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży w procedurze odwrotnego obciążenia, dla której podatnikiem jest nabywca zgodnie z art. 17 ust. 1 pkt 7 i 8 ustawy oraz innych przypadków odwrotnego obciążenia występujących w obrocie krajowym. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Suma wartości sprzedaży w procedurze odwrotnego obciążenia, dla której podatnikiem jest nabywca zgodnie z art. 17 ust. 1 pkt 7 i 8 ustawy oraz innych przypadków odwrotnego obciążenia występujących w obrocie krajowym. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_10")]
        public decimal P_13_10Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_10 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_10ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży w procedurze odwrotnego obciążenia, dla której podatnikiem jest nabywca zgodnie z art. 17 ust. 1 pkt 7 i 8 ustawy oraz innych przypadków odwrotnego obciążenia występujących w obrocie krajowym. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy, o której mowa w art. 106j ust. 2 pkt 5 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_10
        {
            get
            {
                if (this.P_13_10ValueSpecified)
                {
                    return this.P_13_10Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_10Value = value.GetValueOrDefault();
                this.P_13_10ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży w procedurze marży, o której mowa w art. 119 i art. 120 ustawy. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma wartości sprzedaży w procedurze marży, o której mowa w art. 119 i art. 120 u" +
            "stawy. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur koryg" +
            "ujących, kwota różnicy wartości sprzedaży")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_13_11")]
        public decimal P_13_11Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_13_11 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_13_11ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma wartości sprzedaży w procedurze marży, o której mowa w art. 119 i art. 120 ustawy. W przypadku faktur zaliczkowych, kwota zaliczki. W przypadku faktur korygujących, kwota różnicy wartości sprzedaży</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_13_11
        {
            get
            {
                if (this.P_13_11ValueSpecified)
                {
                    return this.P_13_11Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_13_11Value = value.GetValueOrDefault();
                this.P_13_11ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota należności ogółem. W przypadku faktur zaliczkowych kwota zapłaty dokumentowana fakturą. W przypadku faktur, o których mowa w art. 106f ust. 3 ustawy kwota pozostała do zapłaty. W przypadku faktur korygujących korekta kwoty wynikającej z faktury korygowanej. W przypadku, o którym mowa w art. 106j ust. 3 ustawy korekta kwot wynikających z faktur korygowanych</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Kwota należności ogółem. W przypadku faktur zaliczkowych kwota zapłaty dokumentowana fakturą. W przypadku faktur, o których mowa w art. 106f ust. 3 ustawy kwota pozostała do zapłaty. W przypadku faktur korygujących korekta kwoty wynikającej z faktury korygowanej. W przypadku, o którym mowa w art. 106j ust. 3 ustawy korekta kwot wynikających z faktur korygowanych")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_15")]
        public decimal P_15 { get; set; }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w przepisach Działu VI ustawy na fakturach, o których mowa w art. 106b ust. 1 pkt 4 ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w" +
            " przepisach Działu VI ustawy na fakturach, o których mowa w art. 106b ust. 1 pkt" +
            " 4 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,6})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KursWalutyZ")]
        public decimal KursWalutyZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KursWalutyZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KursWalutyZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w przepisach Działu VI ustawy na fakturach, o których mowa w art. 106b ust. 1 pkt 4 ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> KursWalutyZ
        {
            get
            {
                if (this.KursWalutyZValueSpecified)
                {
                    return this.KursWalutyZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KursWalutyZValue = value.GetValueOrDefault();
                this.KursWalutyZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Inne adnotacje na fakturze</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inne adnotacje na fakturze")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Adnotacje")]
        public FakturaFaAdnotacje Adnotacje { get; set; }
        
        /// <summary>
        /// <para>Rodzaj faktury</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rodzaj faktury")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("RodzajFaktury")]
        public TRodzajFaktury RodzajFaktury { get; set; }
        
        /// <summary>
        /// <para>Przyczyna korekty dla faktur korygujących</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Przyczyna korekty dla faktur korygujących")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("PrzyczynaKorekty")]
        public string PrzyczynaKorekty { get; set; }
        
        /// <summary>
        /// <para>Typ skutku korekty w ewidencji dla podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Typ skutku korekty w ewidencji dla podatku od towarów i usług")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("TypKorekty")]
        public TTypKorekty TypKorektyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TypKorekty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TypKorektyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Typ skutku korekty w ewidencji dla podatku od towarów i usług</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TTypKorekty> TypKorekty
        {
            get
            {
                if (this.TypKorektyValueSpecified)
                {
                    return this.TypKorektyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypKorektyValue = value.GetValueOrDefault();
                this.TypKorektyValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaDaneFaKorygowanej> _daneFaKorygowanej;
        
        /// <summary>
        /// <para>Dane faktury korygowanej</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane faktury korygowanej")]
        [System.Xml.Serialization.XmlElementAttribute("DaneFaKorygowanej")]
        public System.Collections.ObjectModel.Collection<FakturaFaDaneFaKorygowanej> DaneFaKorygowanej
        {
            get
            {
                return _daneFaKorygowanej;
            }
            private set
            {
                _daneFaKorygowanej = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DaneFaKorygowanej collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DaneFaKorygowanejSpecified
        {
            get
            {
                return (this.DaneFaKorygowanej.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Dla faktury korygującej, o której mowa w art. 106j ust. 3 ustawy - okres, do którego odnosi się udzielany opust lub udzielana obniżka, w przypadku gdy podatnik udziela opustu lub obniżki ceny w odniesieniu do dostaw towarów lub usług dokonanych lub świadczonych na rzecz jednego odbiorcy w danym okresie</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Dla faktury korygującej, o której mowa w art. 106j ust. 3 ustawy - okres, do którego odnosi się udzielany opust lub udzielana obniżka, w przypadku gdy podatnik udziela opustu lub obniżki ceny w odniesieniu do dostaw towarów lub usług dokonanych lub świadczonych na rzecz jednego odbiorcy w danym okresie")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("OkresFaKorygowanej")]
        public string OkresFaKorygowanej { get; set; }
        
        /// <summary>
        /// <para>Poprawny numer faktury korygowanej w przypadku, gdy przyczyną korekty jest błędny numer faktury korygowanej. W takim przypadku błędny numer faktury należy wskazać w polu NrFaKorygowanej</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poprawny numer faktury korygowanej w przypadku, gdy przyczyną korekty jest błędny" +
            " numer faktury korygowanej. W takim przypadku błędny numer faktury należy wskaza" +
            "ć w polu NrFaKorygowanej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrFaKorygowany")]
        public string NrFaKorygowany { get; set; }
        
        /// <summary>
        /// <para>W przypadku korekty danych sprzedawcy należy podać pełne dane sprzedawcy występujące na fakturze korygowanej. Pole nie dotyczy przypadku korekty błędnego NIP występującego na fakturze pierwotnej - wówczas wymagana jest korekta faktury do wartości zerowych</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("W przypadku korekty danych sprzedawcy należy podać pełne dane sprzedawcy występuj" +
            "ące na fakturze korygowanej. Pole nie dotyczy przypadku korekty błędnego NIP wys" +
            "tępującego na fakturze pierwotnej - wówczas wymagana jest korekta faktury do war" +
            "tości zerowych")]
        [System.Xml.Serialization.XmlElementAttribute("Podmiot1K")]
        public FakturaFaPodmiot1K Podmiot1K { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaPodmiot2K> _podmiot2K;
        
        /// <summary>
        /// <para>W przypadku korekty danych nabywcy występującego jako Podmiot2 lub dodatkowego nabywcy występującego jako Podmiot3 należy podać pełne dane tego podmiotu występujące na fakturze korygowanej. Korekcie nie podlegają błędne numery identyfikujące nabywcę oraz dodatkowego nabywcę. W przypadku korygowania pozostałych danych nabywcy lub dodatkowego nabywcy wskazany numer identyfikacyjny ma być tożsamy z numerem w części Podmiot2 względnie Podmiot3 faktury korygującej</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku korekty danych nabywcy występującego jako Podmiot2 lub dodatkowego nabywcy występującego jako Podmiot3 należy podać pełne dane tego podmiotu występujące na fakturze korygowanej. Korekcie nie podlegają błędne numery identyfikujące nabywcę oraz dodatkowego nabywcę. W przypadku korygowania pozostałych danych nabywcy lub dodatkowego nabywcy wskazany numer identyfikacyjny ma być tożsamy z numerem w części Podmiot2 względnie Podmiot3 faktury korygującej")]
        [System.Xml.Serialization.XmlElementAttribute("Podmiot2K")]
        public System.Collections.ObjectModel.Collection<FakturaFaPodmiot2K> Podmiot2K
        {
            get
            {
                return _podmiot2K;
            }
            private set
            {
                _podmiot2K = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Podmiot2K collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Podmiot2KSpecified
        {
            get
            {
                return (this.Podmiot2K.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>W przypadku korekt faktur zaliczkowych, kwota zapłaty przed korektą. W przypadku korekt faktur, o których mowa w art. 106f ust. 3 ustawy, kwota pozostała do zapłaty przed korektą</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("W przypadku korekt faktur zaliczkowych, kwota zapłaty przed korektą. W przypadku " +
            "korekt faktur, o których mowa w art. 106f ust. 3 ustawy, kwota pozostała do zapł" +
            "aty przed korektą")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_15ZK")]
        public decimal P_15ZKValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_15ZK property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_15ZKValueSpecified { get; set; }
        
        /// <summary>
        /// <para>W przypadku korekt faktur zaliczkowych, kwota zapłaty przed korektą. W przypadku korekt faktur, o których mowa w art. 106f ust. 3 ustawy, kwota pozostała do zapłaty przed korektą</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_15ZK
        {
            get
            {
                if (this.P_15ZKValueSpecified)
                {
                    return this.P_15ZKValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_15ZKValue = value.GetValueOrDefault();
                this.P_15ZKValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w Dziale VI ustawy przed korektą</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w" +
            " Dziale VI ustawy przed korektą")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,6})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KursWalutyZK")]
        public decimal KursWalutyZKValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KursWalutyZK property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KursWalutyZKValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w Dziale VI ustawy przed korektą</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> KursWalutyZK
        {
            get
            {
                if (this.KursWalutyZKValueSpecified)
                {
                    return this.KursWalutyZKValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KursWalutyZKValue = value.GetValueOrDefault();
                this.KursWalutyZKValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaZaliczkaCzesciowa> _zaliczkaCzesciowa;
        
        /// <summary>
        /// <para>Dane dla przypadków faktur dokumentujących otrzymanie więcej niż jednej płatności, o której mowa w art. 106b ust. 1 pkt 4 ustawy. W przypadku, gdy faktura, o której mowa w art. 106f ust. 3 ustawy dokumentuje jednocześnie otrzymanie części zapłaty przed dokonaniem czynności, różnica kwoty w polu P_15 i sumy poszczególnych pól P_15Z stanowi kwotę pozostałą ponad płatności otrzymane przed wykonaniem czynności udokumentowanej fakturą</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Dane dla przypadków faktur dokumentujących otrzymanie więcej niż jednej płatności, o której mowa w art. 106b ust. 1 pkt 4 ustawy. W przypadku, gdy faktura, o której mowa w art. 106f ust. 3 ustawy dokumentuje jednocześnie otrzymanie części zapłaty przed dokonaniem czynności, różnica kwoty w polu P_15 i sumy poszczególnych pól P_15Z stanowi kwotę pozostałą ponad płatności otrzymane przed wykonaniem czynności udokumentowanej fakturą")]
        [System.Xml.Serialization.XmlElementAttribute("ZaliczkaCzesciowa")]
        public System.Collections.ObjectModel.Collection<FakturaFaZaliczkaCzesciowa> ZaliczkaCzesciowa
        {
            get
            {
                return _zaliczkaCzesciowa;
            }
            private set
            {
                _zaliczkaCzesciowa = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZaliczkaCzesciowa collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZaliczkaCzesciowaSpecified
        {
            get
            {
                return (this.ZaliczkaCzesciowa.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Faktura, o której mowa w art. 109 ust. 3d ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faktura, o której mowa w art. 109 ust. 3d ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FP")]
        public ProFak.IO.FA_2.TWybor1 FPValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FP property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FPValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Faktura, o której mowa w art. 109 ust. 3d ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> FP
        {
            get
            {
                if (this.FPValueSpecified)
                {
                    return this.FPValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FPValue = value.GetValueOrDefault();
                this.FPValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Istniejące powiązania między nabywcą a dokonującym dostawy towarów lub usługodawcą, zgodnie z § 10 ust. 4 pkt 3, z zastrzeżeniem ust. 4b rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Istniejące powiązania między nabywcą a dokonującym dostawy towarów lub usługodawcą, zgodnie z § 10 ust. 4 pkt 3, z zastrzeżeniem ust. 4b rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("TP")]
        public ProFak.IO.FA_2.TWybor1 TPValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TP property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TPValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Istniejące powiązania między nabywcą a dokonującym dostawy towarów lub usługodawcą, zgodnie z § 10 ust. 4 pkt 3, z zastrzeżeniem ust. 4b rozporządzenia w sprawie szczegółowego zakresu danych zawartych w deklaracjach podatkowych i w ewidencji w zakresie podatku od towarów i usług</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> TP
        {
            get
            {
                if (this.TPValueSpecified)
                {
                    return this.TPValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TPValue = value.GetValueOrDefault();
                this.TPValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TKluczWartosc> _dodatkowyOpis;
        
        /// <summary>
        /// <para>Pola przeznaczone dla wykazywania dodatkowych danych na fakturze, w tym wymaganych przepisami prawa, dla których nie przewidziano innych pól/elementów</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pola przeznaczone dla wykazywania dodatkowych danych na fakturze, w tym wymaganyc" +
            "h przepisami prawa, dla których nie przewidziano innych pól/elementów")]
        [System.Xml.Serialization.XmlElementAttribute("DodatkowyOpis")]
        public System.Collections.ObjectModel.Collection<TKluczWartosc> DodatkowyOpis
        {
            get
            {
                return _dodatkowyOpis;
            }
            private set
            {
                _dodatkowyOpis = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DodatkowyOpis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DodatkowyOpisSpecified
        {
            get
            {
                return (this.DodatkowyOpis.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaFakturaZaliczkowa> _fakturaZaliczkowa;
        
        /// <summary>
        /// <para>Numery faktur zaliczkowych lub ich numery KSeF, jeśli zostały wystawione z użyciem KSeF</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numery faktur zaliczkowych lub ich numery KSeF, jeśli zostały wystawione z użycie" +
            "m KSeF")]
        [System.Xml.Serialization.XmlElementAttribute("FakturaZaliczkowa")]
        public System.Collections.ObjectModel.Collection<FakturaFaFakturaZaliczkowa> FakturaZaliczkowa
        {
            get
            {
                return _fakturaZaliczkowa;
            }
            private set
            {
                _fakturaZaliczkowa = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FakturaZaliczkowa collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FakturaZaliczkowaSpecified
        {
            get
            {
                return (this.FakturaZaliczkowa.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Informacja dodatkowa niezbędna dla rolników ubiegających się o zwrot podatku akcyzowego zawartego w cenie oleju napędowego</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Informacja dodatkowa niezbędna dla rolników ubiegających się o zwrot podatku akcy" +
            "zowego zawartego w cenie oleju napędowego")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ZwrotAkcyzy")]
        public ProFak.IO.FA_2.TWybor1 ZwrotAkcyzyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ZwrotAkcyzy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ZwrotAkcyzyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Informacja dodatkowa niezbędna dla rolników ubiegających się o zwrot podatku akcyzowego zawartego w cenie oleju napędowego</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> ZwrotAkcyzy
        {
            get
            {
                if (this.ZwrotAkcyzyValueSpecified)
                {
                    return this.ZwrotAkcyzyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZwrotAkcyzyValue = value.GetValueOrDefault();
                this.ZwrotAkcyzyValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaFaWiersz> _faWiersz;
        
        /// <summary>
        /// <para>Szczegółowe pozycje faktury w walucie, w której wystawiono fakturę - węzeł opcjonalny dla faktury zaliczkowej, faktury korygującej fakturę zaliczkową, oraz faktur korygujących dotyczących wszystkich dostaw towarów lub usług dokonanych lub świadczonych w danym okresie, o których mowa w art. 106j ust. 3 ustawy, dla których należy podać dane dotyczące opustu lub obniżki w podziale na stawki podatku i procedury w części Fa. W przypadku faktur korygujących, o których mowa w art. 106j ust. 3 ustawy, gdy opust lub obniżka ceny odnosi się do części dostaw towarów lub usług dokonanych lub świadczonych w danym okresie w części FaWiersz należy podać nazwy (rodzaje) towarów lub usług objętych korektą. W przypadku faktur, o których mowa w art. 106f ust. 3 ustawy, należy wykazać pełne wartości zamówienia lub umowy. W przypadku faktur korygujących pozycje faktury (w tym faktur korygujących faktury, o których mowa w art. 106f ust. 3 ustawy, jeśli korekta dotyczy wartości zamówienia), należy wykazać różnice wynikające z korekty poszczególnych pozycji lub dane pozycji korygowanych w stanie przed korektą i po korekcie jako osobne wiersze. W przypadku faktur korygujących faktury, o których mowa w art. 106f ust. 3 ustawy, jeśli korekta nie dotyczy wartości zamówienia i jednocześnie zmienia wysokość podstawy opodatkowania lub podatku, należy wprowadzić zapis wg stanu przed korektą i zapis w stanie po korekcie w celu potwierdzenia braku zmiany wartości danej pozycji faktury</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Szczegółowe pozycje faktury w walucie, w której wystawiono fakturę - węzeł opcjonalny dla faktury zaliczkowej, faktury korygującej fakturę zaliczkową, oraz faktur korygujących dotyczących wszystkich dostaw towarów lub usług dokonanych lub świadczonych w danym okresie, o których mowa w art. 106j ust. 3 ustawy, dla których należy podać dane dotyczące opustu lub obniżki w podziale na stawki podatku i procedury w części Fa. W przypadku faktur korygujących, o których mowa w art. 106j ust. 3 ustawy, gdy opust lub obniżka ceny odnosi się do części dostaw towarów lub usług dokonanych lub świadczonych w danym okresie w części FaWiersz należy podać nazwy (rodzaje) towarów lub usług objętych korektą. W przypadku faktur, o których mowa w art. 106f ust. 3 ustawy, należy wykazać pełne wartości zamówienia lub umowy. W przypadku faktur korygujących pozycje faktury (w tym faktur korygujących faktury, o których mowa w art. 106f ust. 3 ustawy, jeśli korekta dotyczy wartości zamówienia), należy wykazać różnice wynikające z korekty poszczególnych pozycji lub dane pozycji korygowanych w stanie przed korektą i po korekcie jako osobne wiersze. W przypadku faktur korygujących faktury, o których mowa w art. 106f ust. 3 ustawy, jeśli korekta nie dotyczy wartości zamówienia i jednocześnie zmienia wysokość podstawy opodatkowania lub podatku, należy wprowadzić zapis wg stanu przed korektą i zapis w stanie po korekcie w celu potwierdzenia braku zmiany wartości danej pozycji faktury")]
        [System.Xml.Serialization.XmlElementAttribute("FaWiersz")]
        public System.Collections.ObjectModel.Collection<FakturaFaFaWiersz> FaWiersz
        {
            get
            {
                return _faWiersz;
            }
            private set
            {
                _faWiersz = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FaWiersz collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FaWierszSpecified
        {
            get
            {
                return (this.FaWiersz.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Dodatkowe rozliczenia na fakturze</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dodatkowe rozliczenia na fakturze")]
        [System.Xml.Serialization.XmlElementAttribute("Rozliczenie")]
        public FakturaFaRozliczenie Rozliczenie { get; set; }
        
        /// <summary>
        /// <para>Warunki płatności</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Warunki płatności")]
        [System.Xml.Serialization.XmlElementAttribute("Platnosc")]
        public FakturaFaPlatnosc Platnosc { get; set; }
        
        /// <summary>
        /// <para>Warunki transakcji, o ile występują</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Warunki transakcji, o ile występują")]
        [System.Xml.Serialization.XmlElementAttribute("WarunkiTransakcji")]
        public FakturaFaWarunkiTransakcji WarunkiTransakcji { get; set; }
        
        /// <summary>
        /// <para>Zamówienie lub umowa, o których mowa w art. 106f ust. 1 pkt 4 ustawy (dla faktur zaliczkowych) w walucie, w której wystawiono fakturę zaliczkową. W przypadku faktury korygującej fakturę zaliczkową należy wykazać różnice wynikające z korekty poszczególnych pozycji zamówienia lub umowy lub dane pozycji korygowanych w stanie przed korektą i po korekcie jako osobne wiersze, jeśli korekta dotyczy wartości zamówienia lub umowy. W przypadku faktur korygujących faktury zaliczkowe, jeśli korekta nie dotyczy wartości zamówienia lub umowy i jednocześnie zmienia wysokość podstawy opodatkowania lub podatku, należy wprowadzić zapis wg stanu przed korektą i zapis w stanie po korekcie w celu potwierdzenia braku zmiany wartości danej pozycji</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Zamówienie lub umowa, o których mowa w art. 106f ust. 1 pkt 4 ustawy (dla faktur zaliczkowych) w walucie, w której wystawiono fakturę zaliczkową. W przypadku faktury korygującej fakturę zaliczkową należy wykazać różnice wynikające z korekty poszczególnych pozycji zamówienia lub umowy lub dane pozycji korygowanych w stanie przed korektą i po korekcie jako osobne wiersze, jeśli korekta dotyczy wartości zamówienia lub umowy. W przypadku faktur korygujących faktury zaliczkowe, jeśli korekta nie dotyczy wartości zamówienia lub umowy i jednocześnie zmienia wysokość podstawy opodatkowania lub podatku, należy wprowadzić zapis wg stanu przed korektą i zapis w stanie po korekcie w celu potwierdzenia braku zmiany wartości danej pozycji")]
        [System.Xml.Serialization.XmlElementAttribute("Zamowienie")]
        public FakturaFaZamowienie Zamowienie { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaOkresFa", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaOkresFa
    {
        
        /// <summary>
        /// <para>Data początkowa okresu, którego dotyczy faktura</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data początkowa okresu, którego dotyczy faktura")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_6_Od", DataType="date")]
        public System.DateTime P_6_Od { get; set; }
        
        /// <summary>
        /// <para>Data końcowa okresu, którego dotyczy faktura - data dokonania lub zakończenia dostawy towarów lub wykonania usługi</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data końcowa okresu, którego dotyczy faktura - data dokonania lub zakończenia dos" +
            "tawy towarów lub wykonania usługi")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_6_Do", DataType="date")]
        public System.DateTime P_6_Do { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaAdnotacje", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaAdnotacje
    {
        
        /// <summary>
        /// <para>W przypadku dostawy towarów lub świadczenia usług, w odniesieniu do których obowiązek podatkowy powstaje zgodnie z art. 19a ust. 5 pkt 1 lub art. 21 ust. 1 ustawy - wyrazy "metoda kasowa", należy podać wartość "1"; w przeciwnym przypadku - wartość "2"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("W przypadku dostawy towarów lub świadczenia usług, w odniesieniu do których obowi" +
            "ązek podatkowy powstaje zgodnie z art. 19a ust. 5 pkt 1 lub art. 21 ust. 1 ustaw" +
            "y - wyrazy \"metoda kasowa\", należy podać wartość \"1\"; w przeciwnym przypadku - w" +
            "artość \"2\"")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_16")]
        public ProFak.IO.FA_2.TWybor1_2 P_16 { get; set; }
        
        /// <summary>
        /// <para>W przypadku faktur, o których mowa w art. 106d ust. 1 ustawy - wyraz "samofakturowanie", należy podać wartość "1"; w przeciwnym przypadku - wartość "2"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("W przypadku faktur, o których mowa w art. 106d ust. 1 ustawy - wyraz \"samofakturo" +
            "wanie\", należy podać wartość \"1\"; w przeciwnym przypadku - wartość \"2\"")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_17")]
        public ProFak.IO.FA_2.TWybor1_2 P_17 { get; set; }
        
        /// <summary>
        /// <para>W przypadku dostawy towarów lub wykonania usługi, dla których obowiązanym do rozliczenia podatku od wartości dodanej lub podatku o podobnym charakterze jest nabywca towaru lub usługi - wyrazy "odwrotne obciążenie", należy podać wartość "1", w przeciwnym przypadku - wartość "2"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku dostawy towarów lub wykonania usługi, dla których obowiązanym do rozliczenia podatku od wartości dodanej lub podatku o podobnym charakterze jest nabywca towaru lub usługi - wyrazy ""odwrotne obciążenie"", należy podać wartość ""1"", w przeciwnym przypadku - wartość ""2""")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_18")]
        public ProFak.IO.FA_2.TWybor1_2 P_18 { get; set; }
        
        /// <summary>
        /// <para>W przypadku faktur, w których kwota należności ogółem przekracza kwotę 15 000 zł lub jej równowartość wyrażoną w walucie obcej, obejmujących
        ///dokonaną na rzecz podatnika dostawę towarów lub świadczenie usług, o których mowa w załączniku nr 15 do ustawy - wyrazy "mechanizm podzielonej płatności", przy czym do przeliczania na złote kwot wyrażonych w walucie obcej stosuje się zasady przeliczania kwot stosowane w celu określenia podstawy opodatkowania; należy podać wartość "1", w przeciwnym przypadku - wartość "2"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku faktur, w których kwota należności ogółem przekracza kwotę 15 000 zł lub jej równowartość wyrażoną w walucie obcej, obejmujących dokonaną na rzecz podatnika dostawę towarów lub świadczenie usług, o których mowa w załączniku nr 15 do ustawy - wyrazy ""mechanizm podzielonej płatności"", przy czym do przeliczania na złote kwot wyrażonych w walucie obcej stosuje się zasady przeliczania kwot stosowane w celu określenia podstawy opodatkowania; należy podać wartość ""1"", w przeciwnym przypadku - wartość ""2""")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_18A")]
        public ProFak.IO.FA_2.TWybor1_2 P_18A { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Zwolnienie")]
        public FakturaFaAdnotacjeZwolnienie Zwolnienie { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NoweSrodkiTransportu")]
        public FakturaFaAdnotacjeNoweSrodkiTransportu NoweSrodkiTransportu { get; set; }
        
        /// <summary>
        /// <para>W przypadku faktur wystawianych w procedurze uproszczonej przez drugiego w kolejności podatnika, o którym mowa w art. 135 ust. 1 pkt 4 lit. b i c oraz ust. 2, zawierającej adnotację, o której mowa w art. 136 ust. 1 pkt 1 i stwierdzenie, o którym mowa w art. 136 ust. 1 pkt 2 ustawy, należy podać wartość "1", w przeciwnym przypadku - wartość "2"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"W przypadku faktur wystawianych w procedurze uproszczonej przez drugiego w kolejności podatnika, o którym mowa w art. 135 ust. 1 pkt 4 lit. b i c oraz ust. 2, zawierającej adnotację, o której mowa w art. 136 ust. 1 pkt 1 i stwierdzenie, o którym mowa w art. 136 ust. 1 pkt 2 ustawy, należy podać wartość ""1"", w przeciwnym przypadku - wartość ""2""")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_23")]
        public ProFak.IO.FA_2.TWybor1_2 P_23 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("PMarzy")]
        public FakturaFaAdnotacjePMarzy PMarzy { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaAdnotacjeZwolnienie", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaAdnotacjeZwolnienie
    {
        
        /// <summary>
        /// <para>Znacznik dostawy towarów lub świadczenia usług zwolnionych od podatku na podstawie art. 43 ust. 1, art. 113 ust. 1 i 9 albo przepisów wydanych na podstawie art. 82 ust. 3 ustawy lub na podstawie innych przepisów</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik dostawy towarów lub świadczenia usług zwolnionych od podatku na podstawi" +
            "e art. 43 ust. 1, art. 113 ust. 1 i 9 albo przepisów wydanych na podstawie art. " +
            "82 ust. 3 ustawy lub na podstawie innych przepisów")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_19")]
        public ProFak.IO.FA_2.TWybor1 P_19Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_19 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_19ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik dostawy towarów lub świadczenia usług zwolnionych od podatku na podstawie art. 43 ust. 1, art. 113 ust. 1 i 9 albo przepisów wydanych na podstawie art. 82 ust. 3 ustawy lub na podstawie innych przepisów</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_19
        {
            get
            {
                if (this.P_19ValueSpecified)
                {
                    return this.P_19Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_19Value = value.GetValueOrDefault();
                this.P_19ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Jeśli pole P_19 równa się "1" - należy wskazać przepis ustawy albo aktu wydanego na podstawie ustawy, na podstawie którego podatnik stosuje zwolnienie od podatku</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli pole P_19 równa się \"1\" - należy wskazać przepis ustawy albo aktu wydanego " +
            "na podstawie ustawy, na podstawie którego podatnik stosuje zwolnienie od podatku" +
            "")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_19A")]
        public string P_19A { get; set; }
        
        /// <summary>
        /// <para>Jeśli pole P_19 równa się "1" - należy wskazać przepis dyrektywy 2006/112/WE, który zwalnia od podatku taką dostawę towarów lub takie świadczenie usług</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli pole P_19 równa się \"1\" - należy wskazać przepis dyrektywy 2006/112/WE, któ" +
            "ry zwalnia od podatku taką dostawę towarów lub takie świadczenie usług")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_19B")]
        public string P_19B { get; set; }
        
        /// <summary>
        /// <para>Jeśli pole P_19 równa się "1" - należy wskazać inną podstawę prawną wskazującą na to, że dostawa towarów lub świadczenie usług korzysta ze zwolnienia od podatku</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli pole P_19 równa się \"1\" - należy wskazać inną podstawę prawną wskazującą na" +
            " to, że dostawa towarów lub świadczenie usług korzysta ze zwolnienia od podatku")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_19C")]
        public string P_19C { get; set; }
        
        /// <summary>
        /// <para>Znacznik braku dostawy towarów lub świadczenia usług zwolnionych od podatku na podstawie art. 43 ust. 1, art. 113 ust. 1 i 9 ustawy albo przepisów wydanych na podstawie art. 82 ust. 3 ustawy lub na podstawie innych przepisów</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik braku dostawy towarów lub świadczenia usług zwolnionych od podatku na po" +
            "dstawie art. 43 ust. 1, art. 113 ust. 1 i 9 ustawy albo przepisów wydanych na po" +
            "dstawie art. 82 ust. 3 ustawy lub na podstawie innych przepisów")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_19N")]
        public ProFak.IO.FA_2.TWybor1 P_19NValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_19N property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_19NValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik braku dostawy towarów lub świadczenia usług zwolnionych od podatku na podstawie art. 43 ust. 1, art. 113 ust. 1 i 9 ustawy albo przepisów wydanych na podstawie art. 82 ust. 3 ustawy lub na podstawie innych przepisów</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_19N
        {
            get
            {
                if (this.P_19NValueSpecified)
                {
                    return this.P_19NValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_19NValue = value.GetValueOrDefault();
                this.P_19NValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaAdnotacjeNoweSrodkiTransportu", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaAdnotacjeNoweSrodkiTransportu
    {
        
        /// <summary>
        /// <para>Znacznik wewnątrzwspólnotowej dostawy nowych środków transportu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik wewnątrzwspólnotowej dostawy nowych środków transportu")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_22")]
        public ProFak.IO.FA_2.TWybor1 P_22Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_22 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_22ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik wewnątrzwspólnotowej dostawy nowych środków transportu</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_22
        {
            get
            {
                if (this.P_22ValueSpecified)
                {
                    return this.P_22Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_22Value = value.GetValueOrDefault();
                this.P_22ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Jeśli występuje obowiązek, o którym mowa w art. 42 ust. 5 ustawy, należy podać wartość "1", w przeciwnym przypadku - wartość "2"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli występuje obowiązek, o którym mowa w art. 42 ust. 5 ustawy, należy podać wa" +
            "rtość \"1\", w przeciwnym przypadku - wartość \"2\"")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_42_5")]
        public ProFak.IO.FA_2.TWybor1_2 P_42_5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_42_5 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_42_5ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Jeśli występuje obowiązek, o którym mowa w art. 42 ust. 5 ustawy, należy podać wartość "1", w przeciwnym przypadku - wartość "2"</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1_2> P_42_5
        {
            get
            {
                if (this.P_42_5ValueSpecified)
                {
                    return this.P_42_5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_42_5Value = value.GetValueOrDefault();
                this.P_42_5ValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaAdnotacjeNoweSrodkiTransportuNowySrodekTransportu> _nowySrodekTransportu;
        
        [System.Xml.Serialization.XmlElementAttribute("NowySrodekTransportu")]
        public System.Collections.ObjectModel.Collection<FakturaFaAdnotacjeNoweSrodkiTransportuNowySrodekTransportu> NowySrodekTransportu
        {
            get
            {
                return _nowySrodekTransportu;
            }
            private set
            {
                _nowySrodekTransportu = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NowySrodekTransportu collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NowySrodekTransportuSpecified
        {
            get
            {
                return (this.NowySrodekTransportu.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaFaAdnotacjeNoweSrodkiTransportu" /> class.</para>
        /// </summary>
        public FakturaFaAdnotacjeNoweSrodkiTransportu()
        {
            this._nowySrodekTransportu = new System.Collections.ObjectModel.Collection<FakturaFaAdnotacjeNoweSrodkiTransportuNowySrodekTransportu>();
        }
        
        /// <summary>
        /// <para>Znacznik braku wewnątrzwspólnotowej dostawy nowych środków transportu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik braku wewnątrzwspólnotowej dostawy nowych środków transportu")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_22N")]
        public ProFak.IO.FA_2.TWybor1 P_22NValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_22N property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_22NValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik braku wewnątrzwspólnotowej dostawy nowych środków transportu</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_22N
        {
            get
            {
                if (this.P_22NValueSpecified)
                {
                    return this.P_22NValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_22NValue = value.GetValueOrDefault();
                this.P_22NValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaAdnotacjeNoweSrodkiTransportuNowySrodekTransportu", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaAdnotacjeNoweSrodkiTransportuNowySrodekTransportu
    {
        
        /// <summary>
        /// <para>Data dopuszczenia nowego środka transportu do użytku</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data dopuszczenia nowego środka transportu do użytku")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_22A", DataType="date")]
        public System.DateTime P_22A { get; set; }
        
        /// <summary>
        /// <para>Numer wiersza faktury, w którym wykazano dostawę nowego środka transportu</para>
        /// <para>Liczby naturalne większe od zera</para>
        /// <para xml:lang="en">Total number of digits: 14.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer wiersza faktury, w którym wykazano dostawę nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_NrWierszaNST")]
        public ulong P_NrWierszaNST { get; set; }
        
        /// <summary>
        /// <para>Marka nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marka nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22BMK")]
        public string P_22BMK { get; set; }
        
        /// <summary>
        /// <para>Model nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Model nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22BMD")]
        public string P_22BMD { get; set; }
        
        /// <summary>
        /// <para>Kolor nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kolor nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22BK")]
        public string P_22BK { get; set; }
        
        /// <summary>
        /// <para>Numer rejestracyjny nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer rejestracyjny nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22BNR")]
        public string P_22BNR { get; set; }
        
        /// <summary>
        /// <para>Rok produkcji nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rok produkcji nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22BRP")]
        public string P_22BRP { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a ustawy - należy podać przebieg pojazdu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a us" +
            "tawy - należy podać przebieg pojazdu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22B")]
        public string P_22B { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a ustawy - można podać numer VIN</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a us" +
            "tawy - można podać numer VIN")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22B1")]
        public string P_22B1 { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a ustawy - można podać numer nadwozia</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a us" +
            "tawy - można podać numer nadwozia")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22B2")]
        public string P_22B2 { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a ustawy - można podać numer podwozia</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a us" +
            "tawy - można podać numer podwozia")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22B3")]
        public string P_22B3 { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a ustawy - można podać numer ramy</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a us" +
            "tawy - można podać numer ramy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22B4")]
        public string P_22B4 { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a ustawy - można podać typ nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy pojazdów lądowych, o których mowa w art. 2 pkt 10 lit. a us" +
            "tawy - można podać typ nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22BT")]
        public string P_22BT { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy jednostek pływających, o których mowa w art. 2 pkt 10 lit. b ustawy, należy podać liczbę godzin roboczych używania nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy jednostek pływających, o których mowa w art. 2 pkt 10 lit. " +
            "b ustawy, należy podać liczbę godzin roboczych używania nowego środka transportu" +
            "")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22C")]
        public string P_22C { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy jednostek pływających, o których mowa w art. 2 pkt 10 lit. b ustawy, można podać numer kadłuba nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy jednostek pływających, o których mowa w art. 2 pkt 10 lit. " +
            "b ustawy, można podać numer kadłuba nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22C1")]
        public string P_22C1 { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy statków powietrznych, o których mowa w art. 2 pkt 10 lit. c ustawy, należy podać liczbę godzin roboczych używania nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy statków powietrznych, o których mowa w art. 2 pkt 10 lit. c" +
            " ustawy, należy podać liczbę godzin roboczych używania nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22D")]
        public string P_22D { get; set; }
        
        /// <summary>
        /// <para>Jeśli dostawa dotyczy statków powietrznych, o których mowa w art. 2 pkt 10 lit. c ustawy, można podać numer fabryczny nowego środka transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeśli dostawa dotyczy statków powietrznych, o których mowa w art. 2 pkt 10 lit. c" +
            " ustawy, można podać numer fabryczny nowego środka transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_22D1")]
        public string P_22D1 { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaAdnotacjePMarzy", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaAdnotacjePMarzy
    {
        
        /// <summary>
        /// <para>Znacznik wystąpienia procedur marży, o których mowa w art. 119 lub art. 120 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik wystąpienia procedur marży, o których mowa w art. 119 lub art. 120 ustaw" +
            "y")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_PMarzy")]
        public ProFak.IO.FA_2.TWybor1 P_PMarzyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_PMarzy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_PMarzyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik wystąpienia procedur marży, o których mowa w art. 119 lub art. 120 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_PMarzy
        {
            get
            {
                if (this.P_PMarzyValueSpecified)
                {
                    return this.P_PMarzyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_PMarzyValue = value.GetValueOrDefault();
                this.P_PMarzyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik świadczenia usług turystyki, dla których podstawę opodatkowania stanowi marża, zgodnie z art. 119 ust. 1 ustawy, a faktura dokumentująca świadczenie zawiera wyrazy "procedura marży dla biur podróży"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik świadczenia usług turystyki, dla których podstawę opodatkowania stanowi " +
            "marża, zgodnie z art. 119 ust. 1 ustawy, a faktura dokumentująca świadczenie zaw" +
            "iera wyrazy \"procedura marży dla biur podróży\"")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_PMarzy_2")]
        public ProFak.IO.FA_2.TWybor1 P_PMarzy_2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_PMarzy_2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_PMarzy_2ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik świadczenia usług turystyki, dla których podstawę opodatkowania stanowi marża, zgodnie z art. 119 ust. 1 ustawy, a faktura dokumentująca świadczenie zawiera wyrazy "procedura marży dla biur podróży"</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_PMarzy_2
        {
            get
            {
                if (this.P_PMarzy_2ValueSpecified)
                {
                    return this.P_PMarzy_2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_PMarzy_2Value = value.GetValueOrDefault();
                this.P_PMarzy_2ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik dostawy towarów używanych dla których podstawę opodatkowania stanowi marża, zgodnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy "procedura marży - towary używane"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik dostawy towarów używanych dla których podstawę opodatkowania stanowi mar" +
            "ża, zgodnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy \"p" +
            "rocedura marży - towary używane\"")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_PMarzy_3_1")]
        public ProFak.IO.FA_2.TWybor1 P_PMarzy_3_1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_PMarzy_3_1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_PMarzy_3_1ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik dostawy towarów używanych dla których podstawę opodatkowania stanowi marża, zgodnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy "procedura marży - towary używane"</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_PMarzy_3_1
        {
            get
            {
                if (this.P_PMarzy_3_1ValueSpecified)
                {
                    return this.P_PMarzy_3_1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_PMarzy_3_1Value = value.GetValueOrDefault();
                this.P_PMarzy_3_1ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik dostawy dzieł sztuki dla których podstawę opodatkowania stanowi marża, zgodnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy "procedura marży - dzieła sztuki"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik dostawy dzieł sztuki dla których podstawę opodatkowania stanowi marża, z" +
            "godnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy \"proced" +
            "ura marży - dzieła sztuki\"")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_PMarzy_3_2")]
        public ProFak.IO.FA_2.TWybor1 P_PMarzy_3_2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_PMarzy_3_2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_PMarzy_3_2ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik dostawy dzieł sztuki dla których podstawę opodatkowania stanowi marża, zgodnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy "procedura marży - dzieła sztuki"</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_PMarzy_3_2
        {
            get
            {
                if (this.P_PMarzy_3_2ValueSpecified)
                {
                    return this.P_PMarzy_3_2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_PMarzy_3_2Value = value.GetValueOrDefault();
                this.P_PMarzy_3_2ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik dostawy przedmiotów kolekcjonerskich i antyków, dla których podstawę opodatkowania stanowi marża, zgodnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy "procedura marży - przedmioty kolekcjonerskie i antyki"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik dostawy przedmiotów kolekcjonerskich i antyków, dla których podstawę opo" +
            "datkowania stanowi marża, zgodnie z art. 120 ustawy, a faktura dokumentująca dos" +
            "tawę zawiera wyrazy \"procedura marży - przedmioty kolekcjonerskie i antyki\"")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_PMarzy_3_3")]
        public ProFak.IO.FA_2.TWybor1 P_PMarzy_3_3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_PMarzy_3_3 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_PMarzy_3_3ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik dostawy przedmiotów kolekcjonerskich i antyków, dla których podstawę opodatkowania stanowi marża, zgodnie z art. 120 ustawy, a faktura dokumentująca dostawę zawiera wyrazy "procedura marży - przedmioty kolekcjonerskie i antyki"</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_PMarzy_3_3
        {
            get
            {
                if (this.P_PMarzy_3_3ValueSpecified)
                {
                    return this.P_PMarzy_3_3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_PMarzy_3_3Value = value.GetValueOrDefault();
                this.P_PMarzy_3_3ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik braku wystąpienia procedur marży, o których mowa w art. 119 lub art. 120 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik braku wystąpienia procedur marży, o których mowa w art. 119 lub art. 120" +
            " ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_PMarzyN")]
        public ProFak.IO.FA_2.TWybor1 P_PMarzyNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_PMarzyN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_PMarzyNValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik braku wystąpienia procedur marży, o których mowa w art. 119 lub art. 120 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_PMarzyN
        {
            get
            {
                if (this.P_PMarzyNValueSpecified)
                {
                    return this.P_PMarzyNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_PMarzyNValue = value.GetValueOrDefault();
                this.P_PMarzyNValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaDaneFaKorygowanej", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaDaneFaKorygowanej
    {
        
        /// <summary>
        /// <para>Data wystawienia faktury korygowanej</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data wystawienia faktury korygowanej")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataWystFaKorygowanej", DataType="date")]
        public System.DateTime DataWystFaKorygowanej { get; set; }
        
        /// <summary>
        /// <para>Numer faktury korygowanej</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer faktury korygowanej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("NrFaKorygowanej")]
        public string NrFaKorygowanej { get; set; }
        
        /// <summary>
        /// <para>Znacznik numeru KSeF faktury korygowanej</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik numeru KSeF faktury korygowanej")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("NrKSeF")]
        public ProFak.IO.FA_2.TWybor1 NrKSeFValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrKSeF property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NrKSeFValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik numeru KSeF faktury korygowanej</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> NrKSeF
        {
            get
            {
                if (this.NrKSeFValueSpecified)
                {
                    return this.NrKSeFValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrKSeFValue = value.GetValueOrDefault();
                this.NrKSeFValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer identyfikujący fakturę korygowaną w KSeF</para>
        /// <para>Numer identyfikujący fakturę w Krajowym Systemie e-Faktur (KSeF)</para>
        /// <para xml:lang="en">Pattern: ([1-9]((\d[1-9])|([1-9]\d))\d{7}|M\d{9}|[A-Z]{3}\d{7})-(20[2-9][0-9]|2[1-9][0-9]{2}|[3-9][0-9]{3})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])-([0-9A-F]{6})-?([0-9A-F]{6})-([0-9A-F]{2}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer identyfikujący fakturę korygowaną w KSeF")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9]((\\d[1-9])|([1-9]\\d))\\d{7}|M\\d{9}|[A-Z]{3}\\d{7})-(20[2-9][0-9]|2[1-9][0-9]{" +
            "2}|[3-9][0-9]{3})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])-([0-9A-F]{6})-?([0-9A" +
            "-F]{6})-([0-9A-F]{2})")]
        [System.Xml.Serialization.XmlElementAttribute("NrKSeFFaKorygowanej")]
        public string NrKSeFFaKorygowanej { get; set; }
        
        /// <summary>
        /// <para>Znacznik faktury korygowanej wystawionej poza KSeF</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik faktury korygowanej wystawionej poza KSeF")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("NrKSeFN")]
        public ProFak.IO.FA_2.TWybor1 NrKSeFNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrKSeFN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NrKSeFNValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik faktury korygowanej wystawionej poza KSeF</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> NrKSeFN
        {
            get
            {
                if (this.NrKSeFNValueSpecified)
                {
                    return this.NrKSeFNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrKSeFNValue = value.GetValueOrDefault();
                this.NrKSeFNValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaPodmiot1K", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaPodmiot1K
    {
        
        /// <summary>
        /// <para>Kod (prefiks) podatnika VAT UE dla przypadków określonych w art. 97 ust. 10 pkt 2 i 3 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kod (prefiks) podatnika VAT UE dla przypadków określonych w art. 97 ust. 10 pkt 2" +
            " i 3 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 3 ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PrefiksPodatnika")]
        public TKodyKrajowUE PrefiksPodatnikaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrefiksPodatnika property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PrefiksPodatnikaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kod (prefiks) podatnika VAT UE dla przypadków określonych w art. 97 ust. 10 pkt 2 i 3 ustawy oraz w przypadku, o którym mowa w art. 136 ust. 1 pkt 3 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TKodyKrajowUE> PrefiksPodatnika
        {
            get
            {
                if (this.PrefiksPodatnikaValueSpecified)
                {
                    return this.PrefiksPodatnikaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrefiksPodatnikaValue = value.GetValueOrDefault();
                this.PrefiksPodatnikaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Dane identyfikujące podatnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane identyfikujące podatnika")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DaneIdentyfikacyjne")]
        public TPodmiot1 DaneIdentyfikacyjne { get; set; }
        
        /// <summary>
        /// <para>Adres podatnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres podatnika")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Adres")]
        public TAdres Adres { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaPodmiot2K", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaPodmiot2K
    {
        
        /// <summary>
        /// <para>Dane identyfikujące nabywcę</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane identyfikujące nabywcę")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DaneIdentyfikacyjne")]
        public TPodmiot2 DaneIdentyfikacyjne { get; set; }
        
        /// <summary>
        /// <para>Adres nabywcy. Pola opcjonalne dla przypadków określonych w art. 106e ust. 5 pkt 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres nabywcy. Pola opcjonalne dla przypadków określonych w art. 106e ust. 5 pkt " +
            "3 ustawy")]
        [System.Xml.Serialization.XmlElementAttribute("Adres")]
        public TAdres Adres { get; set; }
        
        /// <summary>
        /// <para>Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku gdy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fakturze korygowanej</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku g" +
            "dy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fak" +
            "turze korygowanej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlElementAttribute("IDNabywcy")]
        public string IDNabywcy { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaZaliczkaCzesciowa", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaZaliczkaCzesciowa
    {
        
        /// <summary>
        /// <para>Data otrzymania płatności, o której mowa w art. 106b ust. 1 pkt 4 ustawy</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data otrzymania płatności, o której mowa w art. 106b ust. 1 pkt 4 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_6Z", DataType="date")]
        public System.DateTime P_6Z { get; set; }
        
        /// <summary>
        /// <para>Kwota płatności, o której mowa w art. 106b ust. 1 pkt 4 ustawy, składająca się na kwotę w polu P_15. W przypadku faktur korygujących korekta kwoty wynikającej z faktury korygowanej</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota płatności, o której mowa w art. 106b ust. 1 pkt 4 ustawy, składająca się na" +
            " kwotę w polu P_15. W przypadku faktur korygujących korekta kwoty wynikającej z " +
            "faktury korygowanej")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("P_15Z")]
        public decimal P_15Z { get; set; }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w Dziale VI ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w" +
            " Dziale VI ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,6})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KursWalutyZW")]
        public decimal KursWalutyZWValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KursWalutyZW property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KursWalutyZWValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w Dziale VI ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> KursWalutyZW
        {
            get
            {
                if (this.KursWalutyZWValueSpecified)
                {
                    return this.KursWalutyZWValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KursWalutyZWValue = value.GetValueOrDefault();
                this.KursWalutyZWValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaFakturaZaliczkowa", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaFakturaZaliczkowa
    {
        
        /// <summary>
        /// <para>Znacznik faktury zaliczkowej wystawionej poza KSeF</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik faktury zaliczkowej wystawionej poza KSeF")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("NrKSeFZN")]
        public ProFak.IO.FA_2.TWybor1 NrKSeFZNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrKSeFZN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NrKSeFZNValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik faktury zaliczkowej wystawionej poza KSeF</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> NrKSeFZN
        {
            get
            {
                if (this.NrKSeFZNValueSpecified)
                {
                    return this.NrKSeFZNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrKSeFZNValue = value.GetValueOrDefault();
                this.NrKSeFZNValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer faktury zaliczkowej wystawionej poza KSeF. Pole obowiązkowe dla faktury wystawianej po wydaniu towaru lub wykonaniu usługi, o której mowa w art. 106f ust. 3 ustawy i ostatniej z faktur, o której mowa w art. 106f ust. 4 ustawy</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer faktury zaliczkowej wystawionej poza KSeF. Pole obowiązkowe dla faktury wys" +
            "tawianej po wydaniu towaru lub wykonaniu usługi, o której mowa w art. 106f ust. " +
            "3 ustawy i ostatniej z faktur, o której mowa w art. 106f ust. 4 ustawy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrFaZaliczkowej")]
        public string NrFaZaliczkowej { get; set; }
        
        /// <summary>
        /// <para>Numer identyfikujący fakturę zaliczkową w KSeF. Pole obowiązkowe w przypadku, gdy faktura zaliczkowa była wystawiona za pomocą KSeF</para>
        /// <para>Numer identyfikujący fakturę w Krajowym Systemie e-Faktur (KSeF)</para>
        /// <para xml:lang="en">Pattern: ([1-9]((\d[1-9])|([1-9]\d))\d{7}|M\d{9}|[A-Z]{3}\d{7})-(20[2-9][0-9]|2[1-9][0-9]{2}|[3-9][0-9]{3})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])-([0-9A-F]{6})-?([0-9A-F]{6})-([0-9A-F]{2}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer identyfikujący fakturę zaliczkową w KSeF. Pole obowiązkowe w przypadku, gdy" +
            " faktura zaliczkowa była wystawiona za pomocą KSeF")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9]((\\d[1-9])|([1-9]\\d))\\d{7}|M\\d{9}|[A-Z]{3}\\d{7})-(20[2-9][0-9]|2[1-9][0-9]{" +
            "2}|[3-9][0-9]{3})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])-([0-9A-F]{6})-?([0-9A" +
            "-F]{6})-([0-9A-F]{2})")]
        [System.Xml.Serialization.XmlElementAttribute("NrKSeFFaZaliczkowej")]
        public string NrKSeFFaZaliczkowej { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaFaWiersz", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaFaWiersz
    {
        
        /// <summary>
        /// <para>Kolejny numer wiersza faktury</para>
        /// <para>Liczby naturalne większe od zera</para>
        /// <para xml:lang="en">Total number of digits: 14.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kolejny numer wiersza faktury")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NrWierszaFa")]
        public ulong NrWierszaFa { get; set; }
        
        /// <summary>
        /// <para>Uniwersalny unikalny numer wiersza faktury</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uniwersalny unikalny numer wiersza faktury")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("UU_ID")]
        public string UU_ID { get; set; }
        
        /// <summary>
        /// <para>Data dokonania lub zakończenia dostawy towarów lub wykonania usługi lub data otrzymania zapłaty, o której mowa w art. 106b ust. 1 pkt 4 ustawy, o ile taka data jest określona i różni się od daty wystawienia faktury. Pole wypełnia się dla przypadku, gdy dla poszczególnych pozycji faktury występują różne daty</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Data dokonania lub zakończenia dostawy towarów lub wykonania usługi lub data otrzymania zapłaty, o której mowa w art. 106b ust. 1 pkt 4 ustawy, o ile taka data jest określona i różni się od daty wystawienia faktury. Pole wypełnia się dla przypadku, gdy dla poszczególnych pozycji faktury występują różne daty")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2006-01-01", "2050-01-01")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_6A", DataType="date")]
        public System.DateTime P_6AValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_6A property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_6AValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Data dokonania lub zakończenia dostawy towarów lub wykonania usługi lub data otrzymania zapłaty, o której mowa w art. 106b ust. 1 pkt 4 ustawy, o ile taka data jest określona i różni się od daty wystawienia faktury. Pole wypełnia się dla przypadku, gdy dla poszczególnych pozycji faktury występują różne daty</para>
        /// <para>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2006-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> P_6A
        {
            get
            {
                if (this.P_6AValueSpecified)
                {
                    return this.P_6AValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_6AValue = value.GetValueOrDefault();
                this.P_6AValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Nazwa (rodzaj) towaru lub usługi. Pole opcjonalne wyłącznie dla przypadku określonego w art 106j ust. 3 pkt 2 ustawy (faktura korygująca)</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa (rodzaj) towaru lub usługi. Pole opcjonalne wyłącznie dla przypadku określo" +
            "nego w art 106j ust. 3 pkt 2 ustawy (faktura korygująca)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_7")]
        public string P_7 { get; set; }
        
        /// <summary>
        /// <para>Pole przeznaczone do wpisania wewnętrznego kodu towaru lub usługi nadanego przez podatnika albo dodatkowego opisu</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pole przeznaczone do wpisania wewnętrznego kodu towaru lub usługi nadanego przez " +
            "podatnika albo dodatkowego opisu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("Indeks")]
        public string Indeks { get; set; }
        
        /// <summary>
        /// <para>Globalny numer jednostki handlowej</para>
        /// <para>Typ znakowy ograniczony do 20 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Globalny numer jednostki handlowej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("GTIN")]
        public string GTIN { get; set; }
        
        /// <summary>
        /// <para>Symbol Polskiej Klasyfikacji Wyrobów i Usług</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Symbol Polskiej Klasyfikacji Wyrobów i Usług")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("PKWiU")]
        public string PKWiU { get; set; }
        
        /// <summary>
        /// <para>Symbol Nomenklatury Scalonej</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Symbol Nomenklatury Scalonej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("CN")]
        public string CN { get; set; }
        
        /// <summary>
        /// <para>Symbol Polskiej Klasyfikacji Obiektów Budowlanych</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Symbol Polskiej Klasyfikacji Obiektów Budowlanych")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("PKOB")]
        public string PKOB { get; set; }
        
        /// <summary>
        /// <para>Miara dostarczonych towarów lub zakres wykonanych usług. Pole opcjonalne dla przypadku określonego w art. 106e ust. 5 pkt 3 ustawy</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miara dostarczonych towarów lub zakres wykonanych usług. Pole opcjonalne dla przy" +
            "padku określonego w art. 106e ust. 5 pkt 3 ustawy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_8A")]
        public string P_8A { get; set; }
        
        /// <summary>
        /// <para>Ilość (liczba) dostarczonych towarów lub zakres wykonanych usług. Pole opcjonalne dla przypadku określonego w art. 106e ust. 5 pkt 3 ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ilość (liczba) dostarczonych towarów lub zakres wykonanych usług. Pole opcjonalne" +
            " dla przypadku określonego w art. 106e ust. 5 pkt 3 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,6})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_8B")]
        public decimal P_8BValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_8B property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_8BValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Ilość (liczba) dostarczonych towarów lub zakres wykonanych usług. Pole opcjonalne dla przypadku określonego w art. 106e ust. 5 pkt 3 ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_8B
        {
            get
            {
                if (this.P_8BValueSpecified)
                {
                    return this.P_8BValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_8BValue = value.GetValueOrDefault();
                this.P_8BValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Cena jednostkowa towaru lub usługi bez kwoty podatku (cena jednostkowa netto). Pole opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt 3 ustawy</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cena jednostkowa towaru lub usługi bez kwoty podatku (cena jednostkowa netto). Po" +
            "le opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt " +
            "3 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,13}|0)(\\.\\d{1,8})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_9A")]
        public decimal P_9AValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_9A property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_9AValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Cena jednostkowa towaru lub usługi bez kwoty podatku (cena jednostkowa netto). Pole opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt 3 ustawy</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_9A
        {
            get
            {
                if (this.P_9AValueSpecified)
                {
                    return this.P_9AValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_9AValue = value.GetValueOrDefault();
                this.P_9AValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Cena wraz z kwotą podatku (cena jednostkowa brutto), w przypadku zastosowania art. 106e ust. 7 i 8 ustawy</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cena wraz z kwotą podatku (cena jednostkowa brutto), w przypadku zastosowania art" +
            ". 106e ust. 7 i 8 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,13}|0)(\\.\\d{1,8})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_9B")]
        public decimal P_9BValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_9B property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_9BValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Cena wraz z kwotą podatku (cena jednostkowa brutto), w przypadku zastosowania art. 106e ust. 7 i 8 ustawy</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_9B
        {
            get
            {
                if (this.P_9BValueSpecified)
                {
                    return this.P_9BValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_9BValue = value.GetValueOrDefault();
                this.P_9BValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwoty wszelkich opustów lub obniżek cen, w tym w formie rabatu z tytułu wcześniejszej zapłaty, o ile nie zostały one uwzględnione w cenie jednostkowej netto, a w przypadku stosowania art. 106e ust. 7 ustawy w cenie jednostkowej brutto. Pole opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt 1 ustawy</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Kwoty wszelkich opustów lub obniżek cen, w tym w formie rabatu z tytułu wcześniejszej zapłaty, o ile nie zostały one uwzględnione w cenie jednostkowej netto, a w przypadku stosowania art. 106e ust. 7 ustawy w cenie jednostkowej brutto. Pole opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt 1 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,13}|0)(\\.\\d{1,8})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_10")]
        public decimal P_10Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_10 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_10ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwoty wszelkich opustów lub obniżek cen, w tym w formie rabatu z tytułu wcześniejszej zapłaty, o ile nie zostały one uwzględnione w cenie jednostkowej netto, a w przypadku stosowania art. 106e ust. 7 ustawy w cenie jednostkowej brutto. Pole opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt 1 ustawy</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_10
        {
            get
            {
                if (this.P_10ValueSpecified)
                {
                    return this.P_10Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_10Value = value.GetValueOrDefault();
                this.P_10ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Wartość dostarczonych towarów lub wykonanych usług, objętych transakcją, bez kwoty podatku (wartość sprzedaży netto). Pole opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt 3 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wartość dostarczonych towarów lub wykonanych usług, objętych transakcją, bez kwot" +
            "y podatku (wartość sprzedaży netto). Pole opcjonalne dla przypadków określonych " +
            "w art. 106e ust. 2 i 3 oraz ust. 5 pkt 3 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_11")]
        public decimal P_11Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_11 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_11ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Wartość dostarczonych towarów lub wykonanych usług, objętych transakcją, bez kwoty podatku (wartość sprzedaży netto). Pole opcjonalne dla przypadków określonych w art. 106e ust. 2 i 3 oraz ust. 5 pkt 3 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_11
        {
            get
            {
                if (this.P_11ValueSpecified)
                {
                    return this.P_11Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_11Value = value.GetValueOrDefault();
                this.P_11ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Wartość sprzedaży brutto, w przypadku zastosowania art. 106e ust. 7 i 8 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wartość sprzedaży brutto, w przypadku zastosowania art. 106e ust. 7 i 8 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_11A")]
        public decimal P_11AValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_11A property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_11AValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Wartość sprzedaży brutto, w przypadku zastosowania art. 106e ust. 7 i 8 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_11A
        {
            get
            {
                if (this.P_11AValueSpecified)
                {
                    return this.P_11AValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_11AValue = value.GetValueOrDefault();
                this.P_11AValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku w przypadku, o którym mowa w art. 106e ust. 10 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota podatku w przypadku, o którym mowa w art. 106e ust. 10 ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_11Vat")]
        public decimal P_11VatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_11Vat property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_11VatValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku w przypadku, o którym mowa w art. 106e ust. 10 ustawy</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_11Vat
        {
            get
            {
                if (this.P_11VatValueSpecified)
                {
                    return this.P_11VatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_11VatValue = value.GetValueOrDefault();
                this.P_11VatValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Stawka podatku. Pole opcjonalne dla przypadków określonych w art. 106e ust. 2, 3, ust. 4 pkt 3 i ust. 5 pkt 3 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stawka podatku. Pole opcjonalne dla przypadków określonych w art. 106e ust. 2, 3," +
            " ust. 4 pkt 3 i ust. 5 pkt 3 ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_12")]
        public TStawkaPodatku P_12Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_12 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_12ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Stawka podatku. Pole opcjonalne dla przypadków określonych w art. 106e ust. 2, 3, ust. 4 pkt 3 i ust. 5 pkt 3 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TStawkaPodatku> P_12
        {
            get
            {
                if (this.P_12ValueSpecified)
                {
                    return this.P_12Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_12Value = value.GetValueOrDefault();
                this.P_12ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Stawka podatku od wartości dodanej w przypadku, o którym mowa w dziale XII w rozdziale 6a ustawy</para>
        /// <para>Wartość procentowa z dokładnością do 6 miejsc po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 9.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stawka podatku od wartości dodanej w przypadku, o którym mowa w dziale XII w rozd" +
            "ziale 6a ustawy")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0", "100")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_12_XII")]
        public decimal P_12_XIIValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_12_XII property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_12_XIIValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Stawka podatku od wartości dodanej w przypadku, o którym mowa w dziale XII w rozdziale 6a ustawy</para>
        /// <para>Wartość procentowa z dokładnością do 6 miejsc po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 9.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_12_XII
        {
            get
            {
                if (this.P_12_XIIValueSpecified)
                {
                    return this.P_12_XIIValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_12_XIIValue = value.GetValueOrDefault();
                this.P_12_XIIValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik dla towaru lub usługi wymienionych w załączniku nr 15 do ustawy - wartość "1"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik dla towaru lub usługi wymienionych w załączniku nr 15 do ustawy - wartoś" +
            "ć \"1\"")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_12_Zal_15")]
        public ProFak.IO.FA_2.TWybor1 P_12_Zal_15Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_12_Zal_15 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_12_Zal_15ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik dla towaru lub usługi wymienionych w załączniku nr 15 do ustawy - wartość "1"</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_12_Zal_15
        {
            get
            {
                if (this.P_12_Zal_15ValueSpecified)
                {
                    return this.P_12_Zal_15Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_12_Zal_15Value = value.GetValueOrDefault();
                this.P_12_Zal_15ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku akcyzowego zawarta w cenie towaru</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota podatku akcyzowego zawarta w cenie towaru")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KwotaAkcyzy")]
        public decimal KwotaAkcyzyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KwotaAkcyzy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KwotaAkcyzyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku akcyzowego zawarta w cenie towaru</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> KwotaAkcyzy
        {
            get
            {
                if (this.KwotaAkcyzyValueSpecified)
                {
                    return this.KwotaAkcyzyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KwotaAkcyzyValue = value.GetValueOrDefault();
                this.KwotaAkcyzyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Oznaczenie dotyczące dostawy towarów i świadczenia usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące dostawy towarów i świadczenia usług")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("GTU")]
        public TGTU GTUValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GTU property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GTUValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Oznaczenie dotyczące dostawy towarów i świadczenia usług</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TGTU> GTU
        {
            get
            {
                if (this.GTUValueSpecified)
                {
                    return this.GTUValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GTUValue = value.GetValueOrDefault();
                this.GTUValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące procedury")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Procedura")]
        public TOznaczenieProcedury ProceduraValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Procedura property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ProceduraValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Oznaczenie dotyczące procedury</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TOznaczenieProcedury> Procedura
        {
            get
            {
                if (this.ProceduraValueSpecified)
                {
                    return this.ProceduraValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProceduraValue = value.GetValueOrDefault();
                this.ProceduraValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w Dziale VI ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w" +
            " Dziale VI ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,6})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KursWaluty")]
        public decimal KursWalutyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KursWaluty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KursWalutyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kurs waluty stosowany do wyliczenia kwoty podatku w przypadkach, o których mowa w Dziale VI ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> KursWaluty
        {
            get
            {
                if (this.KursWalutyValueSpecified)
                {
                    return this.KursWalutyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KursWalutyValue = value.GetValueOrDefault();
                this.KursWalutyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik stanu przed korektą w przypadku faktury korygującej lub faktury korygującej fakturę wystawioną w związku z art. 106f ust. 3 ustawy, w przypadku gdy korekta dotyczy danych wykazanych w pozycjach faktury i jest dokonywana w sposób polegający na wykazaniu danych przed korektą i po korekcie jako osobnych wierszy z odrębną numeracją oraz w przypadku potwierdzania braku zmiany wartości danej pozycji</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Znacznik stanu przed korektą w przypadku faktury korygującej lub faktury korygującej fakturę wystawioną w związku z art. 106f ust. 3 ustawy, w przypadku gdy korekta dotyczy danych wykazanych w pozycjach faktury i jest dokonywana w sposób polegający na wykazaniu danych przed korektą i po korekcie jako osobnych wierszy z odrębną numeracją oraz w przypadku potwierdzania braku zmiany wartości danej pozycji")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("StanPrzed")]
        public ProFak.IO.FA_2.TWybor1 StanPrzedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StanPrzed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StanPrzedValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik stanu przed korektą w przypadku faktury korygującej lub faktury korygującej fakturę wystawioną w związku z art. 106f ust. 3 ustawy, w przypadku gdy korekta dotyczy danych wykazanych w pozycjach faktury i jest dokonywana w sposób polegający na wykazaniu danych przed korektą i po korekcie jako osobnych wierszy z odrębną numeracją oraz w przypadku potwierdzania braku zmiany wartości danej pozycji</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> StanPrzed
        {
            get
            {
                if (this.StanPrzedValueSpecified)
                {
                    return this.StanPrzedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StanPrzedValue = value.GetValueOrDefault();
                this.StanPrzedValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaRozliczenie", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaRozliczenie
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaRozliczenieObciazenia> _obciazenia;
        
        /// <summary>
        /// <para>Obciążenia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Obciążenia")]
        [System.Xml.Serialization.XmlElementAttribute("Obciazenia")]
        public System.Collections.ObjectModel.Collection<FakturaFaRozliczenieObciazenia> Obciazenia
        {
            get
            {
                return _obciazenia;
            }
            private set
            {
                _obciazenia = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Obciazenia collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ObciazeniaSpecified
        {
            get
            {
                return (this.Obciazenia.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaFaRozliczenie" /> class.</para>
        /// </summary>
        public FakturaFaRozliczenie()
        {
            this._obciazenia = new System.Collections.ObjectModel.Collection<FakturaFaRozliczenieObciazenia>();
            this._odliczenia = new System.Collections.ObjectModel.Collection<FakturaFaRozliczenieOdliczenia>();
        }
        
        /// <summary>
        /// <para>Suma obciążeń</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma obciążeń")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("SumaObciazen")]
        public decimal SumaObciazenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SumaObciazen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SumaObciazenValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma obciążeń</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> SumaObciazen
        {
            get
            {
                if (this.SumaObciazenValueSpecified)
                {
                    return this.SumaObciazenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SumaObciazenValue = value.GetValueOrDefault();
                this.SumaObciazenValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaRozliczenieOdliczenia> _odliczenia;
        
        /// <summary>
        /// <para>Odliczenia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Odliczenia")]
        [System.Xml.Serialization.XmlElementAttribute("Odliczenia")]
        public System.Collections.ObjectModel.Collection<FakturaFaRozliczenieOdliczenia> Odliczenia
        {
            get
            {
                return _odliczenia;
            }
            private set
            {
                _odliczenia = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Odliczenia collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OdliczeniaSpecified
        {
            get
            {
                return (this.Odliczenia.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Suma odliczeń</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suma odliczeń")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("SumaOdliczen")]
        public decimal SumaOdliczenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SumaOdliczen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SumaOdliczenValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Suma odliczeń</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> SumaOdliczen
        {
            get
            {
                if (this.SumaOdliczenValueSpecified)
                {
                    return this.SumaOdliczenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SumaOdliczenValue = value.GetValueOrDefault();
                this.SumaOdliczenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota należności do zapłaty równa polu P_15 powiększonemu o Obciazenia i pomniejszonemu o Odliczenia</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota należności do zapłaty równa polu P_15 powiększonemu o Obciazenia i pomniejs" +
            "zonemu o Odliczenia")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DoZaplaty")]
        public decimal DoZaplatyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DoZaplaty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DoZaplatyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota należności do zapłaty równa polu P_15 powiększonemu o Obciazenia i pomniejszonemu o Odliczenia</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> DoZaplaty
        {
            get
            {
                if (this.DoZaplatyValueSpecified)
                {
                    return this.DoZaplatyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DoZaplatyValue = value.GetValueOrDefault();
                this.DoZaplatyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota nadpłacona do rozliczenia/zwrotu</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota nadpłacona do rozliczenia/zwrotu")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DoRozliczenia")]
        public decimal DoRozliczeniaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DoRozliczenia property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DoRozliczeniaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota nadpłacona do rozliczenia/zwrotu</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> DoRozliczenia
        {
            get
            {
                if (this.DoRozliczeniaValueSpecified)
                {
                    return this.DoRozliczeniaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DoRozliczeniaValue = value.GetValueOrDefault();
                this.DoRozliczeniaValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaRozliczenieObciazenia", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaRozliczenieObciazenia
    {
        
        /// <summary>
        /// <para>Kwota doliczona do kwoty wykazanej w polu P_15</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota doliczona do kwoty wykazanej w polu P_15")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Kwota")]
        public decimal Kwota { get; set; }
        
        /// <summary>
        /// <para>Powód obciążenia</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Powód obciążenia")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Powod")]
        public string Powod { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaRozliczenieOdliczenia", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaRozliczenieOdliczenia
    {
        
        /// <summary>
        /// <para>Kwota odliczona od kwoty wykazanej w polu P_15</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota odliczona od kwoty wykazanej w polu P_15")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Kwota")]
        public decimal Kwota { get; set; }
        
        /// <summary>
        /// <para>Powód odliczenia</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Powód odliczenia")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("Powod")]
        public string Powod { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaPlatnosc", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaPlatnosc
    {
        
        /// <summary>
        /// <para>Znacznik informujący, że kwota należności wynikająca z faktury została zapłacona: 1 - zapłacono</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik informujący, że kwota należności wynikająca z faktury została zapłacona:" +
            " 1 - zapłacono")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Zaplacono")]
        public ProFak.IO.FA_2.TWybor1 ZaplaconoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Zaplacono property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ZaplaconoValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik informujący, że kwota należności wynikająca z faktury została zapłacona: 1 - zapłacono</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> Zaplacono
        {
            get
            {
                if (this.ZaplaconoValueSpecified)
                {
                    return this.ZaplaconoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZaplaconoValue = value.GetValueOrDefault();
                this.ZaplaconoValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Data zapłaty, jeśli do wystawienia faktury płatność została dokonana</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data zapłaty, jeśli do wystawienia faktury płatność została dokonana")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2016-07-01", "2050-01-01")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DataZaplaty", DataType="date")]
        public System.DateTime DataZaplatyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataZaplaty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataZaplatyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Data zapłaty, jeśli do wystawienia faktury płatność została dokonana</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DataZaplaty
        {
            get
            {
                if (this.DataZaplatyValueSpecified)
                {
                    return this.DataZaplatyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataZaplatyValue = value.GetValueOrDefault();
                this.DataZaplatyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik informujący, że kwota należności wynikająca z faktury została zapłacona w części: 1 - zapłacono w części</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik informujący, że kwota należności wynikająca z faktury została zapłacona " +
            "w części: 1 - zapłacono w części")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ZnacznikZaplatyCzesciowej")]
        public ProFak.IO.FA_2.TWybor1 ZnacznikZaplatyCzesciowejValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ZnacznikZaplatyCzesciowej property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ZnacznikZaplatyCzesciowejValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik informujący, że kwota należności wynikająca z faktury została zapłacona w części: 1 - zapłacono w części</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> ZnacznikZaplatyCzesciowej
        {
            get
            {
                if (this.ZnacznikZaplatyCzesciowejValueSpecified)
                {
                    return this.ZnacznikZaplatyCzesciowejValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZnacznikZaplatyCzesciowejValue = value.GetValueOrDefault();
                this.ZnacznikZaplatyCzesciowejValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaPlatnoscZaplataCzesciowa> _zaplataCzesciowa;
        
        /// <summary>
        /// <para>Dane zapłat częściowych</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane zapłat częściowych")]
        [System.Xml.Serialization.XmlElementAttribute("ZaplataCzesciowa")]
        public System.Collections.ObjectModel.Collection<FakturaFaPlatnoscZaplataCzesciowa> ZaplataCzesciowa
        {
            get
            {
                return _zaplataCzesciowa;
            }
            private set
            {
                _zaplataCzesciowa = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZaplataCzesciowa collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZaplataCzesciowaSpecified
        {
            get
            {
                return (this.ZaplataCzesciowa.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaFaPlatnosc" /> class.</para>
        /// </summary>
        public FakturaFaPlatnosc()
        {
            this._zaplataCzesciowa = new System.Collections.ObjectModel.Collection<FakturaFaPlatnoscZaplataCzesciowa>();
            this._terminPlatnosci = new System.Collections.ObjectModel.Collection<FakturaFaPlatnoscTerminPlatnosci>();
            this._rachunekBankowy = new System.Collections.ObjectModel.Collection<TRachunekBankowy>();
            this._rachunekBankowyFaktora = new System.Collections.ObjectModel.Collection<TRachunekBankowy>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaPlatnoscTerminPlatnosci> _terminPlatnosci;
        
        [System.Xml.Serialization.XmlElementAttribute("TerminPlatnosci")]
        public System.Collections.ObjectModel.Collection<FakturaFaPlatnoscTerminPlatnosci> TerminPlatnosci
        {
            get
            {
                return _terminPlatnosci;
            }
            private set
            {
                _terminPlatnosci = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TerminPlatnosci collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TerminPlatnosciSpecified
        {
            get
            {
                return (this.TerminPlatnosci.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Forma płatności</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forma płatności")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FormaPlatnosci")]
        public TFormaPlatnosci FormaPlatnosciValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FormaPlatnosci property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FormaPlatnosciValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Forma płatności</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TFormaPlatnosci> FormaPlatnosci
        {
            get
            {
                if (this.FormaPlatnosciValueSpecified)
                {
                    return this.FormaPlatnosciValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FormaPlatnosciValue = value.GetValueOrDefault();
                this.FormaPlatnosciValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik innej formy płatności: 1 - inna forma płatności</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik innej formy płatności: 1 - inna forma płatności")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PlatnoscInna")]
        public ProFak.IO.FA_2.TWybor1 PlatnoscInnaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlatnoscInna property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlatnoscInnaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik innej formy płatności: 1 - inna forma płatności</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> PlatnoscInna
        {
            get
            {
                if (this.PlatnoscInnaValueSpecified)
                {
                    return this.PlatnoscInnaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlatnoscInnaValue = value.GetValueOrDefault();
                this.PlatnoscInnaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Doprecyzowanie innej formy płatności</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Doprecyzowanie innej formy płatności")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("OpisPlatnosci")]
        public string OpisPlatnosci { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TRachunekBankowy> _rachunekBankowy;
        
        /// <summary>
        /// <para>Numer rachunku</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer rachunku")]
        [System.Xml.Serialization.XmlElementAttribute("RachunekBankowy")]
        public System.Collections.ObjectModel.Collection<TRachunekBankowy> RachunekBankowy
        {
            get
            {
                return _rachunekBankowy;
            }
            private set
            {
                _rachunekBankowy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RachunekBankowy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RachunekBankowySpecified
        {
            get
            {
                return (this.RachunekBankowy.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TRachunekBankowy> _rachunekBankowyFaktora;
        
        /// <summary>
        /// <para>Rachunek faktora</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rachunek faktora")]
        [System.Xml.Serialization.XmlElementAttribute("RachunekBankowyFaktora")]
        public System.Collections.ObjectModel.Collection<TRachunekBankowy> RachunekBankowyFaktora
        {
            get
            {
                return _rachunekBankowyFaktora;
            }
            private set
            {
                _rachunekBankowyFaktora = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RachunekBankowyFaktora collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RachunekBankowyFaktoraSpecified
        {
            get
            {
                return (this.RachunekBankowyFaktora.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Skonto</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Skonto")]
        [System.Xml.Serialization.XmlElementAttribute("Skonto")]
        public FakturaFaPlatnoscSkonto Skonto { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaPlatnoscZaplataCzesciowa", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaPlatnoscZaplataCzesciowa
    {
        
        /// <summary>
        /// <para>Kwota zapłaty częściowej</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota zapłaty częściowej")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("KwotaZaplatyCzesciowej")]
        public decimal KwotaZaplatyCzesciowej { get; set; }
        
        /// <summary>
        /// <para>Data zapłaty częściowej, jeśli do wystawienia faktury płatność częściowa została dokonana</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data zapłaty częściowej, jeśli do wystawienia faktury płatność częściowa została " +
            "dokonana")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2016-07-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DataZaplatyCzesciowej", DataType="date")]
        public System.DateTime DataZaplatyCzesciowej { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaPlatnoscTerminPlatnosci", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaPlatnoscTerminPlatnosci
    {
        
        /// <summary>
        /// <para>Termin płatności</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Termin płatności")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2016-07-01", "2050-01-01")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("Termin", DataType="date")]
        public System.DateTime Termin { get; set; }
        
        /// <summary>
        /// <para>Opis terminu płatności</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Opis terminu płatności")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("TerminOpis")]
        public string TerminOpis { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaPlatnoscSkonto", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaPlatnoscSkonto
    {
        
        /// <summary>
        /// <para>Warunki, które nabywca powinien spełnić aby skorzystać ze skonta</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Warunki, które nabywca powinien spełnić aby skorzystać ze skonta")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("WarunkiSkonta")]
        public string WarunkiSkonta { get; set; }
        
        /// <summary>
        /// <para>Wysokość skonta</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wysokość skonta")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("WysokoscSkonta")]
        public string WysokoscSkonta { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaWarunkiTransakcji", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaWarunkiTransakcji
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiUmowy> _umowy;
        
        [System.Xml.Serialization.XmlElementAttribute("Umowy")]
        public System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiUmowy> Umowy
        {
            get
            {
                return _umowy;
            }
            private set
            {
                _umowy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Umowy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UmowySpecified
        {
            get
            {
                return (this.Umowy.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaFaWarunkiTransakcji" /> class.</para>
        /// </summary>
        public FakturaFaWarunkiTransakcji()
        {
            this._umowy = new System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiUmowy>();
            this._zamowienia = new System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiZamowienia>();
            this._nrPartiiTowaru = new System.Collections.ObjectModel.Collection<string>();
            this._transport = new System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiTransport>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiZamowienia> _zamowienia;
        
        [System.Xml.Serialization.XmlElementAttribute("Zamowienia")]
        public System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiZamowienia> Zamowienia
        {
            get
            {
                return _zamowienia;
            }
            private set
            {
                _zamowienia = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Zamowienia collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZamowieniaSpecified
        {
            get
            {
                return (this.Zamowienia.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _nrPartiiTowaru;
        
        /// <summary>
        /// <para>Numery partii towaru</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numery partii towaru")]
        [System.Xml.Serialization.XmlElementAttribute("NrPartiiTowaru")]
        public System.Collections.ObjectModel.Collection<string> NrPartiiTowaru
        {
            get
            {
                return _nrPartiiTowaru;
            }
            private set
            {
                _nrPartiiTowaru = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NrPartiiTowaru collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NrPartiiTowaruSpecified
        {
            get
            {
                return (this.NrPartiiTowaru.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Warunki dostawy towarów - w przypadku istnienia pomiędzy stronami transakcji, umowy określającej warunki dostawy tzw. Incoterms</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Warunki dostawy towarów - w przypadku istnienia pomiędzy stronami transakcji, umo" +
            "wy określającej warunki dostawy tzw. Incoterms")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("WarunkiDostawy")]
        public string WarunkiDostawy { get; set; }
        
        /// <summary>
        /// <para>Kurs umowny - w przypadkach, gdy na fakturze znajduje się informacja o kursie, po którym zostały przeliczone kwoty wykazane na fakturze w złotych. Nie dotyczy przypadków, o których mowa w Dziale VI ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kurs umowny - w przypadkach, gdy na fakturze znajduje się informacja o kursie, po" +
            " którym zostały przeliczone kwoty wykazane na fakturze w złotych. Nie dotyczy pr" +
            "zypadków, o których mowa w Dziale VI ustawy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,6})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KursUmowny")]
        public decimal KursUmownyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KursUmowny property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KursUmownyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kurs umowny - w przypadkach, gdy na fakturze znajduje się informacja o kursie, po którym zostały przeliczone kwoty wykazane na fakturze w złotych. Nie dotyczy przypadków, o których mowa w Dziale VI ustawy</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> KursUmowny
        {
            get
            {
                if (this.KursUmownyValueSpecified)
                {
                    return this.KursUmownyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KursUmownyValue = value.GetValueOrDefault();
                this.KursUmownyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Waluta umowna - trzyliterowy kod waluty (ISO-4217) w przypadkach, gdy na fakturze znajduje się informacja o kursie, po którym zostały przeliczone kwoty wykazane na fakturze w złotych. Nie dotyczy przypadków, o których mowa w Dziale VI ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waluta umowna - trzyliterowy kod waluty (ISO-4217) w przypadkach, gdy na fakturze" +
            " znajduje się informacja o kursie, po którym zostały przeliczone kwoty wykazane " +
            "na fakturze w złotych. Nie dotyczy przypadków, o których mowa w Dziale VI ustawy" +
            "")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("WalutaUmowna")]
        public TKodWaluty WalutaUmownaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WalutaUmowna property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WalutaUmownaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Waluta umowna - trzyliterowy kod waluty (ISO-4217) w przypadkach, gdy na fakturze znajduje się informacja o kursie, po którym zostały przeliczone kwoty wykazane na fakturze w złotych. Nie dotyczy przypadków, o których mowa w Dziale VI ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TKodWaluty> WalutaUmowna
        {
            get
            {
                if (this.WalutaUmownaValueSpecified)
                {
                    return this.WalutaUmownaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WalutaUmownaValue = value.GetValueOrDefault();
                this.WalutaUmownaValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiTransport> _transport;
        
        [System.Xml.Serialization.XmlElementAttribute("Transport")]
        public System.Collections.ObjectModel.Collection<FakturaFaWarunkiTransakcjiTransport> Transport
        {
            get
            {
                return _transport;
            }
            private set
            {
                _transport = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransportSpecified
        {
            get
            {
                return (this.Transport.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Wartość "1" oznacza dostawę dokonaną przez podmiot, o którym mowa w art. 22 ust. 2d ustawy. Pole dotyczy przypadku, w którym podmiot uczestniczy w transakcji łańcuchowej innej niż procedura trójstronna uproszczona, o której mowa w art. 135 ust. 1 pkt 4 ustawy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Wartość ""1"" oznacza dostawę dokonaną przez podmiot, o którym mowa w art. 22 ust. 2d ustawy. Pole dotyczy przypadku, w którym podmiot uczestniczy w transakcji łańcuchowej innej niż procedura trójstronna uproszczona, o której mowa w art. 135 ust. 1 pkt 4 ustawy")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PodmiotPosredniczacy")]
        public ProFak.IO.FA_2.TWybor1 PodmiotPosredniczacyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PodmiotPosredniczacy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PodmiotPosredniczacyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Wartość "1" oznacza dostawę dokonaną przez podmiot, o którym mowa w art. 22 ust. 2d ustawy. Pole dotyczy przypadku, w którym podmiot uczestniczy w transakcji łańcuchowej innej niż procedura trójstronna uproszczona, o której mowa w art. 135 ust. 1 pkt 4 ustawy</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> PodmiotPosredniczacy
        {
            get
            {
                if (this.PodmiotPosredniczacyValueSpecified)
                {
                    return this.PodmiotPosredniczacyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PodmiotPosredniczacyValue = value.GetValueOrDefault();
                this.PodmiotPosredniczacyValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaWarunkiTransakcjiUmowy", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaWarunkiTransakcjiUmowy
    {
        
        /// <summary>
        /// <para>Data umowy</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data umowy")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2016-07-01", "2050-01-01")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DataUmowy", DataType="date")]
        public System.DateTime DataUmowyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataUmowy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataUmowyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Data umowy</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DataUmowy
        {
            get
            {
                if (this.DataUmowyValueSpecified)
                {
                    return this.DataUmowyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataUmowyValue = value.GetValueOrDefault();
                this.DataUmowyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer umowy</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer umowy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrUmowy")]
        public string NrUmowy { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaWarunkiTransakcjiZamowienia", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaWarunkiTransakcjiZamowienia
    {
        
        /// <summary>
        /// <para>Data zamówienia</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data zamówienia")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((\\d{4})-(\\d{2})-(\\d{2}))")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2016-07-01", "2050-01-01")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DataZamowienia", DataType="date")]
        public System.DateTime DataZamowieniaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataZamowienia property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataZamowieniaValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Data zamówienia</para>
        /// <para>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</para>
        /// <para xml:lang="en">Minimum inclusive value: 2016-07-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01.</para>
        /// <para xml:lang="en">Pattern: ((\d{4})-(\d{2})-(\d{2})).</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DataZamowienia
        {
            get
            {
                if (this.DataZamowieniaValueSpecified)
                {
                    return this.DataZamowieniaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataZamowieniaValue = value.GetValueOrDefault();
                this.DataZamowieniaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Numer zamówienia</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer zamówienia")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrZamowienia")]
        public string NrZamowienia { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaWarunkiTransakcjiTransport", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaWarunkiTransakcjiTransport
    {
        
        /// <summary>
        /// <para>Rodzaj zastosowanego transportu w przypadku dokonanej dostawy towarów</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rodzaj zastosowanego transportu w przypadku dokonanej dostawy towarów")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("RodzajTransportu")]
        public TRodzajTransportu RodzajTransportuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RodzajTransportu property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RodzajTransportuValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Rodzaj zastosowanego transportu w przypadku dokonanej dostawy towarów</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TRodzajTransportu> RodzajTransportu
        {
            get
            {
                if (this.RodzajTransportuValueSpecified)
                {
                    return this.RodzajTransportuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RodzajTransportuValue = value.GetValueOrDefault();
                this.RodzajTransportuValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik innego rodzaju transportu: 1 - inny rodzaj transportu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik innego rodzaju transportu: 1 - inny rodzaj transportu")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("TransportInny")]
        public ProFak.IO.FA_2.TWybor1 TransportInnyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransportInny property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TransportInnyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik innego rodzaju transportu: 1 - inny rodzaj transportu</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> TransportInny
        {
            get
            {
                if (this.TransportInnyValueSpecified)
                {
                    return this.TransportInnyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransportInnyValue = value.GetValueOrDefault();
                this.TransportInnyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Opis innego rodzaju transportu</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Opis innego rodzaju transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("OpisInnegoTransportu")]
        public string OpisInnegoTransportu { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Przewoznik")]
        public FakturaFaWarunkiTransakcjiTransportPrzewoznik Przewoznik { get; set; }
        
        /// <summary>
        /// <para>Numer zlecenia transportu</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer zlecenia transportu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("NrZleceniaTransportu")]
        public string NrZleceniaTransportu { get; set; }
        
        /// <summary>
        /// <para>Rodzaj ładunku</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rodzaj ładunku")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OpisLadunku")]
        public TLadunek OpisLadunkuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpisLadunku property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OpisLadunkuValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Rodzaj ładunku</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TLadunek> OpisLadunku
        {
            get
            {
                if (this.OpisLadunkuValueSpecified)
                {
                    return this.OpisLadunkuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OpisLadunkuValue = value.GetValueOrDefault();
                this.OpisLadunkuValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik innego ładunku: 1 - inny ładunek</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik innego ładunku: 1 - inny ładunek")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LadunekInny")]
        public ProFak.IO.FA_2.TWybor1 LadunekInnyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LadunekInny property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LadunekInnyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik innego ładunku: 1 - inny ładunek</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> LadunekInny
        {
            get
            {
                if (this.LadunekInnyValueSpecified)
                {
                    return this.LadunekInnyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LadunekInnyValue = value.GetValueOrDefault();
                this.LadunekInnyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Opis innego ładunku, w tym ładunek mieszany</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Opis innego ładunku, w tym ładunek mieszany")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("OpisInnegoLadunku")]
        public string OpisInnegoLadunku { get; set; }
        
        /// <summary>
        /// <para>Jednostka opakowania</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jednostka opakowania")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("JednostkaOpakowania")]
        public string JednostkaOpakowania { get; set; }
        
        /// <summary>
        /// <para>Data i godzina rozpoczęcia transportu</para>
        /// <para>Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z</para>
        /// <para xml:lang="en">Minimum inclusive value: 2021-10-01T00:00:00Z.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01T23:59:59Z.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data i godzina rozpoczęcia transportu")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2021-10-01T00:00:00Z", "2050-01-01T23:59:59Z")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DataGodzRozpTransportu", DataType="dateTime")]
        public System.DateTime DataGodzRozpTransportuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataGodzRozpTransportu property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataGodzRozpTransportuValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Data i godzina rozpoczęcia transportu</para>
        /// <para>Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z</para>
        /// <para xml:lang="en">Minimum inclusive value: 2021-10-01T00:00:00Z.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01T23:59:59Z.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DataGodzRozpTransportu
        {
            get
            {
                if (this.DataGodzRozpTransportuValueSpecified)
                {
                    return this.DataGodzRozpTransportuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataGodzRozpTransportuValue = value.GetValueOrDefault();
                this.DataGodzRozpTransportuValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Data i godzina zakończenia transportu</para>
        /// <para>Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z</para>
        /// <para xml:lang="en">Minimum inclusive value: 2021-10-01T00:00:00Z.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01T23:59:59Z.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data i godzina zakończenia transportu")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(System.DateTime), "2021-10-01T00:00:00Z", "2050-01-01T23:59:59Z")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DataGodzZakTransportu", DataType="dateTime")]
        public System.DateTime DataGodzZakTransportuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataGodzZakTransportu property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataGodzZakTransportuValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Data i godzina zakończenia transportu</para>
        /// <para>Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z</para>
        /// <para xml:lang="en">Minimum inclusive value: 2021-10-01T00:00:00Z.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2050-01-01T23:59:59Z.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DataGodzZakTransportu
        {
            get
            {
                if (this.DataGodzZakTransportuValueSpecified)
                {
                    return this.DataGodzZakTransportuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataGodzZakTransportuValue = value.GetValueOrDefault();
                this.DataGodzZakTransportuValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Adres miejsca wysyłki</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres miejsca wysyłki")]
        [System.Xml.Serialization.XmlElementAttribute("WysylkaZ")]
        public TAdres WysylkaZ { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TAdres> _wysylkaPrzez;
        
        /// <summary>
        /// <para>Adres pośredni wysyłki</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres pośredni wysyłki")]
        [System.Xml.Serialization.XmlElementAttribute("WysylkaPrzez")]
        public System.Collections.ObjectModel.Collection<TAdres> WysylkaPrzez
        {
            get
            {
                return _wysylkaPrzez;
            }
            private set
            {
                _wysylkaPrzez = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WysylkaPrzez collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WysylkaPrzezSpecified
        {
            get
            {
                return (this.WysylkaPrzez.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaFaWarunkiTransakcjiTransport" /> class.</para>
        /// </summary>
        public FakturaFaWarunkiTransakcjiTransport()
        {
            this._wysylkaPrzez = new System.Collections.ObjectModel.Collection<TAdres>();
        }
        
        /// <summary>
        /// <para>Adres miejsca docelowego, do którego został zlecony transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres miejsca docelowego, do którego został zlecony transport")]
        [System.Xml.Serialization.XmlElementAttribute("WysylkaDo")]
        public TAdres WysylkaDo { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaWarunkiTransakcjiTransportPrzewoznik", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaWarunkiTransakcjiTransportPrzewoznik
    {
        
        /// <summary>
        /// <para>Dane identyfikacyjne przewoźnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dane identyfikacyjne przewoźnika")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("DaneIdentyfikacyjne")]
        public TPodmiot2 DaneIdentyfikacyjne { get; set; }
        
        /// <summary>
        /// <para>Adres przewoźnika</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adres przewoźnika")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("AdresPrzewoznika")]
        public TAdres AdresPrzewoznika { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaZamowienie", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaZamowienie
    {
        
        /// <summary>
        /// <para>Wartość zamówienia lub umowy z uwzględnieniem kwoty podatku</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wartość zamówienia lub umowy z uwzględnieniem kwoty podatku")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("WartoscZamowienia")]
        public decimal WartoscZamowienia { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaFaZamowienieZamowienieWiersz> _zamowienieWiersz;
        
        /// <summary>
        /// <para>Szczegółowe pozycje zamówienia lub umowy w walucie, w której wystawiono fakturę zaliczkową</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Szczegółowe pozycje zamówienia lub umowy w walucie, w której wystawiono fakturę z" +
            "aliczkową")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ZamowienieWiersz")]
        public System.Collections.ObjectModel.Collection<FakturaFaZamowienieZamowienieWiersz> ZamowienieWiersz
        {
            get
            {
                return _zamowienieWiersz;
            }
            private set
            {
                _zamowienieWiersz = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaFaZamowienie" /> class.</para>
        /// </summary>
        public FakturaFaZamowienie()
        {
            this._zamowienieWiersz = new System.Collections.ObjectModel.Collection<FakturaFaZamowienieZamowienieWiersz>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaFaZamowienieZamowienieWiersz", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaFaZamowienieZamowienieWiersz
    {
        
        /// <summary>
        /// <para>Kolejny numer wiersza zamówienia lub umowy</para>
        /// <para>Liczby naturalne większe od zera</para>
        /// <para xml:lang="en">Total number of digits: 14.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kolejny numer wiersza zamówienia lub umowy")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NrWierszaZam")]
        public ulong NrWierszaZam { get; set; }
        
        /// <summary>
        /// <para>Uniwersalny unikalny numer wiersza zamówienia lub umowy</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uniwersalny unikalny numer wiersza zamówienia lub umowy")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("UU_IDZ")]
        public string UU_IDZ { get; set; }
        
        /// <summary>
        /// <para>Nazwa (rodzaj) towaru lub usługi</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nazwa (rodzaj) towaru lub usługi")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_7Z")]
        public string P_7Z { get; set; }
        
        /// <summary>
        /// <para>Pole przeznaczone do wpisania wewnętrznego kodu towaru lub usługi nadanego przez podatnika albo dodatkowego opisu</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pole przeznaczone do wpisania wewnętrznego kodu towaru lub usługi nadanego przez " +
            "podatnika albo dodatkowego opisu")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("IndeksZ")]
        public string IndeksZ { get; set; }
        
        /// <summary>
        /// <para>Globalny numer jednostki handlowej</para>
        /// <para>Typ znakowy ograniczony do 20 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Globalny numer jednostki handlowej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("GTINZ")]
        public string GTINZ { get; set; }
        
        /// <summary>
        /// <para>Symbol Polskiej Klasyfikacji Wyrobów i Usług</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Symbol Polskiej Klasyfikacji Wyrobów i Usług")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("PKWiUZ")]
        public string PKWiUZ { get; set; }
        
        /// <summary>
        /// <para>Symbol Nomenklatury Scalonej</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Symbol Nomenklatury Scalonej")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("CNZ")]
        public string CNZ { get; set; }
        
        /// <summary>
        /// <para>Symbol Polskiej Klasyfikacji Obiektów Budowlanych</para>
        /// <para>Typ znakowy ograniczony do 50 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Symbol Polskiej Klasyfikacji Obiektów Budowlanych")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("PKOBZ")]
        public string PKOBZ { get; set; }
        
        /// <summary>
        /// <para>Miara zamówionego towaru lub zakres usługi</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miara zamówionego towaru lub zakres usługi")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("P_8AZ")]
        public string P_8AZ { get; set; }
        
        /// <summary>
        /// <para>Ilość zamówionego towaru lub zakres usługi</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ilość zamówionego towaru lub zakres usługi")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,6})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_8BZ")]
        public decimal P_8BZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_8BZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_8BZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Ilość zamówionego towaru lub zakres usługi</para>
        /// <para>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,6})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_8BZ
        {
            get
            {
                if (this.P_8BZValueSpecified)
                {
                    return this.P_8BZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_8BZValue = value.GetValueOrDefault();
                this.P_8BZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Cena jednostkowa netto</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cena jednostkowa netto")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,13}|0)(\\.\\d{1,8})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_9AZ")]
        public decimal P_9AZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_9AZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_9AZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Cena jednostkowa netto</para>
        /// <para>Wartość numeryczna 22 znaki max, w tym 8 znaków po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 22.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 8.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,13}|0)(\.\d{1,8})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_9AZ
        {
            get
            {
                if (this.P_9AZValueSpecified)
                {
                    return this.P_9AZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_9AZValue = value.GetValueOrDefault();
                this.P_9AZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Wartość zamówionego towaru lub usługi bez kwoty podatku</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wartość zamówionego towaru lub usługi bez kwoty podatku")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_11NettoZ")]
        public decimal P_11NettoZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_11NettoZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_11NettoZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Wartość zamówionego towaru lub usługi bez kwoty podatku</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_11NettoZ
        {
            get
            {
                if (this.P_11NettoZValueSpecified)
                {
                    return this.P_11NettoZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_11NettoZValue = value.GetValueOrDefault();
                this.P_11NettoZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku od zamówionego towaru lub usługi</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota podatku od zamówionego towaru lub usługi")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_11VatZ")]
        public decimal P_11VatZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_11VatZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_11VatZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku od zamówionego towaru lub usługi</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_11VatZ
        {
            get
            {
                if (this.P_11VatZValueSpecified)
                {
                    return this.P_11VatZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_11VatZValue = value.GetValueOrDefault();
                this.P_11VatZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Stawka podatku</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stawka podatku")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_12Z")]
        public TStawkaPodatku P_12ZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_12Z property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_12ZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Stawka podatku</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TStawkaPodatku> P_12Z
        {
            get
            {
                if (this.P_12ZValueSpecified)
                {
                    return this.P_12ZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_12ZValue = value.GetValueOrDefault();
                this.P_12ZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Stawka podatku od wartości dodanej w przypadku, o którym mowa w dziale XII w rozdziale 6a ustawy</para>
        /// <para>Wartość procentowa z dokładnością do 6 miejsc po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 9.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stawka podatku od wartości dodanej w przypadku, o którym mowa w dziale XII w rozd" +
            "ziale 6a ustawy")]
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0", "100")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_12Z_XII")]
        public decimal P_12Z_XIIValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_12Z_XII property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_12Z_XIIValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Stawka podatku od wartości dodanej w przypadku, o którym mowa w dziale XII w rozdziale 6a ustawy</para>
        /// <para>Wartość procentowa z dokładnością do 6 miejsc po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 9.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> P_12Z_XII
        {
            get
            {
                if (this.P_12Z_XIIValueSpecified)
                {
                    return this.P_12Z_XIIValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_12Z_XIIValue = value.GetValueOrDefault();
                this.P_12Z_XIIValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik dla towaru lub usługi wymienionych w załączniku nr 15 do ustawy - wartość "1"</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Znacznik dla towaru lub usługi wymienionych w załączniku nr 15 do ustawy - wartoś" +
            "ć \"1\"")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("P_12Z_Zal_15")]
        public ProFak.IO.FA_2.TWybor1 P_12Z_Zal_15Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the P_12Z_Zal_15 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool P_12Z_Zal_15ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik dla towaru lub usługi wymienionych w załączniku nr 15 do ustawy - wartość "1"</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> P_12Z_Zal_15
        {
            get
            {
                if (this.P_12Z_Zal_15ValueSpecified)
                {
                    return this.P_12Z_Zal_15Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.P_12Z_Zal_15Value = value.GetValueOrDefault();
                this.P_12Z_Zal_15ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Oznaczenie dotyczące dostawy towarów i świadczenia usług</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenie dotyczące dostawy towarów i świadczenia usług")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("GTUZ")]
        public TGTU GTUZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GTUZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GTUZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Oznaczenie dotyczące dostawy towarów i świadczenia usług</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TGTU> GTUZ
        {
            get
            {
                if (this.GTUZValueSpecified)
                {
                    return this.GTUZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GTUZValue = value.GetValueOrDefault();
                this.GTUZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Oznaczenia dotyczące procedur</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oznaczenia dotyczące procedur")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ProceduraZ")]
        public TOznaczenieProceduryZ ProceduraZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProceduraZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ProceduraZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Oznaczenia dotyczące procedur</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TOznaczenieProceduryZ> ProceduraZ
        {
            get
            {
                if (this.ProceduraZValueSpecified)
                {
                    return this.ProceduraZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProceduraZValue = value.GetValueOrDefault();
                this.ProceduraZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Kwota podatku akcyzowego zawarta w cenie towaru</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwota podatku akcyzowego zawarta w cenie towaru")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("-?([1-9]\\d{0,15}|0)(\\.\\d{1,2})?")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("KwotaAkcyzyZ")]
        public decimal KwotaAkcyzyZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KwotaAkcyzyZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool KwotaAkcyzyZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Kwota podatku akcyzowego zawarta w cenie towaru</para>
        /// <para>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</para>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Pattern: -?([1-9]\d{0,15}|0)(\.\d{1,2})?.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> KwotaAkcyzyZ
        {
            get
            {
                if (this.KwotaAkcyzyZValueSpecified)
                {
                    return this.KwotaAkcyzyZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KwotaAkcyzyZValue = value.GetValueOrDefault();
                this.KwotaAkcyzyZValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>Znacznik stanu przed korektą w przypadku faktury korygującej fakturę dokumentującą otrzymanie zapłaty lub jej części przed dokonaniem czynności oraz fakturę wystawioną w związku z art. 106f ust. 4 ustawy, w przypadku gdy korekta dotyczy danych wykazanych w pozycjach zamówienia i jest dokonywana w sposób polegający na wykazaniu danych przed korektą i po korekcie jako osobnych wierszy z odrębną numeracją oraz w przypadku potwierdzania braku zmiany wartości danej pozycji</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Znacznik stanu przed korektą w przypadku faktury korygującej fakturę dokumentującą otrzymanie zapłaty lub jej części przed dokonaniem czynności oraz fakturę wystawioną w związku z art. 106f ust. 4 ustawy, w przypadku gdy korekta dotyczy danych wykazanych w pozycjach zamówienia i jest dokonywana w sposób polegający na wykazaniu danych przed korektą i po korekcie jako osobnych wierszy z odrębną numeracją oraz w przypadku potwierdzania braku zmiany wartości danej pozycji")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("StanPrzedZ")]
        public ProFak.IO.FA_2.TWybor1 StanPrzedZValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StanPrzedZ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StanPrzedZValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Znacznik stanu przed korektą w przypadku faktury korygującej fakturę dokumentującą otrzymanie zapłaty lub jej części przed dokonaniem czynności oraz fakturę wystawioną w związku z art. 106f ust. 4 ustawy, w przypadku gdy korekta dotyczy danych wykazanych w pozycjach zamówienia i jest dokonywana w sposób polegający na wykazaniu danych przed korektą i po korekcie jako osobnych wierszy z odrębną numeracją oraz w przypadku potwierdzania braku zmiany wartości danej pozycji</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ProFak.IO.FA_2.TWybor1> StanPrzedZ
        {
            get
            {
                if (this.StanPrzedZValueSpecified)
                {
                    return this.StanPrzedZValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StanPrzedZValue = value.GetValueOrDefault();
                this.StanPrzedZValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaStopka", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaStopka
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaStopkaInformacje> _informacje;
        
        /// <summary>
        /// <para>Pozostałe dane</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pozostałe dane")]
        [System.Xml.Serialization.XmlElementAttribute("Informacje")]
        public System.Collections.ObjectModel.Collection<FakturaStopkaInformacje> Informacje
        {
            get
            {
                return _informacje;
            }
            private set
            {
                _informacje = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Informacje collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InformacjeSpecified
        {
            get
            {
                return (this.Informacje.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FakturaStopka" /> class.</para>
        /// </summary>
        public FakturaStopka()
        {
            this._informacje = new System.Collections.ObjectModel.Collection<FakturaStopkaInformacje>();
            this._rejestry = new System.Collections.ObjectModel.Collection<FakturaStopkaRejestry>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FakturaStopkaRejestry> _rejestry;
        
        /// <summary>
        /// <para>Numery podmiotu lub grupy podmiotów w innych rejestrach i bazach danych</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numery podmiotu lub grupy podmiotów w innych rejestrach i bazach danych")]
        [System.Xml.Serialization.XmlElementAttribute("Rejestry")]
        public System.Collections.ObjectModel.Collection<FakturaStopkaRejestry> Rejestry
        {
            get
            {
                return _rejestry;
            }
            private set
            {
                _rejestry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Rejestry collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RejestrySpecified
        {
            get
            {
                return (this.Rejestry.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaStopkaInformacje", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaStopkaInformacje
    {
        
        /// <summary>
        /// <para>Stopka faktury</para>
        /// <para>Typ znakowy ograniczony do 3500 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 3500.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stopka faktury")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(3500)]
        [System.Xml.Serialization.XmlElementAttribute("StopkaFaktury")]
        public string StopkaFaktury { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FakturaStopkaRejestry", Namespace="http://crd.gov.pl/wzor/2023/06/29/12648/", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FakturaStopkaRejestry
    {
        
        /// <summary>
        /// <para>Pełna nazwa</para>
        /// <para>Typ znakowy ograniczony do 256 znaków</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 256.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pełna nazwa")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(256)]
        [System.Xml.Serialization.XmlElementAttribute("PelnaNazwa")]
        public string PelnaNazwa { get; set; }
        
        /// <summary>
        /// <para>Numer Krajowego Rejestru Sądowego</para>
        /// <para>Numer Krajowego Rejestru Sądowego</para>
        /// <para xml:lang="en">Pattern: \d{10}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer Krajowego Rejestru Sądowego")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{10}")]
        [System.Xml.Serialization.XmlElementAttribute("KRS")]
        public string KRS { get; set; }
        
        /// <summary>
        /// <para>REGON</para>
        /// <para>Numer REGON</para>
        /// <para xml:lang="en">Pattern: (\d{9})|(\d{14}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REGON")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\d{9})|(\\d{14})")]
        [System.Xml.Serialization.XmlElementAttribute("REGON")]
        public string REGON { get; set; }
        
        /// <summary>
        /// <para>Numer w Bazie Danych o Odpadach</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numer w Bazie Danych o Odpadach")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.Xml.Serialization.XmlElementAttribute("BDO")]
        public string BDO { get; set; }
    }
}
